

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jan 08 18:02:56 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 1.44
    46                           ; Generated 14/09/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  00464C                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _play_mode
    85  00464C  0003               	dw	3
    86                           
    87                           	psect	mediumconst
    88  0079AC                     __pmediumconst:
    89                           	opt stack 0
    90  0079AC  00                 	db	0
    91  0079AD                     _arrow:
    92                           	opt stack 0
    93  0079AD  00                 	db	0
    94  0079AE  64                 	db	100
    95  0079AF  64                 	db	100
    96  0079B0  64                 	db	100
    97  0079B1  01                 	db	1
    98  0079B2  04                 	db	4
    99  0079B3  05                 	db	5
   100  0079B4  64                 	db	100
   101  0079B5  06                 	db	6
   102  0079B6  09                 	db	9
   103  0079B7  0A                 	db	10
   104  0079B8  64                 	db	100
   105  0079B9  0B                 	db	11
   106  0079BA  0E                 	db	14
   107  0079BB  0F                 	db	15
   108  0079BC  64                 	db	100
   109  0079BD  01                 	db	1
   110  0079BE  64                 	db	100
   111  0079BF  64                 	db	100
   112  0079C0  64                 	db	100
   113  0079C1  00                 	db	0
   114  0079C2  02                 	db	2
   115  0079C3  05                 	db	5
   116  0079C4  64                 	db	100
   117  0079C5  04                 	db	4
   118  0079C6  06                 	db	6
   119  0079C7  09                 	db	9
   120  0079C8  64                 	db	100
   121  0079C9  08                 	db	8
   122  0079CA  0A                 	db	10
   123  0079CB  0D                 	db	13
   124  0079CC  64                 	db	100
   125  0079CD  02                 	db	2
   126  0079CE  64                 	db	100
   127  0079CF  64                 	db	100
   128  0079D0  64                 	db	100
   129  0079D1  01                 	db	1
   130  0079D2  03                 	db	3
   131  0079D3  06                 	db	6
   132  0079D4  64                 	db	100
   133  0079D5  05                 	db	5
   134  0079D6  07                 	db	7
   135  0079D7  0A                 	db	10
   136  0079D8  64                 	db	100
   137  0079D9  09                 	db	9
   138  0079DA  0B                 	db	11
   139  0079DB  0E                 	db	14
   140  0079DC  64                 	db	100
   141  0079DD  03                 	db	3
   142  0079DE  64                 	db	100
   143  0079DF  64                 	db	100
   144  0079E0  64                 	db	100
   145  0079E1  02                 	db	2
   146  0079E2  06                 	db	6
   147  0079E3  07                 	db	7
   148  0079E4  64                 	db	100
   149  0079E5  05                 	db	5
   150  0079E6  09                 	db	9
   151  0079E7  0A                 	db	10
   152  0079E8  64                 	db	100
   153  0079E9  08                 	db	8
   154  0079EA  0C                 	db	12
   155  0079EB  0D                 	db	13
   156  0079EC  64                 	db	100
   157  0079ED  04                 	db	4
   158  0079EE  64                 	db	100
   159  0079EF  64                 	db	100
   160  0079F0  64                 	db	100
   161  0079F1  00                 	db	0
   162  0079F2  05                 	db	5
   163  0079F3  08                 	db	8
   164  0079F4  64                 	db	100
   165  0079F5  01                 	db	1
   166  0079F6  06                 	db	6
   167  0079F7  09                 	db	9
   168  0079F8  64                 	db	100
   169  0079F9  02                 	db	2
   170  0079FA  07                 	db	7
   171  0079FB  0A                 	db	10
   172  0079FC  64                 	db	100
   173  0079FD  05                 	db	5
   174  0079FE  64                 	db	100
   175  0079FF  64                 	db	100
   176  007A00  64                 	db	100
   177  007A01  01                 	db	1
   178  007A02  04                 	db	4
   179  007A03  06                 	db	6
   180  007A04  09                 	db	9
   181  007A05  07                 	db	7
   182  007A06  0D                 	db	13
   183  007A07  64                 	db	100
   184  007A08  64                 	db	100
   185  007A09  64                 	db	100
   186  007A0A  64                 	db	100
   187  007A0B  64                 	db	100
   188  007A0C  64                 	db	100
   189  007A0D  06                 	db	6
   190  007A0E  64                 	db	100
   191  007A0F  64                 	db	100
   192  007A10  64                 	db	100
   193  007A11  02                 	db	2
   194  007A12  05                 	db	5
   195  007A13  07                 	db	7
   196  007A14  0A                 	db	10
   197  007A15  04                 	db	4
   198  007A16  0E                 	db	14
   199  007A17  64                 	db	100
   200  007A18  64                 	db	100
   201  007A19  64                 	db	100
   202  007A1A  64                 	db	100
   203  007A1B  64                 	db	100
   204  007A1C  64                 	db	100
   205  007A1D  07                 	db	7
   206  007A1E  64                 	db	100
   207  007A1F  64                 	db	100
   208  007A20  64                 	db	100
   209  007A21  03                 	db	3
   210  007A22  06                 	db	6
   211  007A23  0B                 	db	11
   212  007A24  64                 	db	100
   213  007A25  02                 	db	2
   214  007A26  05                 	db	5
   215  007A27  0A                 	db	10
   216  007A28  64                 	db	100
   217  007A29  01                 	db	1
   218  007A2A  04                 	db	4
   219  007A2B  09                 	db	9
   220  007A2C  64                 	db	100
   221  007A2D  08                 	db	8
   222  007A2E  64                 	db	100
   223  007A2F  64                 	db	100
   224  007A30  64                 	db	100
   225  007A31  04                 	db	4
   226  007A32  09                 	db	9
   227  007A33  0C                 	db	12
   228  007A34  64                 	db	100
   229  007A35  05                 	db	5
   230  007A36  0A                 	db	10
   231  007A37  0D                 	db	13
   232  007A38  64                 	db	100
   233  007A39  06                 	db	6
   234  007A3A  0B                 	db	11
   235  007A3B  0E                 	db	14
   236  007A3C  64                 	db	100
   237  007A3D  09                 	db	9
   238  007A3E  64                 	db	100
   239  007A3F  64                 	db	100
   240  007A40  64                 	db	100
   241  007A41  05                 	db	5
   242  007A42  08                 	db	8
   243  007A43  0A                 	db	10
   244  007A44  0D                 	db	13
   245  007A45  01                 	db	1
   246  007A46  0B                 	db	11
   247  007A47  64                 	db	100
   248  007A48  64                 	db	100
   249  007A49  64                 	db	100
   250  007A4A  64                 	db	100
   251  007A4B  64                 	db	100
   252  007A4C  64                 	db	100
   253  007A4D  0A                 	db	10
   254  007A4E  64                 	db	100
   255  007A4F  64                 	db	100
   256  007A50  64                 	db	100
   257  007A51  06                 	db	6
   258  007A52  09                 	db	9
   259  007A53  0B                 	db	11
   260  007A54  0E                 	db	14
   261  007A55  02                 	db	2
   262  007A56  08                 	db	8
   263  007A57  64                 	db	100
   264  007A58  64                 	db	100
   265  007A59  64                 	db	100
   266  007A5A  64                 	db	100
   267  007A5B  64                 	db	100
   268  007A5C  64                 	db	100
   269  007A5D  0B                 	db	11
   270  007A5E  64                 	db	100
   271  007A5F  64                 	db	100
   272  007A60  64                 	db	100
   273  007A61  07                 	db	7
   274  007A62  0A                 	db	10
   275  007A63  0F                 	db	15
   276  007A64  64                 	db	100
   277  007A65  06                 	db	6
   278  007A66  09                 	db	9
   279  007A67  0E                 	db	14
   280  007A68  64                 	db	100
   281  007A69  05                 	db	5
   282  007A6A  08                 	db	8
   283  007A6B  0D                 	db	13
   284  007A6C  64                 	db	100
   285  007A6D  0C                 	db	12
   286  007A6E  64                 	db	100
   287  007A6F  64                 	db	100
   288  007A70  64                 	db	100
   289  007A71  08                 	db	8
   290  007A72  09                 	db	9
   291  007A73  0D                 	db	13
   292  007A74  64                 	db	100
   293  007A75  05                 	db	5
   294  007A76  06                 	db	6
   295  007A77  0A                 	db	10
   296  007A78  64                 	db	100
   297  007A79  02                 	db	2
   298  007A7A  03                 	db	3
   299  007A7B  07                 	db	7
   300  007A7C  64                 	db	100
   301  007A7D  0D                 	db	13
   302  007A7E  64                 	db	100
   303  007A7F  64                 	db	100
   304  007A80  64                 	db	100
   305  007A81  09                 	db	9
   306  007A82  0C                 	db	12
   307  007A83  0E                 	db	14
   308  007A84  64                 	db	100
   309  007A85  05                 	db	5
   310  007A86  08                 	db	8
   311  007A87  0A                 	db	10
   312  007A88  64                 	db	100
   313  007A89  01                 	db	1
   314  007A8A  04                 	db	4
   315  007A8B  06                 	db	6
   316  007A8C  64                 	db	100
   317  007A8D  0E                 	db	14
   318  007A8E  64                 	db	100
   319  007A8F  64                 	db	100
   320  007A90  64                 	db	100
   321  007A91  0A                 	db	10
   322  007A92  0D                 	db	13
   323  007A93  0F                 	db	15
   324  007A94  64                 	db	100
   325  007A95  06                 	db	6
   326  007A96  09                 	db	9
   327  007A97  0B                 	db	11
   328  007A98  64                 	db	100
   329  007A99  02                 	db	2
   330  007A9A  05                 	db	5
   331  007A9B  07                 	db	7
   332  007A9C  64                 	db	100
   333  007A9D  0F                 	db	15
   334  007A9E  64                 	db	100
   335  007A9F  64                 	db	100
   336  007AA0  64                 	db	100
   337  007AA1  0A                 	db	10
   338  007AA2  0B                 	db	11
   339  007AA3  0E                 	db	14
   340  007AA4  64                 	db	100
   341  007AA5  05                 	db	5
   342  007AA6  06                 	db	6
   343  007AA7  09                 	db	9
   344  007AA8  64                 	db	100
   345  007AA9  00                 	db	0
   346  007AAA  01                 	db	1
   347  007AAB  04                 	db	4
   348  007AAC  64                 	db	100
   349  007AAD                     __end_of_arrow:
   350                           	opt stack 0
   351  007AAD                     _show7_2:
   352                           	opt stack 0
   353  007AAD  00                 	db	0
   354  007AAE  05                 	db	5
   355  007AAF  0A                 	db	10
   356  007AB0  0F                 	db	15
   357  007AB1  13                 	db	19
   358  007AB2  16                 	db	22
   359  007AB3  19                 	db	25
   360  007AB4  1C                 	db	28
   361  007AB5  23                 	db	35
   362  007AB6  26                 	db	38
   363  007AB7  29                 	db	41
   364  007AB8  2C                 	db	44
   365  007AB9  30                 	db	48
   366  007ABA  35                 	db	53
   367  007ABB  3A                 	db	58
   368  007ABC  3F                 	db	63
   369  007ABD  64                 	db	100
   370  007ABE  64                 	db	100
   371  007ABF  64                 	db	100
   372  007AC0  64                 	db	100
   373  007AC1  64                 	db	100
   374  007AC2  64                 	db	100
   375  007AC3  64                 	db	100
   376  007AC4  64                 	db	100
   377  007AC5  04                 	db	4
   378  007AC6  09                 	db	9
   379  007AC7  0E                 	db	14
   380  007AC8  23                 	db	35
   381  007AC9  30                 	db	48
   382  007ACA  27                 	db	39
   383  007ACB  2A                 	db	42
   384  007ACC  2D                 	db	45
   385  007ACD  1C                 	db	28
   386  007ACE  31                 	db	49
   387  007ACF  36                 	db	54
   388  007AD0  3B                 	db	59
   389  007AD1  0F                 	db	15
   390  007AD2  18                 	db	24
   391  007AD3  15                 	db	21
   392  007AD4  12                 	db	18
   393  007AD5  64                 	db	100
   394  007AD6  64                 	db	100
   395  007AD7  64                 	db	100
   396  007AD8  64                 	db	100
   397  007AD9  64                 	db	100
   398  007ADA  64                 	db	100
   399  007ADB  64                 	db	100
   400  007ADC  64                 	db	100
   401  007ADD  03                 	db	3
   402  007ADE  10                 	db	16
   403  007ADF  06                 	db	6
   404  007AE0  07                 	db	7
   405  007AE1  0A                 	db	10
   406  007AE2  0B                 	db	11
   407  007AE3  0C                 	db	12
   408  007AE4  20                 	db	32
   409  007AE5  21                 	db	33
   410  007AE6  25                 	db	37
   411  007AE7  22                 	db	34
   412  007AE8  26                 	db	38
   413  007AE9  2F                 	db	47
   414  007AEA  3C                 	db	60
   415  007AEB  38                 	db	56
   416  007AEC  39                 	db	57
   417  007AED  34                 	db	52
   418  007AEE  35                 	db	53
   419  007AEF  1F                 	db	31
   420  007AF0  33                 	db	51
   421  007AF1  1A                 	db	26
   422  007AF2  1E                 	db	30
   423  007AF3  19                 	db	25
   424  007AF4  1D                 	db	29
   425  007AF5  02                 	db	2
   426  007AF6  03                 	db	3
   427  007AF7  05                 	db	5
   428  007AF8  06                 	db	6
   429  007AF9  0B                 	db	11
   430  007AFA  18                 	db	24
   431  007AFB  20                 	db	32
   432  007AFC  24                 	db	36
   433  007AFD  25                 	db	37
   434  007AFE  29                 	db	41
   435  007AFF  0E                 	db	14
   436  007B00  22                 	db	34
   437  007B01  3C                 	db	60
   438  007B02  3D                 	db	61
   439  007B03  39                 	db	57
   440  007B04  3A                 	db	58
   441  007B05  34                 	db	52
   442  007B06  27                 	db	39
   443  007B07  1B                 	db	27
   444  007B08  1F                 	db	31
   445  007B09  16                 	db	22
   446  007B0A  1A                 	db	26
   447  007B0B  1D                 	db	29
   448  007B0C  31                 	db	49
   449  007B0D  00                 	db	0
   450  007B0E  01                 	db	1
   451  007B0F  05                 	db	5
   452  007B10  06                 	db	6
   453  007B11  0A                 	db	10
   454  007B12  13                 	db	19
   455  007B13  17                 	db	23
   456  007B14  16                 	db	22
   457  007B15  1A                 	db	26
   458  007B16  19                 	db	25
   459  007B17  28                 	db	40
   460  007B18  2C                 	db	44
   461  007B19  25                 	db	37
   462  007B1A  29                 	db	41
   463  007B1B  26                 	db	38
   464  007B1C  3E                 	db	62
   465  007B1D  3F                 	db	63
   466  007B1E  39                 	db	57
   467  007B1F  3A                 	db	58
   468  007B20  35                 	db	53
   469  007B21  64                 	db	100
   470  007B22  64                 	db	100
   471  007B23  64                 	db	100
   472  007B24  64                 	db	100
   473  007B25  00                 	db	0
   474  007B26  01                 	db	1
   475  007B27  28                 	db	40
   476  007B28  2C                 	db	44
   477  007B29  3E                 	db	62
   478  007B2A  3F                 	db	63
   479  007B2B  13                 	db	19
   480  007B2C  17                 	db	23
   481  007B2D  64                 	db	100
   482  007B2E  64                 	db	100
   483  007B2F  64                 	db	100
   484  007B30  64                 	db	100
   485  007B31  64                 	db	100
   486  007B32  64                 	db	100
   487  007B33  64                 	db	100
   488  007B34  64                 	db	100
   489  007B35  64                 	db	100
   490  007B36  64                 	db	100
   491  007B37  64                 	db	100
   492  007B38  64                 	db	100
   493  007B39  64                 	db	100
   494  007B3A  64                 	db	100
   495  007B3B  64                 	db	100
   496  007B3C  64                 	db	100
   497  007B3D  00                 	db	0
   498  007B3E  2C                 	db	44
   499  007B3F  3F                 	db	63
   500  007B40  13                 	db	19
   501  007B41  64                 	db	100
   502  007B42  64                 	db	100
   503  007B43  64                 	db	100
   504  007B44  64                 	db	100
   505  007B45  64                 	db	100
   506  007B46  64                 	db	100
   507  007B47  64                 	db	100
   508  007B48  64                 	db	100
   509  007B49  64                 	db	100
   510  007B4A  64                 	db	100
   511  007B4B  64                 	db	100
   512  007B4C  64                 	db	100
   513  007B4D  64                 	db	100
   514  007B4E  64                 	db	100
   515  007B4F  64                 	db	100
   516  007B50  64                 	db	100
   517  007B51  64                 	db	100
   518  007B52  64                 	db	100
   519  007B53  64                 	db	100
   520  007B54  64                 	db	100
   521  007B55                     __end_of_show7_2:
   522                           	opt stack 0
   523  007B55                     _show0_3:
   524                           	opt stack 0
   525  007B55  0F                 	db	15
   526  007B56  1C                 	db	28
   527  007B57  23                 	db	35
   528  007B58  30                 	db	48
   529  007B59  64                 	db	100
   530  007B5A  64                 	db	100
   531  007B5B  64                 	db	100
   532  007B5C  64                 	db	100
   533  007B5D  64                 	db	100
   534  007B5E  64                 	db	100
   535  007B5F  64                 	db	100
   536  007B60  64                 	db	100
   537  007B61  64                 	db	100
   538  007B62  64                 	db	100
   539  007B63  64                 	db	100
   540  007B64  64                 	db	100
   541  007B65  64                 	db	100
   542  007B66  64                 	db	100
   543  007B67  64                 	db	100
   544  007B68  64                 	db	100
   545  007B69  0B                 	db	11
   546  007B6A  0E                 	db	14
   547  007B6B  22                 	db	34
   548  007B6C  27                 	db	39
   549  007B6D  18                 	db	24
   550  007B6E  1D                 	db	29
   551  007B6F  31                 	db	49
   552  007B70  34                 	db	52
   553  007B71  64                 	db	100
   554  007B72  64                 	db	100
   555  007B73  64                 	db	100
   556  007B74  64                 	db	100
   557  007B75  64                 	db	100
   558  007B76  64                 	db	100
   559  007B77  64                 	db	100
   560  007B78  64                 	db	100
   561  007B79  64                 	db	100
   562  007B7A  64                 	db	100
   563  007B7B  64                 	db	100
   564  007B7C  64                 	db	100
   565  007B7D  0A                 	db	10
   566  007B7E  0B                 	db	11
   567  007B7F  18                 	db	24
   568  007B80  19                 	db	25
   569  007B81  0E                 	db	14
   570  007B82  22                 	db	34
   571  007B83  26                 	db	38
   572  007B84  27                 	db	39
   573  007B85  34                 	db	52
   574  007B86  35                 	db	53
   575  007B87  1D                 	db	29
   576  007B88  31                 	db	49
   577  007B89  64                 	db	100
   578  007B8A  64                 	db	100
   579  007B8B  64                 	db	100
   580  007B8C  64                 	db	100
   581  007B8D  64                 	db	100
   582  007B8E  64                 	db	100
   583  007B8F  64                 	db	100
   584  007B90  64                 	db	100
   585  007B91  07                 	db	7
   586  007B92  0A                 	db	10
   587  007B93  0D                 	db	13
   588  007B94  21                 	db	33
   589  007B95  26                 	db	38
   590  007B96  2B                 	db	43
   591  007B97  14                 	db	20
   592  007B98  19                 	db	25
   593  007B99  1E                 	db	30
   594  007B9A  32                 	db	50
   595  007B9B  35                 	db	53
   596  007B9C  38                 	db	56
   597  007B9D  64                 	db	100
   598  007B9E  64                 	db	100
   599  007B9F  64                 	db	100
   600  007BA0  64                 	db	100
   601  007BA1  64                 	db	100
   602  007BA2  64                 	db	100
   603  007BA3  64                 	db	100
   604  007BA4  64                 	db	100
   605  007BA5  05                 	db	5
   606  007BA6  06                 	db	6
   607  007BA7  07                 	db	7
   608  007BA8  14                 	db	20
   609  007BA9  15                 	db	21
   610  007BAA  16                 	db	22
   611  007BAB  09                 	db	9
   612  007BAC  0D                 	db	13
   613  007BAD  21                 	db	33
   614  007BAE  25                 	db	37
   615  007BAF  29                 	db	41
   616  007BB0  2A                 	db	42
   617  007BB1  2B                 	db	43
   618  007BB2  38                 	db	56
   619  007BB3  39                 	db	57
   620  007BB4  3A                 	db	58
   621  007BB5  1A                 	db	26
   622  007BB6  1E                 	db	30
   623  007BB7  32                 	db	50
   624  007BB8  36                 	db	54
   625  007BB9  02                 	db	2
   626  007BBA  05                 	db	5
   627  007BBB  08                 	db	8
   628  007BBC  24                 	db	36
   629  007BBD  29                 	db	41
   630  007BBE  2E                 	db	46
   631  007BBF  37                 	db	55
   632  007BC0  3A                 	db	58
   633  007BC1  3D                 	db	61
   634  007BC2  11                 	db	17
   635  007BC3  16                 	db	22
   636  007BC4  1B                 	db	27
   637  007BC5  64                 	db	100
   638  007BC6  64                 	db	100
   639  007BC7  64                 	db	100
   640  007BC8  64                 	db	100
   641  007BC9  64                 	db	100
   642  007BCA  64                 	db	100
   643  007BCB  64                 	db	100
   644  007BCC  64                 	db	100
   645  007BCD                     __end_of_show0_3:
   646                           	opt stack 0
   647  007BCD                     _show7_1:
   648                           	opt stack 0
   649  007BCD  0F                 	db	15
   650  007BCE  1C                 	db	28
   651  007BCF  23                 	db	35
   652  007BD0  30                 	db	48
   653  007BD1  64                 	db	100
   654  007BD2  64                 	db	100
   655  007BD3  64                 	db	100
   656  007BD4  64                 	db	100
   657  007BD5  64                 	db	100
   658  007BD6  64                 	db	100
   659  007BD7  64                 	db	100
   660  007BD8  64                 	db	100
   661  007BD9  64                 	db	100
   662  007BDA  64                 	db	100
   663  007BDB  64                 	db	100
   664  007BDC  64                 	db	100
   665  007BDD  64                 	db	100
   666  007BDE  64                 	db	100
   667  007BDF  64                 	db	100
   668  007BE0  64                 	db	100
   669  007BE1  64                 	db	100
   670  007BE2  64                 	db	100
   671  007BE3  64                 	db	100
   672  007BE4  64                 	db	100
   673  007BE5  64                 	db	100
   674  007BE6  64                 	db	100
   675  007BE7  64                 	db	100
   676  007BE8  64                 	db	100
   677  007BE9  64                 	db	100
   678  007BEA  0A                 	db	10
   679  007BEB  0B                 	db	11
   680  007BEC  0E                 	db	14
   681  007BED  22                 	db	34
   682  007BEE  26                 	db	38
   683  007BEF  27                 	db	39
   684  007BF0  34                 	db	52
   685  007BF1  35                 	db	53
   686  007BF2  31                 	db	49
   687  007BF3  1D                 	db	29
   688  007BF4  19                 	db	25
   689  007BF5  18                 	db	24
   690  007BF6  0B                 	db	11
   691  007BF7  64                 	db	100
   692  007BF8  64                 	db	100
   693  007BF9  64                 	db	100
   694  007BFA  64                 	db	100
   695  007BFB  64                 	db	100
   696  007BFC  64                 	db	100
   697  007BFD  64                 	db	100
   698  007BFE  64                 	db	100
   699  007BFF  64                 	db	100
   700  007C00  64                 	db	100
   701  007C01  64                 	db	100
   702  007C02  64                 	db	100
   703  007C03  64                 	db	100
   704  007C04  64                 	db	100
   705  007C05  64                 	db	100
   706  007C06  64                 	db	100
   707  007C07  05                 	db	5
   708  007C08  06                 	db	6
   709  007C09  07                 	db	7
   710  007C0A  14                 	db	20
   711  007C0B  15                 	db	21
   712  007C0C  09                 	db	9
   713  007C0D  0D                 	db	13
   714  007C0E  21                 	db	33
   715  007C0F  25                 	db	37
   716  007C10  29                 	db	41
   717  007C11  2A                 	db	42
   718  007C12  2B                 	db	43
   719  007C13  38                 	db	56
   720  007C14  39                 	db	57
   721  007C15  3A                 	db	58
   722  007C16  36                 	db	54
   723  007C17  32                 	db	50
   724  007C18  1E                 	db	30
   725  007C19  1A                 	db	26
   726  007C1A  16                 	db	22
   727  007C1B  64                 	db	100
   728  007C1C  64                 	db	100
   729  007C1D  64                 	db	100
   730  007C1E  64                 	db	100
   731  007C1F  64                 	db	100
   732  007C20  64                 	db	100
   733  007C21  64                 	db	100
   734  007C22  64                 	db	100
   735  007C23  64                 	db	100
   736  007C24  00                 	db	0
   737  007C25  01                 	db	1
   738  007C26  02                 	db	2
   739  007C27  03                 	db	3
   740  007C28  10                 	db	16
   741  007C29  11                 	db	17
   742  007C2A  12                 	db	18
   743  007C2B  13                 	db	19
   744  007C2C  04                 	db	4
   745  007C2D  08                 	db	8
   746  007C2E  0C                 	db	12
   747  007C2F  20                 	db	32
   748  007C30  24                 	db	36
   749  007C31  28                 	db	40
   750  007C32  2C                 	db	44
   751  007C33  2D                 	db	45
   752  007C34  2E                 	db	46
   753  007C35  2F                 	db	47
   754  007C36  3C                 	db	60
   755  007C37  3D                 	db	61
   756  007C38  3E                 	db	62
   757  007C39  3F                 	db	63
   758  007C3A  17                 	db	23
   759  007C3B  1B                 	db	27
   760  007C3C  1F                 	db	31
   761  007C3D  33                 	db	51
   762  007C3E  37                 	db	55
   763  007C3F  3B                 	db	59
   764  007C40  3F                 	db	63
   765  007C41                     __end_of_show7_1:
   766                           	opt stack 0
   767  007C41                     _circle:
   768                           	opt stack 0
   769  007C41  00                 	db	0
   770  007C42  01                 	db	1
   771  007C43  02                 	db	2
   772  007C44  03                 	db	3
   773  007C45  10                 	db	16
   774  007C46  11                 	db	17
   775  007C47  12                 	db	18
   776  007C48  16                 	db	22
   777  007C49  1A                 	db	26
   778  007C4A  1E                 	db	30
   779  007C4B  32                 	db	50
   780  007C4C  36                 	db	54
   781  007C4D  3A                 	db	58
   782  007C4E  04                 	db	4
   783  007C4F  08                 	db	8
   784  007C50  0C                 	db	12
   785  007C51  20                 	db	32
   786  007C52  24                 	db	36
   787  007C53  28                 	db	40
   788  007C54  2C                 	db	44
   789  007C55  2D                 	db	45
   790  007C56  2E                 	db	46
   791  007C57  2F                 	db	47
   792  007C58  3C                 	db	60
   793  007C59  3D                 	db	61
   794  007C5A  3E                 	db	62
   795  007C5B  05                 	db	5
   796  007C5C  06                 	db	6
   797  007C5D  07                 	db	7
   798  007C5E  14                 	db	20
   799  007C5F  15                 	db	21
   800  007C60  19                 	db	25
   801  007C61  1D                 	db	29
   802  007C62  31                 	db	49
   803  007C63  35                 	db	53
   804  007C64  39                 	db	57
   805  007C65  09                 	db	9
   806  007C66  0D                 	db	13
   807  007C67  21                 	db	33
   808  007C68  25                 	db	37
   809  007C69  29                 	db	41
   810  007C6A  2A                 	db	42
   811  007C6B  2B                 	db	43
   812  007C6C  38                 	db	56
   813  007C6D  64                 	db	100
   814  007C6E  64                 	db	100
   815  007C6F  64                 	db	100
   816  007C70  64                 	db	100
   817  007C71  64                 	db	100
   818  007C72  64                 	db	100
   819  007C73  64                 	db	100
   820  007C74  64                 	db	100
   821  007C75  0A                 	db	10
   822  007C76  0B                 	db	11
   823  007C77  18                 	db	24
   824  007C78  1C                 	db	28
   825  007C79  0E                 	db	14
   826  007C7A  22                 	db	34
   827  007C7B  26                 	db	38
   828  007C7C  27                 	db	39
   829  007C7D  34                 	db	52
   830  007C7E  30                 	db	48
   831  007C7F  64                 	db	100
   832  007C80  64                 	db	100
   833  007C81  64                 	db	100
   834  007C82  64                 	db	100
   835  007C83  64                 	db	100
   836  007C84  64                 	db	100
   837  007C85  64                 	db	100
   838  007C86  64                 	db	100
   839  007C87  64                 	db	100
   840  007C88  64                 	db	100
   841  007C89  64                 	db	100
   842  007C8A  64                 	db	100
   843  007C8B  64                 	db	100
   844  007C8C  64                 	db	100
   845  007C8D  64                 	db	100
   846  007C8E  64                 	db	100
   847  007C8F  0F                 	db	15
   848  007C90  23                 	db	35
   849  007C91  64                 	db	100
   850  007C92  64                 	db	100
   851  007C93  64                 	db	100
   852  007C94  64                 	db	100
   853  007C95  64                 	db	100
   854  007C96  64                 	db	100
   855  007C97  64                 	db	100
   856  007C98  64                 	db	100
   857  007C99  64                 	db	100
   858  007C9A  64                 	db	100
   859  007C9B  64                 	db	100
   860  007C9C  64                 	db	100
   861  007C9D  64                 	db	100
   862  007C9E  64                 	db	100
   863  007C9F  64                 	db	100
   864  007CA0  64                 	db	100
   865  007CA1  64                 	db	100
   866  007CA2  64                 	db	100
   867  007CA3  64                 	db	100
   868  007CA4  64                 	db	100
   869  007CA5  64                 	db	100
   870  007CA6  64                 	db	100
   871  007CA7  64                 	db	100
   872  007CA8  64                 	db	100
   873  007CA9                     __end_of_circle:
   874                           	opt stack 0
   875  007CA9                     _show4_3:
   876                           	opt stack 0
   877  007CA9  37                 	db	55
   878  007CAA  3A                 	db	58
   879  007CAB  3D                 	db	61
   880  007CAC  3B                 	db	59
   881  007CAD  3E                 	db	62
   882  007CAE  3F                 	db	63
   883  007CAF  64                 	db	100
   884  007CB0  64                 	db	100
   885  007CB1  33                 	db	51
   886  007CB2  36                 	db	54
   887  007CB3  39                 	db	57
   888  007CB4  3C                 	db	60
   889  007CB5  37                 	db	55
   890  007CB6  3A                 	db	58
   891  007CB7  3D                 	db	61
   892  007CB8  64                 	db	100
   893  007CB9  1F                 	db	31
   894  007CBA  32                 	db	50
   895  007CBB  35                 	db	53
   896  007CBC  38                 	db	56
   897  007CBD  33                 	db	51
   898  007CBE  36                 	db	54
   899  007CBF  39                 	db	57
   900  007CC0  3C                 	db	60
   901  007CC1  1B                 	db	27
   902  007CC2  1E                 	db	30
   903  007CC3  31                 	db	49
   904  007CC4  34                 	db	52
   905  007CC5  1F                 	db	31
   906  007CC6  32                 	db	50
   907  007CC7  35                 	db	53
   908  007CC8  38                 	db	56
   909  007CC9  17                 	db	23
   910  007CCA  1A                 	db	26
   911  007CCB  1D                 	db	29
   912  007CCC  30                 	db	48
   913  007CCD  1B                 	db	27
   914  007CCE  1E                 	db	30
   915  007CCF  31                 	db	49
   916  007CD0  34                 	db	52
   917  007CD1  13                 	db	19
   918  007CD2  16                 	db	22
   919  007CD3  19                 	db	25
   920  007CD4  1C                 	db	28
   921  007CD5  17                 	db	23
   922  007CD6  1A                 	db	26
   923  007CD7  1D                 	db	29
   924  007CD8  30                 	db	48
   925  007CD9  12                 	db	18
   926  007CDA  15                 	db	21
   927  007CDB  18                 	db	24
   928  007CDC  0F                 	db	15
   929  007CDD  13                 	db	19
   930  007CDE  16                 	db	22
   931  007CDF  19                 	db	25
   932  007CE0  1C                 	db	28
   933  007CE1  11                 	db	17
   934  007CE2  14                 	db	20
   935  007CE3  0B                 	db	11
   936  007CE4  0E                 	db	14
   937  007CE5  12                 	db	18
   938  007CE6  15                 	db	21
   939  007CE7  18                 	db	24
   940  007CE8  0F                 	db	15
   941  007CE9  10                 	db	16
   942  007CEA  07                 	db	7
   943  007CEB  0A                 	db	10
   944  007CEC  0D                 	db	13
   945  007CED  11                 	db	17
   946  007CEE  14                 	db	20
   947  007CEF  0B                 	db	11
   948  007CF0  0E                 	db	14
   949  007CF1  03                 	db	3
   950  007CF2  06                 	db	6
   951  007CF3  09                 	db	9
   952  007CF4  0C                 	db	12
   953  007CF5  10                 	db	16
   954  007CF6  07                 	db	7
   955  007CF7  0A                 	db	10
   956  007CF8  0D                 	db	13
   957  007CF9  02                 	db	2
   958  007CFA  05                 	db	5
   959  007CFB  08                 	db	8
   960  007CFC  03                 	db	3
   961  007CFD  06                 	db	6
   962  007CFE  09                 	db	9
   963  007CFF  0C                 	db	12
   964  007D00  64                 	db	100
   965  007D01  00                 	db	0
   966  007D02  01                 	db	1
   967  007D03  02                 	db	2
   968  007D04  04                 	db	4
   969  007D05  05                 	db	5
   970  007D06  08                 	db	8
   971  007D07  64                 	db	100
   972  007D08  64                 	db	100
   973  007D09                     __end_of_show4_3:
   974                           	opt stack 0
   975  007D09                     _show4_2:
   976                           	opt stack 0
   977  007D09  00                 	db	0
   978  007D0A  01                 	db	1
   979  007D0B  02                 	db	2
   980  007D0C  04                 	db	4
   981  007D0D  05                 	db	5
   982  007D0E  08                 	db	8
   983  007D0F  64                 	db	100
   984  007D10  64                 	db	100
   985  007D11  02                 	db	2
   986  007D12  05                 	db	5
   987  007D13  08                 	db	8
   988  007D14  03                 	db	3
   989  007D15  06                 	db	6
   990  007D16  09                 	db	9
   991  007D17  0C                 	db	12
   992  007D18  64                 	db	100
   993  007D19  03                 	db	3
   994  007D1A  06                 	db	6
   995  007D1B  09                 	db	9
   996  007D1C  0C                 	db	12
   997  007D1D  07                 	db	7
   998  007D1E  0A                 	db	10
   999  007D1F  0D                 	db	13
  1000  007D20  20                 	db	32
  1001  007D21  07                 	db	7
  1002  007D22  0A                 	db	10
  1003  007D23  0D                 	db	13
  1004  007D24  20                 	db	32
  1005  007D25  0B                 	db	11
  1006  007D26  0E                 	db	14
  1007  007D27  21                 	db	33
  1008  007D28  24                 	db	36
  1009  007D29  0B                 	db	11
  1010  007D2A  0E                 	db	14
  1011  007D2B  21                 	db	33
  1012  007D2C  24                 	db	36
  1013  007D2D  0F                 	db	15
  1014  007D2E  22                 	db	34
  1015  007D2F  25                 	db	37
  1016  007D30  28                 	db	40
  1017  007D31  0F                 	db	15
  1018  007D32  22                 	db	34
  1019  007D33  25                 	db	37
  1020  007D34  28                 	db	40
  1021  007D35  23                 	db	35
  1022  007D36  26                 	db	38
  1023  007D37  29                 	db	41
  1024  007D38  2C                 	db	44
  1025  007D39  23                 	db	35
  1026  007D3A  26                 	db	38
  1027  007D3B  29                 	db	41
  1028  007D3C  2C                 	db	44
  1029  007D3D  30                 	db	48
  1030  007D3E  27                 	db	39
  1031  007D3F  2A                 	db	42
  1032  007D40  2D                 	db	45
  1033  007D41  30                 	db	48
  1034  007D42  27                 	db	39
  1035  007D43  2A                 	db	42
  1036  007D44  2D                 	db	45
  1037  007D45  31                 	db	49
  1038  007D46  34                 	db	52
  1039  007D47  2B                 	db	43
  1040  007D48  2E                 	db	46
  1041  007D49  31                 	db	49
  1042  007D4A  34                 	db	52
  1043  007D4B  2B                 	db	43
  1044  007D4C  2E                 	db	46
  1045  007D4D  32                 	db	50
  1046  007D4E  35                 	db	53
  1047  007D4F  38                 	db	56
  1048  007D50  2F                 	db	47
  1049  007D51  32                 	db	50
  1050  007D52  35                 	db	53
  1051  007D53  38                 	db	56
  1052  007D54  2F                 	db	47
  1053  007D55  33                 	db	51
  1054  007D56  36                 	db	54
  1055  007D57  39                 	db	57
  1056  007D58  3C                 	db	60
  1057  007D59  33                 	db	51
  1058  007D5A  36                 	db	54
  1059  007D5B  39                 	db	57
  1060  007D5C  3C                 	db	60
  1061  007D5D  37                 	db	55
  1062  007D5E  3A                 	db	58
  1063  007D5F  3D                 	db	61
  1064  007D60  64                 	db	100
  1065  007D61  37                 	db	55
  1066  007D62  3A                 	db	58
  1067  007D63  3D                 	db	61
  1068  007D64  3B                 	db	59
  1069  007D65  3E                 	db	62
  1070  007D66  3F                 	db	63
  1071  007D67  64                 	db	100
  1072  007D68  64                 	db	100
  1073  007D69                     __end_of_show4_2:
  1074                           	opt stack 0
  1075  007D69                     _show3_1:
  1076                           	opt stack 0
  1077  007D69  00                 	db	0
  1078  007D6A  01                 	db	1
  1079  007D6B  02                 	db	2
  1080  007D6C  03                 	db	3
  1081  007D6D  2F                 	db	47
  1082  007D6E  3C                 	db	60
  1083  007D6F  3D                 	db	61
  1084  007D70  3E                 	db	62
  1085  007D71  01                 	db	1
  1086  007D72  02                 	db	2
  1087  007D73  03                 	db	3
  1088  007D74  10                 	db	16
  1089  007D75  2E                 	db	46
  1090  007D76  2F                 	db	47
  1091  007D77  3C                 	db	60
  1092  007D78  3D                 	db	61
  1093  007D79  02                 	db	2
  1094  007D7A  03                 	db	3
  1095  007D7B  10                 	db	16
  1096  007D7C  11                 	db	17
  1097  007D7D  2D                 	db	45
  1098  007D7E  2E                 	db	46
  1099  007D7F  2F                 	db	47
  1100  007D80  3C                 	db	60
  1101  007D81  03                 	db	3
  1102  007D82  10                 	db	16
  1103  007D83  11                 	db	17
  1104  007D84  12                 	db	18
  1105  007D85  2C                 	db	44
  1106  007D86  2D                 	db	45
  1107  007D87  2E                 	db	46
  1108  007D88  2F                 	db	47
  1109  007D89  10                 	db	16
  1110  007D8A  11                 	db	17
  1111  007D8B  12                 	db	18
  1112  007D8C  16                 	db	22
  1113  007D8D  28                 	db	40
  1114  007D8E  2C                 	db	44
  1115  007D8F  2D                 	db	45
  1116  007D90  2E                 	db	46
  1117  007D91  11                 	db	17
  1118  007D92  12                 	db	18
  1119  007D93  16                 	db	22
  1120  007D94  1A                 	db	26
  1121  007D95  24                 	db	36
  1122  007D96  28                 	db	40
  1123  007D97  2C                 	db	44
  1124  007D98  2D                 	db	45
  1125  007D99  12                 	db	18
  1126  007D9A  16                 	db	22
  1127  007D9B  1A                 	db	26
  1128  007D9C  1E                 	db	30
  1129  007D9D  20                 	db	32
  1130  007D9E  24                 	db	36
  1131  007D9F  28                 	db	40
  1132  007DA0  2C                 	db	44
  1133  007DA1  16                 	db	22
  1134  007DA2  1A                 	db	26
  1135  007DA3  1E                 	db	30
  1136  007DA4  32                 	db	50
  1137  007DA5  0C                 	db	12
  1138  007DA6  20                 	db	32
  1139  007DA7  24                 	db	36
  1140  007DA8  28                 	db	40
  1141  007DA9  1A                 	db	26
  1142  007DAA  1E                 	db	30
  1143  007DAB  32                 	db	50
  1144  007DAC  36                 	db	54
  1145  007DAD  08                 	db	8
  1146  007DAE  0C                 	db	12
  1147  007DAF  20                 	db	32
  1148  007DB0  24                 	db	36
  1149  007DB1  1E                 	db	30
  1150  007DB2  32                 	db	50
  1151  007DB3  36                 	db	54
  1152  007DB4  3A                 	db	58
  1153  007DB5  04                 	db	4
  1154  007DB6  08                 	db	8
  1155  007DB7  0C                 	db	12
  1156  007DB8  20                 	db	32
  1157  007DB9                     __end_of_show3_1:
  1158                           	opt stack 0
  1159  007DB9                     _drum_midi:
  1160                           	opt stack 0
  1161  007DB9  23                 	db	35
  1162  007DBA  24                 	db	36
  1163  007DBB  25                 	db	37
  1164  007DBC  26                 	db	38
  1165  007DBD  27                 	db	39
  1166  007DBE  28                 	db	40
  1167  007DBF  29                 	db	41
  1168  007DC0  00                 	db	0
  1169  007DC1  2A                 	db	42
  1170  007DC2  2B                 	db	43
  1171  007DC3  2C                 	db	44
  1172  007DC4  2D                 	db	45
  1173  007DC5  2E                 	db	46
  1174  007DC6  2F                 	db	47
  1175  007DC7  30                 	db	48
  1176  007DC8  00                 	db	0
  1177  007DC9  31                 	db	49
  1178  007DCA  32                 	db	50
  1179  007DCB  33                 	db	51
  1180  007DCC  34                 	db	52
  1181  007DCD  35                 	db	53
  1182  007DCE  36                 	db	54
  1183  007DCF  37                 	db	55
  1184  007DD0  00                 	db	0
  1185  007DD1  38                 	db	56
  1186  007DD2  39                 	db	57
  1187  007DD3  3A                 	db	58
  1188  007DD4  3B                 	db	59
  1189  007DD5  3C                 	db	60
  1190  007DD6  3D                 	db	61
  1191  007DD7  3E                 	db	62
  1192  007DD8  00                 	db	0
  1193  007DD9  3E                 	db	62
  1194  007DDA  3F                 	db	63
  1195  007DDB  40                 	db	64
  1196  007DDC  41                 	db	65
  1197  007DDD  42                 	db	66
  1198  007DDE  43                 	db	67
  1199  007DDF  44                 	db	68
  1200  007DE0  00                 	db	0
  1201  007DE1  45                 	db	69
  1202  007DE2  46                 	db	70
  1203  007DE3  47                 	db	71
  1204  007DE4  48                 	db	72
  1205  007DE5  49                 	db	73
  1206  007DE6  4A                 	db	74
  1207  007DE7  4B                 	db	75
  1208  007DE8  00                 	db	0
  1209  007DE9  4C                 	db	76
  1210  007DEA  4D                 	db	77
  1211  007DEB  4E                 	db	78
  1212  007DEC  4F                 	db	79
  1213  007DED  50                 	db	80
  1214  007DEE  51                 	db	81
  1215  007DEF  23                 	db	35
  1216  007DF0  00                 	db	0
  1217  007DF1  24                 	db	36
  1218  007DF2  25                 	db	37
  1219  007DF3  26                 	db	38
  1220  007DF4  27                 	db	39
  1221  007DF5  28                 	db	40
  1222  007DF6  29                 	db	41
  1223  007DF7  2A                 	db	42
  1224  007DF8  00                 	db	0
  1225  007DF9                     __end_of_drum_midi:
  1226                           	opt stack 0
  1227  007DF9                     _i2xy64:
  1228                           	opt stack 0
  1229  007DF9  00                 	db	0
  1230  007DFA  10                 	db	16
  1231  007DFB  20                 	db	32
  1232  007DFC  30                 	db	48
  1233  007DFD  01                 	db	1
  1234  007DFE  11                 	db	17
  1235  007DFF  21                 	db	33
  1236  007E00  31                 	db	49
  1237  007E01  02                 	db	2
  1238  007E02  12                 	db	18
  1239  007E03  22                 	db	34
  1240  007E04  32                 	db	50
  1241  007E05  03                 	db	3
  1242  007E06  13                 	db	19
  1243  007E07  23                 	db	35
  1244  007E08  33                 	db	51
  1245  007E09  40                 	db	64
  1246  007E0A  50                 	db	80
  1247  007E0B  60                 	db	96
  1248  007E0C  70                 	db	112
  1249  007E0D  41                 	db	65
  1250  007E0E  51                 	db	81
  1251  007E0F  61                 	db	97
  1252  007E10  71                 	db	113
  1253  007E11  42                 	db	66
  1254  007E12  52                 	db	82
  1255  007E13  62                 	db	98
  1256  007E14  72                 	db	114
  1257  007E15  43                 	db	67
  1258  007E16  53                 	db	83
  1259  007E17  63                 	db	99
  1260  007E18  73                 	db	115
  1261  007E19  04                 	db	4
  1262  007E1A  14                 	db	20
  1263  007E1B  24                 	db	36
  1264  007E1C  34                 	db	52
  1265  007E1D  05                 	db	5
  1266  007E1E  15                 	db	21
  1267  007E1F  25                 	db	37
  1268  007E20  35                 	db	53
  1269  007E21  06                 	db	6
  1270  007E22  16                 	db	22
  1271  007E23  26                 	db	38
  1272  007E24  36                 	db	54
  1273  007E25  07                 	db	7
  1274  007E26  17                 	db	23
  1275  007E27  27                 	db	39
  1276  007E28  37                 	db	55
  1277  007E29  44                 	db	68
  1278  007E2A  54                 	db	84
  1279  007E2B  64                 	db	100
  1280  007E2C  74                 	db	116
  1281  007E2D  45                 	db	69
  1282  007E2E  55                 	db	85
  1283  007E2F  65                 	db	101
  1284  007E30  75                 	db	117
  1285  007E31  46                 	db	70
  1286  007E32  56                 	db	86
  1287  007E33  66                 	db	102
  1288  007E34  76                 	db	118
  1289  007E35  47                 	db	71
  1290  007E36  57                 	db	87
  1291  007E37  67                 	db	103
  1292  007E38  77                 	db	119
  1293  007E39                     __end_of_i2xy64:
  1294                           	opt stack 0
  1295  007E39                     _show5:
  1296                           	opt stack 0
  1297  007E39  00                 	db	0
  1298  007E3A  01                 	db	1
  1299  007E3B  04                 	db	4
  1300  007E3C  05                 	db	5
  1301  007E3D  01                 	db	1
  1302  007E3E  02                 	db	2
  1303  007E3F  05                 	db	5
  1304  007E40  06                 	db	6
  1305  007E41  02                 	db	2
  1306  007E42  03                 	db	3
  1307  007E43  06                 	db	6
  1308  007E44  07                 	db	7
  1309  007E45  03                 	db	3
  1310  007E46  07                 	db	7
  1311  007E47  10                 	db	16
  1312  007E48  14                 	db	20
  1313  007E49  04                 	db	4
  1314  007E4A  05                 	db	5
  1315  007E4B  08                 	db	8
  1316  007E4C  09                 	db	9
  1317  007E4D  05                 	db	5
  1318  007E4E  06                 	db	6
  1319  007E4F  09                 	db	9
  1320  007E50  0A                 	db	10
  1321  007E51  06                 	db	6
  1322  007E52  07                 	db	7
  1323  007E53  0A                 	db	10
  1324  007E54  0B                 	db	11
  1325  007E55  07                 	db	7
  1326  007E56  0B                 	db	11
  1327  007E57  14                 	db	20
  1328  007E58  18                 	db	24
  1329  007E59  08                 	db	8
  1330  007E5A  09                 	db	9
  1331  007E5B  0C                 	db	12
  1332  007E5C  0D                 	db	13
  1333  007E5D  09                 	db	9
  1334  007E5E  0A                 	db	10
  1335  007E5F  0D                 	db	13
  1336  007E60  0E                 	db	14
  1337  007E61  0A                 	db	10
  1338  007E62  0B                 	db	11
  1339  007E63  0E                 	db	14
  1340  007E64  0F                 	db	15
  1341  007E65  0B                 	db	11
  1342  007E66  18                 	db	24
  1343  007E67  0F                 	db	15
  1344  007E68  1C                 	db	28
  1345  007E69  0C                 	db	12
  1346  007E6A  0D                 	db	13
  1347  007E6B  20                 	db	32
  1348  007E6C  21                 	db	33
  1349  007E6D  0D                 	db	13
  1350  007E6E  0E                 	db	14
  1351  007E6F  21                 	db	33
  1352  007E70  22                 	db	34
  1353  007E71  0E                 	db	14
  1354  007E72  0F                 	db	15
  1355  007E73  22                 	db	34
  1356  007E74  23                 	db	35
  1357  007E75  0F                 	db	15
  1358  007E76  1C                 	db	28
  1359  007E77  23                 	db	35
  1360  007E78  30                 	db	48
  1361  007E79                     __end_of_show5:
  1362                           	opt stack 0
  1363  007E79                     _show4_4:
  1364                           	opt stack 0
  1365  007E79  13                 	db	19
  1366  007E7A  2C                 	db	44
  1367  007E7B  64                 	db	100
  1368  007E7C  64                 	db	100
  1369  007E7D  64                 	db	100
  1370  007E7E  64                 	db	100
  1371  007E7F  64                 	db	100
  1372  007E80  64                 	db	100
  1373  007E81  12                 	db	18
  1374  007E82  17                 	db	23
  1375  007E83  28                 	db	40
  1376  007E84  2D                 	db	45
  1377  007E85  64                 	db	100
  1378  007E86  64                 	db	100
  1379  007E87  64                 	db	100
  1380  007E88  64                 	db	100
  1381  007E89  11                 	db	17
  1382  007E8A  16                 	db	22
  1383  007E8B  1B                 	db	27
  1384  007E8C  24                 	db	36
  1385  007E8D  29                 	db	41
  1386  007E8E  2E                 	db	46
  1387  007E8F  64                 	db	100
  1388  007E90  64                 	db	100
  1389  007E91  10                 	db	16
  1390  007E92  15                 	db	21
  1391  007E93  1A                 	db	26
  1392  007E94  1F                 	db	31
  1393  007E95  20                 	db	32
  1394  007E96  25                 	db	37
  1395  007E97  2A                 	db	42
  1396  007E98  2F                 	db	47
  1397  007E99  03                 	db	3
  1398  007E9A  14                 	db	20
  1399  007E9B  19                 	db	25
  1400  007E9C  1E                 	db	30
  1401  007E9D  21                 	db	33
  1402  007E9E  26                 	db	38
  1403  007E9F  2B                 	db	43
  1404  007EA0  0C                 	db	12
  1405  007EA1  02                 	db	2
  1406  007EA2  07                 	db	7
  1407  007EA3  18                 	db	24
  1408  007EA4  1D                 	db	29
  1409  007EA5  08                 	db	8
  1410  007EA6  0D                 	db	13
  1411  007EA7  22                 	db	34
  1412  007EA8  27                 	db	39
  1413  007EA9  01                 	db	1
  1414  007EAA  06                 	db	6
  1415  007EAB  0B                 	db	11
  1416  007EAC  1C                 	db	28
  1417  007EAD  04                 	db	4
  1418  007EAE  09                 	db	9
  1419  007EAF  0E                 	db	14
  1420  007EB0  23                 	db	35
  1421  007EB1  00                 	db	0
  1422  007EB2  05                 	db	5
  1423  007EB3  0A                 	db	10
  1424  007EB4  0F                 	db	15
  1425  007EB5  64                 	db	100
  1426  007EB6  64                 	db	100
  1427  007EB7  64                 	db	100
  1428  007EB8  64                 	db	100
  1429  007EB9                     __end_of_show4_4:
  1430                           	opt stack 0
  1431  007EB9                     _show4_1:
  1432                           	opt stack 0
  1433  007EB9  13                 	db	19
  1434  007EBA  2C                 	db	44
  1435  007EBB  64                 	db	100
  1436  007EBC  64                 	db	100
  1437  007EBD  64                 	db	100
  1438  007EBE  64                 	db	100
  1439  007EBF  64                 	db	100
  1440  007EC0  64                 	db	100
  1441  007EC1  12                 	db	18
  1442  007EC2  17                 	db	23
  1443  007EC3  28                 	db	40
  1444  007EC4  2D                 	db	45
  1445  007EC5  64                 	db	100
  1446  007EC6  64                 	db	100
  1447  007EC7  64                 	db	100
  1448  007EC8  64                 	db	100
  1449  007EC9  11                 	db	17
  1450  007ECA  16                 	db	22
  1451  007ECB  1B                 	db	27
  1452  007ECC  24                 	db	36
  1453  007ECD  29                 	db	41
  1454  007ECE  2E                 	db	46
  1455  007ECF  64                 	db	100
  1456  007ED0  64                 	db	100
  1457  007ED1  10                 	db	16
  1458  007ED2  15                 	db	21
  1459  007ED3  1A                 	db	26
  1460  007ED4  1F                 	db	31
  1461  007ED5  20                 	db	32
  1462  007ED6  25                 	db	37
  1463  007ED7  2A                 	db	42
  1464  007ED8  2F                 	db	47
  1465  007ED9  14                 	db	20
  1466  007EDA  19                 	db	25
  1467  007EDB  1E                 	db	30
  1468  007EDC  33                 	db	51
  1469  007EDD  21                 	db	33
  1470  007EDE  26                 	db	38
  1471  007EDF  2B                 	db	43
  1472  007EE0  3C                 	db	60
  1473  007EE1  18                 	db	24
  1474  007EE2  1D                 	db	29
  1475  007EE3  32                 	db	50
  1476  007EE4  37                 	db	55
  1477  007EE5  22                 	db	34
  1478  007EE6  27                 	db	39
  1479  007EE7  38                 	db	56
  1480  007EE8  3D                 	db	61
  1481  007EE9  1C                 	db	28
  1482  007EEA  31                 	db	49
  1483  007EEB  36                 	db	54
  1484  007EEC  3B                 	db	59
  1485  007EED  23                 	db	35
  1486  007EEE  34                 	db	52
  1487  007EEF  39                 	db	57
  1488  007EF0  3E                 	db	62
  1489  007EF1  30                 	db	48
  1490  007EF2  35                 	db	53
  1491  007EF3  3A                 	db	58
  1492  007EF4  3F                 	db	63
  1493  007EF5  64                 	db	100
  1494  007EF6  64                 	db	100
  1495  007EF7  64                 	db	100
  1496  007EF8  64                 	db	100
  1497  007EF9                     __end_of_show4_1:
  1498                           	opt stack 0
  1499  007EF9                     _Buttons:
  1500                           	opt stack 0
  1501  007EF9  00                 	db	0
  1502  007EFA  01                 	db	1
  1503  007EFB  02                 	db	2
  1504  007EFC  03                 	db	3
  1505  007EFD  10                 	db	16
  1506  007EFE  11                 	db	17
  1507  007EFF  12                 	db	18
  1508  007F00  13                 	db	19
  1509  007F01  04                 	db	4
  1510  007F02  05                 	db	5
  1511  007F03  06                 	db	6
  1512  007F04  07                 	db	7
  1513  007F05  14                 	db	20
  1514  007F06  15                 	db	21
  1515  007F07  16                 	db	22
  1516  007F08  17                 	db	23
  1517  007F09  08                 	db	8
  1518  007F0A  09                 	db	9
  1519  007F0B  0A                 	db	10
  1520  007F0C  0B                 	db	11
  1521  007F0D  18                 	db	24
  1522  007F0E  19                 	db	25
  1523  007F0F  1A                 	db	26
  1524  007F10  1B                 	db	27
  1525  007F11  0C                 	db	12
  1526  007F12  0D                 	db	13
  1527  007F13  0E                 	db	14
  1528  007F14  0F                 	db	15
  1529  007F15  1C                 	db	28
  1530  007F16  1D                 	db	29
  1531  007F17  1E                 	db	30
  1532  007F18  1F                 	db	31
  1533  007F19  20                 	db	32
  1534  007F1A  21                 	db	33
  1535  007F1B  22                 	db	34
  1536  007F1C  23                 	db	35
  1537  007F1D  30                 	db	48
  1538  007F1E  31                 	db	49
  1539  007F1F  32                 	db	50
  1540  007F20  33                 	db	51
  1541  007F21  24                 	db	36
  1542  007F22  25                 	db	37
  1543  007F23  26                 	db	38
  1544  007F24  27                 	db	39
  1545  007F25  34                 	db	52
  1546  007F26  35                 	db	53
  1547  007F27  36                 	db	54
  1548  007F28  37                 	db	55
  1549  007F29  28                 	db	40
  1550  007F2A  29                 	db	41
  1551  007F2B  2A                 	db	42
  1552  007F2C  2B                 	db	43
  1553  007F2D  38                 	db	56
  1554  007F2E  39                 	db	57
  1555  007F2F  3A                 	db	58
  1556  007F30  3B                 	db	59
  1557  007F31  2C                 	db	44
  1558  007F32  2D                 	db	45
  1559  007F33  2E                 	db	46
  1560  007F34  2F                 	db	47
  1561  007F35  3C                 	db	60
  1562  007F36  3D                 	db	61
  1563  007F37  3E                 	db	62
  1564  007F38  3F                 	db	63
  1565  007F39                     __end_of_Buttons:
  1566                           	opt stack 0
  1567  007F39                     _show3_2:
  1568                           	opt stack 0
  1569  007F39  05                 	db	5
  1570  007F3A  06                 	db	6
  1571  007F3B  07                 	db	7
  1572  007F3C  2B                 	db	43
  1573  007F3D  38                 	db	56
  1574  007F3E  39                 	db	57
  1575  007F3F  06                 	db	6
  1576  007F40  07                 	db	7
  1577  007F41  14                 	db	20
  1578  007F42  2A                 	db	42
  1579  007F43  2B                 	db	43
  1580  007F44  38                 	db	56
  1581  007F45  07                 	db	7
  1582  007F46  14                 	db	20
  1583  007F47  15                 	db	21
  1584  007F48  29                 	db	41
  1585  007F49  2A                 	db	42
  1586  007F4A  2B                 	db	43
  1587  007F4B  14                 	db	20
  1588  007F4C  15                 	db	21
  1589  007F4D  19                 	db	25
  1590  007F4E  25                 	db	37
  1591  007F4F  29                 	db	41
  1592  007F50  2A                 	db	42
  1593  007F51  15                 	db	21
  1594  007F52  19                 	db	25
  1595  007F53  1D                 	db	29
  1596  007F54  21                 	db	33
  1597  007F55  25                 	db	37
  1598  007F56  29                 	db	41
  1599  007F57  19                 	db	25
  1600  007F58  1D                 	db	29
  1601  007F59  31                 	db	49
  1602  007F5A  0D                 	db	13
  1603  007F5B  21                 	db	33
  1604  007F5C  25                 	db	37
  1605  007F5D  1D                 	db	29
  1606  007F5E  31                 	db	49
  1607  007F5F  35                 	db	53
  1608  007F60  09                 	db	9
  1609  007F61  0D                 	db	13
  1610  007F62  21                 	db	33
  1611  007F63                     __end_of_show3_2:
  1612                           	opt stack 0
  1613  007F63                     _show0_2:
  1614                           	opt stack 0
  1615  007F63  00                 	db	0
  1616  007F64  04                 	db	4
  1617  007F65  08                 	db	8
  1618  007F66  0C                 	db	12
  1619  007F67  20                 	db	32
  1620  007F68  24                 	db	36
  1621  007F69  28                 	db	40
  1622  007F6A  2C                 	db	44
  1623  007F6B  29                 	db	41
  1624  007F6C  25                 	db	37
  1625  007F6D  21                 	db	33
  1626  007F6E  0D                 	db	13
  1627  007F6F  09                 	db	9
  1628  007F70  05                 	db	5
  1629  007F71  0A                 	db	10
  1630  007F72  0E                 	db	14
  1631  007F73  22                 	db	34
  1632  007F74  26                 	db	38
  1633  007F75  23                 	db	35
  1634  007F76  0F                 	db	15
  1635  007F77  1C                 	db	28
  1636  007F78  30                 	db	48
  1637  007F79  35                 	db	53
  1638  007F7A  31                 	db	49
  1639  007F7B  1D                 	db	29
  1640  007F7C  19                 	db	25
  1641  007F7D  16                 	db	22
  1642  007F7E  1A                 	db	26
  1643  007F7F  1E                 	db	30
  1644  007F80  32                 	db	50
  1645  007F81  36                 	db	54
  1646  007F82  3A                 	db	58
  1647  007F83  3F                 	db	63
  1648  007F84  3B                 	db	59
  1649  007F85  37                 	db	55
  1650  007F86  33                 	db	51
  1651  007F87  1F                 	db	31
  1652  007F88  1B                 	db	27
  1653  007F89  17                 	db	23
  1654  007F8A  13                 	db	19
  1655  007F8B                     __end_of_show0_2:
  1656                           	opt stack 0
  1657  007F8B                     _show0_1:
  1658                           	opt stack 0
  1659  007F8B  00                 	db	0
  1660  007F8C  01                 	db	1
  1661  007F8D  02                 	db	2
  1662  007F8E  03                 	db	3
  1663  007F8F  10                 	db	16
  1664  007F90  11                 	db	17
  1665  007F91  12                 	db	18
  1666  007F92  13                 	db	19
  1667  007F93  16                 	db	22
  1668  007F94  15                 	db	21
  1669  007F95  14                 	db	20
  1670  007F96  07                 	db	7
  1671  007F97  06                 	db	6
  1672  007F98  05                 	db	5
  1673  007F99  0A                 	db	10
  1674  007F9A  0B                 	db	11
  1675  007F9B  18                 	db	24
  1676  007F9C  19                 	db	25
  1677  007F9D  1C                 	db	28
  1678  007F9E  0F                 	db	15
  1679  007F9F  23                 	db	35
  1680  007FA0  30                 	db	48
  1681  007FA1  35                 	db	53
  1682  007FA2  34                 	db	52
  1683  007FA3  27                 	db	39
  1684  007FA4  26                 	db	38
  1685  007FA5  29                 	db	41
  1686  007FA6  2A                 	db	42
  1687  007FA7  2B                 	db	43
  1688  007FA8  38                 	db	56
  1689  007FA9  39                 	db	57
  1690  007FAA  3A                 	db	58
  1691  007FAB  3F                 	db	63
  1692  007FAC  3E                 	db	62
  1693  007FAD  3D                 	db	61
  1694  007FAE  3C                 	db	60
  1695  007FAF  2F                 	db	47
  1696  007FB0  2E                 	db	46
  1697  007FB1  2D                 	db	45
  1698  007FB2  2C                 	db	44
  1699  007FB3                     __end_of_show0_1:
  1700                           	opt stack 0
  1701  007FB3                     _horizental_flash:
  1702                           	opt stack 0
  1703  007FB3  00                 	db	0
  1704  007FB4  01                 	db	1
  1705  007FB5  02                 	db	2
  1706  007FB6  01                 	db	1
  1707  007FB7  02                 	db	2
  1708  007FB8  03                 	db	3
  1709  007FB9  02                 	db	2
  1710  007FBA  03                 	db	3
  1711  007FBB  10                 	db	16
  1712  007FBC  03                 	db	3
  1713  007FBD  10                 	db	16
  1714  007FBE  11                 	db	17
  1715  007FBF  10                 	db	16
  1716  007FC0  11                 	db	17
  1717  007FC1  12                 	db	18
  1718  007FC2  11                 	db	17
  1719  007FC3  12                 	db	18
  1720  007FC4  13                 	db	19
  1721  007FC5  12                 	db	18
  1722  007FC6  13                 	db	19
  1723  007FC7  64                 	db	100
  1724  007FC8  13                 	db	19
  1725  007FC9  64                 	db	100
  1726  007FCA  64                 	db	100
  1727  007FCB                     __end_of_horizental_flash:
  1728                           	opt stack 0
  1729  007FCB                     _show3_3:
  1730                           	opt stack 0
  1731  007FCB  0A                 	db	10
  1732  007FCC  0B                 	db	11
  1733  007FCD  27                 	db	39
  1734  007FCE  34                 	db	52
  1735  007FCF  0B                 	db	11
  1736  007FD0  18                 	db	24
  1737  007FD1  26                 	db	38
  1738  007FD2  27                 	db	39
  1739  007FD3  18                 	db	24
  1740  007FD4  1C                 	db	28
  1741  007FD5  22                 	db	34
  1742  007FD6  26                 	db	38
  1743  007FD7  1C                 	db	28
  1744  007FD8  30                 	db	48
  1745  007FD9  0E                 	db	14
  1746  007FDA  22                 	db	34
  1747  007FDB  0A                 	db	10
  1748  007FDC  0E                 	db	14
  1749  007FDD  30                 	db	48
  1750  007FDE  34                 	db	52
  1751  007FDF                     __end_of_show3_3:
  1752                           	opt stack 0
  1753  007FDF                     _buttonLUT:
  1754                           	opt stack 0
  1755  007FDF  07                 	db	7
  1756  007FE0  04                 	db	4
  1757  007FE1  02                 	db	2
  1758  007FE2  22                 	db	34
  1759  007FE3  05                 	db	5
  1760  007FE4  06                 	db	6
  1761  007FE5  00                 	db	0
  1762  007FE6  01                 	db	1
  1763  007FE7  03                 	db	3
  1764  007FE8  10                 	db	16
  1765  007FE9  30                 	db	48
  1766  007FEA  21                 	db	33
  1767  007FEB  13                 	db	19
  1768  007FEC  12                 	db	18
  1769  007FED  11                 	db	17
  1770  007FEE  31                 	db	49
  1771  007FEF                     __end_of_buttonLUT:
  1772                           	opt stack 0
  1773  007FEF                     _ledLUT:
  1774                           	opt stack 0
  1775  007FEF  3A                 	db	58
  1776  007FF0  37                 	db	55
  1777  007FF1  35                 	db	53
  1778  007FF2  34                 	db	52
  1779  007FF3  28                 	db	40
  1780  007FF4  29                 	db	41
  1781  007FF5  23                 	db	35
  1782  007FF6  24                 	db	36
  1783  007FF7  16                 	db	22
  1784  007FF8  1B                 	db	27
  1785  007FF9  11                 	db	17
  1786  007FFA  10                 	db	16
  1787  007FFB  0E                 	db	14
  1788  007FFC  0D                 	db	13
  1789  007FFD  0C                 	db	12
  1790  007FFE  02                 	db	2
  1791  007FFF                     __end_of_ledLUT:
  1792                           	opt stack 0
  1793  0000                     _PIR2bits	set	4001
  1794  0000                     _SSPSTAT	set	4039
  1795  0000                     _SSPCON1bits	set	4038
  1796  0000                     _SSPBUF	set	4041
  1797  0000                     _SSPSTATbits	set	4039
  1798  0000                     _SSPCON2	set	4037
  1799  0000                     _SSPCON1	set	4038
  1800  0000                     _SSPCON2bits	set	4037
  1801  0000                     _TXREG	set	4013
  1802  0000                     _PIR1bits	set	3998
  1803  0000                     _RCSTAbits	set	4011
  1804  0000                     _SPBRG	set	4015
  1805  0000                     _TXSTAbits	set	4012
  1806  0000                     _BAUDCONbits	set	4024
  1807  0000                     _TRISCbits	set	3988
  1808  0000                     _SSPADD	set	4040
  1809  0000                     _OSCCONbits	set	4051
  1810  0000                     _TRMT	set	32097
  1811                           
  1812                           ; #config settings
  1813  007FFF  00                 	db	0	; dummy byte at the end
  1814  0000                     
  1815                           	psect	cinit
  1816  00477A                     __pcinit:
  1817                           	opt stack 0
  1818  00477A                     start_initialization:
  1819                           	opt stack 0
  1820  00477A                     __initialization:
  1821                           	opt stack 0
  1822                           
  1823                           ; Initialize objects allocated to COMRAM (2 bytes)
  1824                           ; load TBLPTR registers with __pidataCOMRAM
  1825  00477A  0E4C               	movlw	low __pidataCOMRAM
  1826  00477C  6EF6               	movwf	tblptrl,c
  1827  00477E  0E46               	movlw	high __pidataCOMRAM
  1828  004780  6EF7               	movwf	tblptrh,c
  1829  004782  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1830  004784  6EF8               	movwf	tblptru,c
  1831  004786  0009               	tblrd		*+	;fetch initializer
  1832  004788  CFF5 F07C          	movff	tablat,__pdataCOMRAM
  1833  00478C  0009               	tblrd		*+	;fetch initializer
  1834  00478E  CFF5 F07D          	movff	tablat,__pdataCOMRAM+1
  1835                           
  1836                           ; Clear objects allocated to BANK1 (128 bytes)
  1837  004792  EE01  F000         	lfsr	0,__pbssBANK1
  1838  004796  0E80               	movlw	128
  1839  004798                     clear_0:
  1840  004798  6AEE               	clrf	postinc0,c
  1841  00479A  06E8               	decf	wreg,f,c
  1842  00479C  E1FD               	bnz	clear_0
  1843                           
  1844                           ; Clear objects allocated to BANK0 (116 bytes)
  1845  00479E  EE00  F080         	lfsr	0,__pbssBANK0
  1846  0047A2  0E74               	movlw	116
  1847  0047A4                     clear_1:
  1848  0047A4  6AEE               	clrf	postinc0,c
  1849  0047A6  06E8               	decf	wreg,f,c
  1850  0047A8  E1FD               	bnz	clear_1
  1851                           
  1852                           ; Clear objects allocated to COMRAM (66 bytes)
  1853  0047AA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1854  0047AE  0E42               	movlw	66
  1855  0047B0                     clear_2:
  1856  0047B0  6AEE               	clrf	postinc0,c
  1857  0047B2  06E8               	decf	wreg,f,c
  1858  0047B4  E1FD               	bnz	clear_2
  1859  0047B6                     end_of_initialization:
  1860                           	opt stack 0
  1861  0047B6                     __end_of__initialization:
  1862                           	opt stack 0
  1863  0047B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1864  0047B8  6EF8               	movwf	tblptru,c
  1865  0047BA  0100               	movlb	0
  1866  0047BC  EF8A  F038         	goto	_main	;jump to C main() function
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           postinc0	equ	0xFEE
  1872                           wreg	equ	0xFE8
  1873                           
  1874                           	psect	bssCOMRAM
  1875  000001                     __pbssCOMRAM:
  1876                           	opt stack 0
  1877  000001                     _temp:
  1878                           	opt stack 0
  1879  000001                     	ds	64
  1880  000041                     _count:
  1881                           	opt stack 0
  1882  000041                     	ds	2
  1883                           tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           
  1890                           	psect	dataCOMRAM
  1891  00007C                     __pdataCOMRAM:
  1892                           	opt stack 0
  1893  00007C                     _play_mode:
  1894                           	opt stack 0
  1895  00007C                     	ds	2
  1896                           tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           postinc0	equ	0xFEE
  1901                           wreg	equ	0xFE8
  1902                           
  1903                           	psect	bssBANK0
  1904  000080                     __pbssBANK0:
  1905                           	opt stack 0
  1906  000080                     _matrices:
  1907                           	opt stack 0
  1908  000080                     	ds	116
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           
  1916                           	psect	bssBANK1
  1917  000100                     __pbssBANK1:
  1918                           	opt stack 0
  1919  000100                     _press:
  1920                           	opt stack 0
  1921  000100                     	ds	128
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           
  1929                           	psect	cstackCOMRAM
  1930  000043                     __pcstackCOMRAM:
  1931                           	opt stack 0
  1932  000043                     ??_MyIdleI2C:
  1933  000043                     ?___wmul:
  1934                           	opt stack 0
  1935  000043                     send_note@two:
  1936                           	opt stack 0
  1937  000043                     MyOpenI2C@slew:
  1938                           	opt stack 0
  1939  000043                     ___wmul@multiplier:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x0
  1943  000043                     	ds	1
  1944  000044                     send_note@three:
  1945                           	opt stack 0
  1946  000044                     MyWriteI2C@data_out:
  1947                           	opt stack 0
  1948  000044                     MyOpenI2C@sync_mode:
  1949                           	opt stack 0
  1950                           
  1951                           ; 1 bytes @ 0x1
  1952  000044                     	ds	1
  1953  000045                     send_note@one:
  1954                           	opt stack 0
  1955  000045                     write@data:
  1956                           	opt stack 0
  1957  000045                     ___wmul@multiplicand:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x2
  1961  000045                     	ds	1
  1962  000046                     write@data_out:
  1963                           	opt stack 0
  1964                           
  1965                           ; 1 bytes @ 0x3
  1966  000046                     	ds	1
  1967  000047                     write@status:
  1968                           	opt stack 0
  1969  000047                     ___wmul@product:
  1970                           	opt stack 0
  1971                           
  1972                           ; 2 bytes @ 0x4
  1973  000047                     	ds	2
  1974  000049                     ??_set_led:
  1975  000049                     ??_write_display:
  1976  000049                     ??_clr_led:
  1977  000049                     ??_is_key_pressed:
  1978  000049                     ??_was_key_pressed:
  1979  000049                     MygetsI2C@rdptr:
  1980                           	opt stack 0
  1981  000049                     memcpy@d1:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x6
  1985  000049                     	ds	2
  1986  00004B                     MygetsI2C@length:
  1987                           	opt stack 0
  1988  00004B                     memcpy@s1:
  1989                           	opt stack 0
  1990                           
  1991                           ; 2 bytes @ 0x8
  1992  00004B                     	ds	1
  1993  00004C                     
  1994                           ; 1 bytes @ 0x9
  1995  00004C                     	ds	1
  1996  00004D                     memcpy@n:
  1997                           	opt stack 0
  1998                           
  1999                           ; 2 bytes @ 0xA
  2000  00004D                     	ds	2
  2001  00004F                     write_display@j:
  2002                           	opt stack 0
  2003  00004F                     memcpy@d:
  2004                           	opt stack 0
  2005                           
  2006                           ; 2 bytes @ 0xC
  2007  00004F                     	ds	2
  2008  000051                     write_display@i:
  2009                           	opt stack 0
  2010  000051                     set_led@matrix:
  2011                           	opt stack 0
  2012  000051                     is_key_pressed@matrix:
  2013                           	opt stack 0
  2014  000051                     was_key_pressed@matrix:
  2015                           	opt stack 0
  2016  000051                     memcpy@s:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0xE
  2020  000051                     	ds	2
  2021  000053                     memcpy@tmp:
  2022                           	opt stack 0
  2023  000053                     clr_led@matrix:
  2024                           	opt stack 0
  2025  000053                     set_led@led:
  2026                           	opt stack 0
  2027  000053                     is_key_pressed@led:
  2028                           	opt stack 0
  2029  000053                     was_key_pressed@led:
  2030                           	opt stack 0
  2031                           
  2032                           ; 2 bytes @ 0x10
  2033  000053                     	ds	1
  2034  000054                     ??_read_switch:
  2035                           
  2036                           ; 1 bytes @ 0x11
  2037  000054                     	ds	1
  2038  000055                     set_led@i:
  2039                           	opt stack 0
  2040  000055                     is_key_pressed@k:
  2041                           	opt stack 0
  2042  000055                     was_key_pressed@k:
  2043                           	opt stack 0
  2044  000055                     clr_led@led:
  2045                           	opt stack 0
  2046                           
  2047                           ; 2 bytes @ 0x12
  2048  000055                     	ds	2
  2049  000057                     clr_led@i:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0x14
  2053  000057                     	ds	1
  2054  000058                     ??_animation3:
  2055  000058                     ??_animation7:
  2056  000058                     animation0@n:
  2057                           	opt stack 0
  2058  000058                     animation1@n:
  2059                           	opt stack 0
  2060  000058                     animation2@n:
  2061                           	opt stack 0
  2062  000058                     animation4@h:
  2063                           	opt stack 0
  2064  000058                     animation5@n:
  2065                           	opt stack 0
  2066  000058                     animation6@n:
  2067                           	opt stack 0
  2068                           
  2069                           ; 1 bytes @ 0x15
  2070  000058                     	ds	1
  2071  000059                     ??_animation0:
  2072  000059                     ??_animation1:
  2073  000059                     ??_animation4:
  2074  000059                     ??_animation6:
  2075  000059                     animation2@h:
  2076                           	opt stack 0
  2077  000059                     animation5@h:
  2078                           	opt stack 0
  2079                           
  2080                           ; 1 bytes @ 0x16
  2081  000059                     	ds	1
  2082  00005A                     ??_animation2:
  2083  00005A                     ??_animation5:
  2084  00005A                     animation7@h:
  2085                           	opt stack 0
  2086                           
  2087                           ; 1 bytes @ 0x17
  2088  00005A                     	ds	1
  2089  00005B                     animation4@m:
  2090                           	opt stack 0
  2091  00005B                     animation0@x:
  2092                           	opt stack 0
  2093  00005B                     animation7@i:
  2094                           	opt stack 0
  2095                           
  2096                           ; 2 bytes @ 0x18
  2097  00005B                     	ds	1
  2098  00005C                     animation1@m:
  2099                           	opt stack 0
  2100  00005C                     animation3@m:
  2101                           	opt stack 0
  2102  00005C                     animation4@i:
  2103                           	opt stack 0
  2104  00005C                     animation5@m:
  2105                           	opt stack 0
  2106                           
  2107                           ; 1 bytes @ 0x19
  2108  00005C                     	ds	1
  2109  00005D                     animation0@m:
  2110                           	opt stack 0
  2111  00005D                     animation1@x:
  2112                           	opt stack 0
  2113  00005D                     animation4@j:
  2114                           	opt stack 0
  2115  00005D                     animation5@j:
  2116                           	opt stack 0
  2117  00005D                     animation6@x:
  2118                           	opt stack 0
  2119  00005D                     animation3@i:
  2120                           	opt stack 0
  2121  00005D                     animation7@j:
  2122                           	opt stack 0
  2123                           
  2124                           ; 2 bytes @ 0x1A
  2125  00005D                     	ds	1
  2126  00005E                     animation0@j:
  2127                           	opt stack 0
  2128  00005E                     animation1@i:
  2129                           	opt stack 0
  2130  00005E                     animation5@i:
  2131                           	opt stack 0
  2132  00005E                     animation2@col:
  2133                           	opt stack 0
  2134  00005E                     animation6@a:
  2135                           	opt stack 0
  2136  00005E                     read_switch@i:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x1B
  2140  00005E                     	ds	1
  2141  00005F                     animation0@i:
  2142                           	opt stack 0
  2143  00005F                     animation1@j:
  2144                           	opt stack 0
  2145  00005F                     animation5@x:
  2146                           	opt stack 0
  2147  00005F                     animation3@j:
  2148                           	opt stack 0
  2149                           
  2150                           ; 2 bytes @ 0x1C
  2151  00005F                     	ds	1
  2152  000060                     animation2@m:
  2153                           	opt stack 0
  2154  000060                     animation6@b:
  2155                           	opt stack 0
  2156  000060                     read_switch@j:
  2157                           	opt stack 0
  2158                           
  2159                           ; 2 bytes @ 0x1D
  2160  000060                     	ds	1
  2161  000061                     animation2@row:
  2162                           	opt stack 0
  2163                           
  2164                           ; 2 bytes @ 0x1E
  2165  000061                     	ds	1
  2166  000062                     animation6@c:
  2167                           	opt stack 0
  2168                           
  2169                           ; 2 bytes @ 0x1F
  2170  000062                     	ds	1
  2171  000063                     animation2@x:
  2172                           	opt stack 0
  2173                           
  2174                           ; 2 bytes @ 0x20
  2175  000063                     	ds	1
  2176  000064                     animation6@d:
  2177                           	opt stack 0
  2178                           
  2179                           ; 2 bytes @ 0x21
  2180  000064                     	ds	1
  2181  000065                     animation2@i:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x22
  2185  000065                     	ds	1
  2186  000066                     animation6@m:
  2187                           	opt stack 0
  2188                           
  2189                           ; 1 bytes @ 0x23
  2190  000066                     	ds	1
  2191  000067                     animation2@j:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x24
  2195  000067                     	ds	2
  2196  000069                     ??_main:
  2197                           
  2198                           ; 1 bytes @ 0x26
  2199  000069                     	ds	4
  2200  00006D                     main@x:
  2201                           	opt stack 0
  2202                           
  2203                           ; 1 bytes @ 0x2A
  2204  00006D                     	ds	1
  2205  00006E                     main@y:
  2206                           	opt stack 0
  2207                           
  2208                           ; 1 bytes @ 0x2B
  2209  00006E                     	ds	1
  2210  00006F                     main@sync_mode:
  2211                           	opt stack 0
  2212                           
  2213                           ; 1 bytes @ 0x2C
  2214  00006F                     	ds	1
  2215  000070                     main@slew:
  2216                           	opt stack 0
  2217                           
  2218                           ; 1 bytes @ 0x2D
  2219  000070                     	ds	1
  2220  000071                     main@note:
  2221                           	opt stack 0
  2222                           
  2223                           ; 1 bytes @ 0x2E
  2224  000071                     	ds	1
  2225  000072                     main@k:
  2226                           	opt stack 0
  2227                           
  2228                           ; 1 bytes @ 0x2F
  2229  000072                     	ds	1
  2230  000073                     main@n:
  2231                           	opt stack 0
  2232                           
  2233                           ; 1 bytes @ 0x30
  2234  000073                     	ds	1
  2235  000074                     main@rightbutton:
  2236                           	opt stack 0
  2237                           
  2238                           ; 1 bytes @ 0x31
  2239  000074                     	ds	1
  2240  000075                     main@column:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0x32
  2244  000075                     	ds	1
  2245  000076                     main@m:
  2246                           	opt stack 0
  2247                           
  2248                           ; 1 bytes @ 0x33
  2249  000076                     	ds	1
  2250  000077                     main@j:
  2251                           	opt stack 0
  2252                           
  2253                           ; 2 bytes @ 0x34
  2254  000077                     	ds	2
  2255  000079                     main@h:
  2256                           	opt stack 0
  2257                           
  2258                           ; 1 bytes @ 0x36
  2259  000079                     	ds	1
  2260  00007A                     main@i:
  2261                           	opt stack 0
  2262                           
  2263                           ; 2 bytes @ 0x37
  2264  00007A                     	ds	2
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           
  2272 ;;
  2273 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2274 ;;
  2275 ;; *************** function _main *****************
  2276 ;; Defined at:
  2277 ;;		line 409 in file "newmain.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  note            1   46[COMRAM] unsigned char 
  2282 ;;  y               1   43[COMRAM] unsigned char 
  2283 ;;  x               1   42[COMRAM] unsigned char 
  2284 ;;  i               2   55[COMRAM] int 
  2285 ;;  j               2   52[COMRAM] int 
  2286 ;;  h               1   54[COMRAM] unsigned char 
  2287 ;;  m               1   51[COMRAM] unsigned char 
  2288 ;;  column          1   50[COMRAM] unsigned char 
  2289 ;;  rightbutton     1   49[COMRAM] unsigned char 
  2290 ;;  n               1   48[COMRAM] unsigned char 
  2291 ;;  k               1   47[COMRAM] unsigned char 
  2292 ;;  slew            1   45[COMRAM] unsigned char 
  2293 ;;  sync_mode       1   44[COMRAM] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2303 ;;      Params:         0       0       0       0       0       0       0
  2304 ;;      Locals:        15       0       0       0       0       0       0
  2305 ;;      Temps:          4       0       0       0       0       0       0
  2306 ;;      Totals:        19       0       0       0       0       0       0
  2307 ;;Total ram usage:       19 bytes
  2308 ;; Hardware stack levels required when called:    5
  2309 ;; This function calls:
  2310 ;;		_MyCloseI2C
  2311 ;;		_MyIdleI2C
  2312 ;;		_MyOpenI2C
  2313 ;;		_MyStartI2C
  2314 ;;		_MyStopI2C
  2315 ;;		_Myusartinit
  2316 ;;		___wmul
  2317 ;;		_animation0
  2318 ;;		_animation1
  2319 ;;		_animation2
  2320 ;;		_animation3
  2321 ;;		_animation4
  2322 ;;		_animation5
  2323 ;;		_animation6
  2324 ;;		_animation7
  2325 ;;		_clr_led
  2326 ;;		_is_key_pressed
  2327 ;;		_read_switch
  2328 ;;		_send_note
  2329 ;;		_set_led
  2330 ;;		_was_key_pressed
  2331 ;;		_write
  2332 ;;		_write_display
  2333 ;; This function is called by:
  2334 ;;		Startup code after reset
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text0
  2339  007114                     __ptext0:
  2340                           	opt stack 0
  2341  007114                     _main:
  2342                           	opt stack 26
  2343                           
  2344                           ;newmain.c: 411: unsigned char sync_mode = 0, slew = 0;
  2345                           
  2346                           ;incstack = 0
  2347  007114  0E00               	movlw	0
  2348  007116  6E6F               	movwf	main@sync_mode,c
  2349  007118  0E00               	movlw	0
  2350  00711A  6E70               	movwf	main@slew,c
  2351                           
  2352                           ;newmain.c: 412: int i, j;
  2353                           ;newmain.c: 413: matrices[0].address = 0x70 << 1;
  2354  00711C  0EE0               	movlw	224
  2355  00711E  0100               	movlb	0	; () banked
  2356  007120  6F80               	movwf	_matrices& (0+255),b
  2357                           
  2358                           ;newmain.c: 414: matrices[1].address = 0x71 << 1;
  2359  007122  0EE2               	movlw	226
  2360  007124  6F9D               	movwf	(_matrices+29)& (0+255),b
  2361                           
  2362                           ;newmain.c: 415: matrices[2].address = 0x72 << 1;
  2363  007126  0EE4               	movlw	228
  2364  007128  6FBA               	movwf	(_matrices+58)& (0+255),b
  2365                           
  2366                           ;newmain.c: 416: matrices[3].address = 0x73 << 1;
  2367  00712A  0EE6               	movlw	230
  2368  00712C  6FD7               	movwf	(_matrices+87)& (0+255),b
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;newmain.c: 418: Myusartinit();
  2372  00712E  EC39  F023         	call	_Myusartinit	;wreg free
  2373                           
  2374                           ;newmain.c: 420: MyCloseI2C();
  2375  007132  EC27  F023         	call	_MyCloseI2C	;wreg free
  2376                           
  2377                           ;newmain.c: 422: sync_mode = 0b00001000;
  2378  007136  0E08               	movlw	8
  2379  007138  6E6F               	movwf	main@sync_mode,c
  2380                           
  2381                           ;newmain.c: 423: slew = 0b10000000;
  2382  00713A  0E80               	movlw	128
  2383  00713C  6E70               	movwf	main@slew,c
  2384                           
  2385                           ;newmain.c: 424: MyOpenI2C(sync_mode, slew);
  2386  00713E  C070  F043         	movff	main@slew,MyOpenI2C@slew
  2387  007142  506F               	movf	main@sync_mode,w,c
  2388  007144  EC51  F023         	call	_MyOpenI2C
  2389                           
  2390                           ;newmain.c: 426: OSCCONbits.IRCF = 6;
  2391  007148  50D3               	movf	4051,w,c	;volatile
  2392  00714A  0B8F               	andlw	-113
  2393  00714C  0960               	iorlw	96
  2394  00714E  6ED3               	movwf	4051,c	;volatile
  2395                           
  2396                           ;newmain.c: 427: SSPADD = 9;
  2397  007150  0E09               	movlw	9
  2398  007152  6EC8               	movwf	4040,c	;volatile
  2399                           
  2400                           ;newmain.c: 429: _delay((unsigned long)((1)*(4000000/4000.0)));
  2401  007154  0EC8               	movlw	200
  2402  007156                     u6937:
  2403  007156  D000               	nop2	
  2404  007158  2EE8               	decfsz	wreg,f,c
  2405  00715A  D7FD               	bra	u6937
  2406                           
  2407                           ;newmain.c: 430: for (i = 0; i < 4; i++) {
  2408  00715C  0E00               	movlw	0
  2409  00715E  6E7B               	movwf	main@i+1,c
  2410  007160  0E00               	movlw	0
  2411  007162  6E7A               	movwf	main@i,c
  2412  007164                     l4720:
  2413  007164  BE7B               	btfsc	main@i+1,7,c
  2414  007166  D006               	goto	l143
  2415  007168  507B               	movf	main@i+1,w,c
  2416  00716A  E14B               	bnz	l4758
  2417  00716C  0E04               	movlw	4
  2418  00716E  5C7A               	subwf	main@i,w,c
  2419  007170  B0D8               	btfsc	status,0,c
  2420  007172  D047               	goto	u6200
  2421  007174                     l143:
  2422                           
  2423                           ;newmain.c: 432: MyIdleI2C();
  2424  007174  EC30  F023         	call	_MyIdleI2C	;wreg free
  2425                           
  2426                           ;newmain.c: 433: MyStartI2C();
  2427  007178  EC29  F023         	call	_MyStartI2C	;wreg free
  2428                           
  2429                           ;newmain.c: 434: MyIdleI2C();
  2430  00717C  EC30  F023         	call	_MyIdleI2C	;wreg free
  2431                           
  2432                           ;newmain.c: 435: write(matrices[i].address | 0x00);
  2433  007180  C07A  F043         	movff	main@i,___wmul@multiplier
  2434  007184  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  2435  007188  0E00               	movlw	0
  2436  00718A  6E46               	movwf	___wmul@multiplicand+1,c
  2437  00718C  0E1D               	movlw	29
  2438  00718E  6E45               	movwf	___wmul@multiplicand,c
  2439  007190  EC71  F023         	call	___wmul	;wreg free
  2440  007194  0E80               	movlw	low _matrices
  2441  007196  2443               	addwf	?___wmul,w,c
  2442  007198  6ED9               	movwf	fsr2l,c
  2443  00719A  0E00               	movlw	high _matrices
  2444  00719C  2044               	addwfc	?___wmul+1,w,c
  2445  00719E  6EDA               	movwf	fsr2h,c
  2446  0071A0  50DF               	movf	indf2,w,c
  2447  0071A2  EC84  F023         	call	_write
  2448                           
  2449                           ;newmain.c: 436: MyIdleI2C();
  2450  0071A6  EC30  F023         	call	_MyIdleI2C	;wreg free
  2451                           
  2452                           ;newmain.c: 437: write(0x21);
  2453  0071AA  0E21               	movlw	33
  2454  0071AC  EC84  F023         	call	_write
  2455                           
  2456                           ;newmain.c: 438: MyIdleI2C();
  2457  0071B0  EC30  F023         	call	_MyIdleI2C	;wreg free
  2458                           
  2459                           ;newmain.c: 439: MyStopI2C();
  2460  0071B4  EC2B  F023         	call	_MyStopI2C	;wreg free
  2461                           
  2462                           ;newmain.c: 442: MyIdleI2C();
  2463  0071B8  EC30  F023         	call	_MyIdleI2C	;wreg free
  2464                           
  2465                           ;newmain.c: 443: MyStartI2C();
  2466  0071BC  EC29  F023         	call	_MyStartI2C	;wreg free
  2467                           
  2468                           ;newmain.c: 444: MyIdleI2C();
  2469  0071C0  EC30  F023         	call	_MyIdleI2C	;wreg free
  2470                           
  2471                           ;newmain.c: 445: write(matrices[i].address | 0x00);
  2472  0071C4  C07A  F043         	movff	main@i,___wmul@multiplier
  2473  0071C8  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  2474  0071CC  0E00               	movlw	0
  2475  0071CE  6E46               	movwf	___wmul@multiplicand+1,c
  2476  0071D0  0E1D               	movlw	29
  2477  0071D2  6E45               	movwf	___wmul@multiplicand,c
  2478  0071D4  EC71  F023         	call	___wmul	;wreg free
  2479  0071D8  0E80               	movlw	low _matrices
  2480  0071DA  2443               	addwf	?___wmul,w,c
  2481  0071DC  6ED9               	movwf	fsr2l,c
  2482  0071DE  0E00               	movlw	high _matrices
  2483  0071E0  2044               	addwfc	?___wmul+1,w,c
  2484  0071E2  6EDA               	movwf	fsr2h,c
  2485  0071E4  50DF               	movf	indf2,w,c
  2486  0071E6  EC84  F023         	call	_write
  2487                           
  2488                           ;newmain.c: 446: MyIdleI2C();
  2489  0071EA  EC30  F023         	call	_MyIdleI2C	;wreg free
  2490                           
  2491                           ;newmain.c: 447: write(0b10000001);
  2492  0071EE  0E81               	movlw	129
  2493  0071F0  EC84  F023         	call	_write
  2494                           
  2495                           ;newmain.c: 448: MyIdleI2C();
  2496  0071F4  EC30  F023         	call	_MyIdleI2C	;wreg free
  2497                           
  2498                           ;newmain.c: 449: MyStopI2C();
  2499  0071F8  EC2B  F023         	call	_MyStopI2C	;wreg free
  2500  0071FC  4A7A               	infsnz	main@i,f,c
  2501  0071FE  2A7B               	incf	main@i+1,f,c
  2502  007200  D7B1               	goto	l4720
  2503  007202                     u6200:
  2504  007202                     l4758:
  2505                           
  2506                           ;newmain.c: 450: }
  2507                           ;newmain.c: 452: uint8_t column = 0, rightbutton = 0, m = 0, n = 0, h = 0, k = 0;
  2508  007202  0E00               	movlw	0
  2509  007204  6E75               	movwf	main@column,c
  2510  007206  0E00               	movlw	0
  2511  007208  6E74               	movwf	main@rightbutton,c
  2512  00720A  0E00               	movlw	0
  2513  00720C  6E76               	movwf	main@m,c
  2514  00720E  0E00               	movlw	0
  2515  007210  6E73               	movwf	main@n,c
  2516  007212  0E00               	movlw	0
  2517  007214  6E79               	movwf	main@h,c
  2518  007216  0E00               	movlw	0
  2519  007218  6E72               	movwf	main@k,c
  2520                           
  2521                           ;newmain.c: 454: for (i = 0; i < 8; i++)
  2522  00721A  0E00               	movlw	0
  2523  00721C  6E7B               	movwf	main@i+1,c
  2524  00721E  0E00               	movlw	0
  2525  007220  6E7A               	movwf	main@i,c
  2526  007222                     l4760:
  2527  007222  BE7B               	btfsc	main@i+1,7,c
  2528  007224  D006               	goto	l145
  2529  007226  507B               	movf	main@i+1,w,c
  2530  007228  E137               	bnz	l4780
  2531  00722A  0E08               	movlw	8
  2532  00722C  5C7A               	subwf	main@i,w,c
  2533  00722E  B0D8               	btfsc	status,0,c
  2534  007230  D033               	goto	u6240
  2535  007232                     l145:
  2536                           
  2537                           ;newmain.c: 455: for (j = 0; j < 8; j++)
  2538  007232  0E00               	movlw	0
  2539  007234  6E78               	movwf	main@j+1,c
  2540  007236  0E00               	movlw	0
  2541  007238  6E77               	movwf	main@j,c
  2542  00723A                     l4766:
  2543  00723A  BE78               	btfsc	main@j+1,7,c
  2544  00723C  D006               	goto	l147
  2545  00723E  5078               	movf	main@j+1,w,c
  2546  007240  E128               	bnz	l4776
  2547  007242  0E08               	movlw	8
  2548  007244  5C77               	subwf	main@j,w,c
  2549  007246  B0D8               	btfsc	status,0,c
  2550  007248  D024               	goto	u6230
  2551  00724A                     l147:
  2552                           
  2553                           ;newmain.c: 456: set_led(Buttons[i][j]);
  2554  00724A  C07A  F069         	movff	main@i,??_main
  2555  00724E  C07B  F06A         	movff	main@i+1,??_main+1
  2556  007252  90D8               	bcf	status,0,c
  2557  007254  3669               	rlcf	??_main,f,c
  2558  007256  366A               	rlcf	??_main+1,f,c
  2559  007258  90D8               	bcf	status,0,c
  2560  00725A  3669               	rlcf	??_main,f,c
  2561  00725C  366A               	rlcf	??_main+1,f,c
  2562  00725E  90D8               	bcf	status,0,c
  2563  007260  3669               	rlcf	??_main,f,c
  2564  007262  366A               	rlcf	??_main+1,f,c
  2565  007264  0EF9               	movlw	low _Buttons
  2566  007266  6E6B               	movwf	(??_main+2)& (0+255),c
  2567  007268  0E7E               	movlw	high _Buttons
  2568  00726A  6E6C               	movwf	(??_main+3)& (0+255),c
  2569  00726C  5069               	movf	??_main,w,c
  2570  00726E  266B               	addwf	??_main+2,f,c
  2571  007270  506A               	movf	??_main+1,w,c
  2572  007272  226C               	addwfc	??_main+3,f,c
  2573  007274  5077               	movf	main@j,w,c
  2574  007276  266B               	addwf	??_main+2,f,c
  2575  007278  5078               	movf	main@j+1,w,c
  2576  00727A  226C               	addwfc	??_main+3,f,c
  2577  00727C  C06B  FFF6         	movff	??_main+2,tblptrl
  2578  007280  C06C  FFF7         	movff	??_main+3,tblptrh
  2579  007284                     	if	0	;tblptru may be non-zero
  2580  007284                     	endif
  2581  007284                     	if	0	;tblptru may be non-zero
  2582  007284                     	endif
  2583  007284  0008               	tblrd		*
  2584  007286  50F5               	movf	tablat,w,c
  2585  007288  ECD8  F024         	call	_set_led
  2586  00728C  4A77               	infsnz	main@j,f,c
  2587  00728E  2A78               	incf	main@j+1,f,c
  2588  007290  D7D4               	goto	l4766
  2589  007292                     u6230:
  2590  007292                     l4776:
  2591  007292  4A7A               	infsnz	main@i,f,c
  2592  007294  2A7B               	incf	main@i+1,f,c
  2593  007296  D7C5               	goto	l4760
  2594  007298                     u6240:
  2595  007298                     l4780:
  2596                           
  2597                           ;newmain.c: 457: write_display();
  2598  007298  EC8A  F025         	call	_write_display	;wreg free
  2599                           
  2600                           ;newmain.c: 458: _delay((unsigned long)((50)*(4000000/4000.0)));
  2601  00729C  0E41               	movlw	65
  2602  00729E  6E69               	movwf	??_main& (0+255),c
  2603  0072A0  0EEE               	movlw	238
  2604  0072A2                     u6947:
  2605  0072A2  2EE8               	decfsz	wreg,f,c
  2606  0072A4  D7FE               	bra	u6947
  2607  0072A6  2E69               	decfsz	??_main& (0+255),f,c
  2608  0072A8  D7FC               	bra	u6947
  2609  0072AA  D000               	nop2	
  2610                           
  2611                           ;newmain.c: 459: for (i = 0; i < 64; i++)
  2612  0072AC  0E00               	movlw	0
  2613  0072AE  6E7B               	movwf	main@i+1,c
  2614  0072B0  0E00               	movlw	0
  2615  0072B2  6E7A               	movwf	main@i,c
  2616  0072B4                     l4786:
  2617  0072B4  BE7B               	btfsc	main@i+1,7,c
  2618  0072B6  D006               	goto	l149
  2619  0072B8  507B               	movf	main@i+1,w,c
  2620  0072BA  E10A               	bnz	l4796
  2621  0072BC  0E40               	movlw	64
  2622  0072BE  5C7A               	subwf	main@i,w,c
  2623  0072C0  B0D8               	btfsc	status,0,c
  2624  0072C2  D006               	goto	u6260
  2625  0072C4                     l149:
  2626                           
  2627                           ;newmain.c: 460: clr_led(i);
  2628  0072C4  507A               	movf	main@i,w,c
  2629  0072C6  EC2F  F025         	call	_clr_led
  2630  0072CA  4A7A               	infsnz	main@i,f,c
  2631  0072CC  2A7B               	incf	main@i+1,f,c
  2632  0072CE  D7F2               	goto	l4786
  2633  0072D0                     u6260:
  2634  0072D0                     l4796:
  2635                           
  2636                           ;newmain.c: 461: write_display();
  2637  0072D0  EC8A  F025         	call	_write_display	;wreg free
  2638  0072D4                     
  2639                           ;newmain.c: 465: if (read_switch()) {
  2640  0072D4  ECD6  F026         	call	_read_switch	;wreg free
  2641  0072D8  0900               	iorlw	0
  2642  0072DA  B4D8               	btfsc	status,2,c
  2643  0072DC  D7FB               	goto	l151
  2644                           
  2645                           ;newmain.c: 466: for (h = 0; h < 64; h++) {
  2646  0072DE  0E00               	movlw	0
  2647  0072E0  6E79               	movwf	main@h,c
  2648  0072E2                     l4802:
  2649  0072E2  0E3F               	movlw	63
  2650  0072E4  6479               	cpfsgt	main@h,c
  2651  0072E6  D001               	goto	l153
  2652  0072E8  D7F5               	goto	l151
  2653  0072EA                     l153:
  2654                           
  2655                           ;newmain.c: 467: uint8_t x, y, note;
  2656                           ;newmain.c: 468: x = i2xy64[h] >> 4;
  2657  0072EA  5079               	movf	main@h,w,c
  2658  0072EC  0D01               	mullw	1
  2659  0072EE  0EF9               	movlw	low _i2xy64
  2660  0072F0  24F3               	addwf	prodl,w,c
  2661  0072F2  6EF6               	movwf	tblptrl,c
  2662  0072F4  0E7D               	movlw	high _i2xy64
  2663  0072F6  20F4               	addwfc	prodh,w,c
  2664  0072F8  6EF7               	movwf	tblptrh,c
  2665  0072FA                     	if	0	;There are less than 3 active tblptr bytes
  2666  0072FA                     	endif
  2667  0072FA  0008               	tblrd		*
  2668  0072FC  CFF5 F069          	movff	tablat,??_main
  2669  007300  3869               	swapf	??_main,w,c
  2670  007302  0B0F               	andlw	15
  2671  007304  6E6D               	movwf	main@x,c
  2672                           
  2673                           ;newmain.c: 469: y = i2xy64[h]&15;
  2674  007306  5079               	movf	main@h,w,c
  2675  007308  0D01               	mullw	1
  2676  00730A  0EF9               	movlw	low _i2xy64
  2677  00730C  24F3               	addwf	prodl,w,c
  2678  00730E  6EF6               	movwf	tblptrl,c
  2679  007310  0E7D               	movlw	high _i2xy64
  2680  007312  20F4               	addwfc	prodh,w,c
  2681  007314  6EF7               	movwf	tblptrh,c
  2682  007316                     	if	0	;There are less than 3 active tblptr bytes
  2683  007316                     	endif
  2684  007316  0008               	tblrd		*
  2685  007318  50F5               	movf	tablat,w,c
  2686  00731A  0B0F               	andlw	15
  2687  00731C  6E6E               	movwf	main@y,c
  2688                           
  2689                           ;newmain.c: 470: note = 32 + y * 8 + x;
  2690  00731E  506E               	movf	main@y,w,c
  2691  007320  0D08               	mullw	8
  2692  007322  50F3               	movf	prodl,w,c
  2693  007324  246D               	addwf	main@x,w,c
  2694  007326  0F20               	addlw	32
  2695  007328  6E71               	movwf	main@note,c
  2696                           
  2697                           ;newmain.c: 471: if (is_key_pressed(h)&&(!was_key_pressed(h))) {
  2698  00732A  5079               	movf	main@h,w,c
  2699  00732C  EC36  F024         	call	_is_key_pressed
  2700  007330  0900               	iorlw	0
  2701  007332  B4D8               	btfsc	status,2,c
  2702  007334  D338               	goto	l155
  2703  007336  5079               	movf	main@h,w,c
  2704  007338  EC87  F024         	call	_was_key_pressed
  2705  00733C  0900               	iorlw	0
  2706  00733E  A4D8               	btfss	status,2,c
  2707  007340  D332               	goto	l155
  2708                           
  2709                           ;newmain.c: 472: if (press[h] == 0) {
  2710  007342  5079               	movf	main@h,w,c
  2711  007344  0D02               	mullw	2
  2712  007346  0E00               	movlw	low _press
  2713  007348  24F3               	addwf	prodl,w,c
  2714  00734A  6ED9               	movwf	fsr2l,c
  2715  00734C  0E01               	movlw	high _press
  2716  00734E  20F4               	addwfc	prodh,w,c
  2717  007350  6EDA               	movwf	fsr2h,c
  2718  007352  50DE               	movf	postinc2,w,c
  2719  007354  10DE               	iorwf	postinc2,w,c
  2720  007356  A4D8               	btfss	status,2,c
  2721  007358  D034               	goto	l156
  2722                           
  2723                           ;newmain.c: 473: if (play_mode == 0 || play_mode == 2) {
  2724  00735A  507C               	movf	_play_mode,w,c
  2725  00735C  107D               	iorwf	_play_mode+1,w,c
  2726  00735E  B4D8               	btfsc	status,2,c
  2727  007360  D005               	goto	u6330
  2728  007362  0E02               	movlw	2
  2729  007364  187C               	xorwf	_play_mode,w,c
  2730  007366  107D               	iorwf	_play_mode+1,w,c
  2731  007368  A4D8               	btfss	status,2,c
  2732  00736A  D011               	goto	l157
  2733  00736C                     u6330:
  2734                           
  2735                           ;newmain.c: 474: send_note(0x99, drum_midi[h], 0x40);
  2736  00736C  5079               	movf	main@h,w,c
  2737  00736E  0D01               	mullw	1
  2738  007370  0EB9               	movlw	low _drum_midi
  2739  007372  24F3               	addwf	prodl,w,c
  2740  007374  6EF6               	movwf	tblptrl,c
  2741  007376  0E7D               	movlw	high _drum_midi
  2742  007378  20F4               	addwfc	prodh,w,c
  2743  00737A  6EF7               	movwf	tblptrh,c
  2744  00737C                     	if	0	;There are less than 3 active tblptr bytes
  2745  00737C                     	endif
  2746  00737C  0008               	tblrd		*
  2747  00737E  CFF5 F043          	movff	tablat,send_note@two
  2748  007382  0E40               	movlw	64
  2749  007384  6E44               	movwf	send_note@three,c
  2750  007386  0E99               	movlw	153
  2751  007388  EC60  F023         	call	_send_note
  2752                           
  2753                           ;newmain.c: 475: } else if (play_mode == 1 || play_mode == 3) {
  2754  00738C  D010               	goto	l161
  2755  00738E                     l157:
  2756  00738E  047C               	decf	_play_mode,w,c
  2757  007390  107D               	iorwf	_play_mode+1,w,c
  2758  007392  B4D8               	btfsc	status,2,c
  2759  007394  D005               	goto	u6350
  2760  007396  0E03               	movlw	3
  2761  007398  187C               	xorwf	_play_mode,w,c
  2762  00739A  107D               	iorwf	_play_mode+1,w,c
  2763  00739C  A4D8               	btfss	status,2,c
  2764  00739E  D007               	goto	l161
  2765  0073A0                     u6350:
  2766                           
  2767                           ;newmain.c: 476: send_note(0x90, note, 127);
  2768  0073A0  C071  F043         	movff	main@note,send_note@two
  2769  0073A4  0E7F               	movlw	127
  2770  0073A6  6E44               	movwf	send_note@three,c
  2771  0073A8  0E90               	movlw	144
  2772  0073AA  EC60  F023         	call	_send_note
  2773  0073AE                     l161:
  2774                           
  2775                           ;newmain.c: 477: }
  2776                           ;newmain.c: 478: press[h] = 1;
  2777  0073AE  5079               	movf	main@h,w,c
  2778  0073B0  0D02               	mullw	2
  2779  0073B2  0E00               	movlw	low _press
  2780  0073B4  24F3               	addwf	prodl,w,c
  2781  0073B6  6ED9               	movwf	fsr2l,c
  2782  0073B8  0E01               	movlw	high _press
  2783  0073BA  20F4               	addwfc	prodh,w,c
  2784  0073BC  6EDA               	movwf	fsr2h,c
  2785  0073BE  0E01               	movlw	1
  2786  0073C0  D04C               	goto	L1
  2787  0073C2                     l156:
  2788                           
  2789                           ;newmain.c: 480: if (play_mode == 0) {
  2790  0073C2  507C               	movf	_play_mode,w,c
  2791  0073C4  107D               	iorwf	_play_mode+1,w,c
  2792  0073C6  A4D8               	btfss	status,2,c
  2793  0073C8  D011               	goto	l165
  2794                           
  2795                           ;newmain.c: 481: send_note(0x99, drum_midi[h], 0x40);
  2796  0073CA  5079               	movf	main@h,w,c
  2797  0073CC  0D01               	mullw	1
  2798  0073CE  0EB9               	movlw	low _drum_midi
  2799  0073D0  24F3               	addwf	prodl,w,c
  2800  0073D2  6EF6               	movwf	tblptrl,c
  2801  0073D4  0E7D               	movlw	high _drum_midi
  2802  0073D6  20F4               	addwfc	prodh,w,c
  2803  0073D8  6EF7               	movwf	tblptrh,c
  2804  0073DA                     	if	0	;There are less than 3 active tblptr bytes
  2805  0073DA                     	endif
  2806  0073DA  0008               	tblrd		*
  2807  0073DC  CFF5 F043          	movff	tablat,send_note@two
  2808  0073E0  0E40               	movlw	64
  2809  0073E2  6E44               	movwf	send_note@three,c
  2810  0073E4  0E99               	movlw	153
  2811  0073E6  EC60  F023         	call	_send_note
  2812                           
  2813                           ;newmain.c: 482: } else if (play_mode == 1) {
  2814  0073EA  D02E               	goto	l171
  2815  0073EC                     l165:
  2816  0073EC  047C               	decf	_play_mode,w,c
  2817  0073EE  107D               	iorwf	_play_mode+1,w,c
  2818  0073F0  A4D8               	btfss	status,2,c
  2819  0073F2  D008               	goto	l167
  2820                           
  2821                           ;newmain.c: 483: send_note(0x90, note, 127);
  2822  0073F4  C071  F043         	movff	main@note,send_note@two
  2823  0073F8  0E7F               	movlw	127
  2824  0073FA  6E44               	movwf	send_note@three,c
  2825  0073FC  0E90               	movlw	144
  2826  0073FE  EC60  F023         	call	_send_note
  2827                           
  2828                           ;newmain.c: 484: } else if (play_mode == 2) {
  2829  007402  D022               	goto	l171
  2830  007404                     l167:
  2831  007404  0E02               	movlw	2
  2832  007406  187C               	xorwf	_play_mode,w,c
  2833  007408  107D               	iorwf	_play_mode+1,w,c
  2834  00740A  A4D8               	btfss	status,2,c
  2835  00740C  D011               	goto	l169
  2836                           
  2837                           ;newmain.c: 485: send_note(0x89, drum_midi[h], 0x00);
  2838  00740E  5079               	movf	main@h,w,c
  2839  007410  0D01               	mullw	1
  2840  007412  0EB9               	movlw	low _drum_midi
  2841  007414  24F3               	addwf	prodl,w,c
  2842  007416  6EF6               	movwf	tblptrl,c
  2843  007418  0E7D               	movlw	high _drum_midi
  2844  00741A  20F4               	addwfc	prodh,w,c
  2845  00741C  6EF7               	movwf	tblptrh,c
  2846  00741E                     	if	0	;There are less than 3 active tblptr bytes
  2847  00741E                     	endif
  2848  00741E  0008               	tblrd		*
  2849  007420  CFF5 F043          	movff	tablat,send_note@two
  2850  007424  0E00               	movlw	0
  2851  007426  6E44               	movwf	send_note@three,c
  2852  007428  0E89               	movlw	137
  2853  00742A  EC60  F023         	call	_send_note
  2854                           
  2855                           ;newmain.c: 486: } else if (play_mode == 3) {
  2856  00742E  D00C               	goto	l171
  2857  007430                     l169:
  2858  007430  0E03               	movlw	3
  2859  007432  187C               	xorwf	_play_mode,w,c
  2860  007434  107D               	iorwf	_play_mode+1,w,c
  2861  007436  A4D8               	btfss	status,2,c
  2862  007438  D007               	goto	l171
  2863                           
  2864                           ;newmain.c: 487: send_note(0x80, note, 127);
  2865  00743A  C071  F043         	movff	main@note,send_note@two
  2866  00743E  0E7F               	movlw	127
  2867  007440  6E44               	movwf	send_note@three,c
  2868  007442  0E80               	movlw	128
  2869  007444  EC60  F023         	call	_send_note
  2870  007448                     l171:
  2871                           
  2872                           ;newmain.c: 488: }
  2873                           ;newmain.c: 489: press[h] = 0;
  2874  007448  5079               	movf	main@h,w,c
  2875  00744A  0D02               	mullw	2
  2876  00744C  0E00               	movlw	low _press
  2877  00744E  24F3               	addwf	prodl,w,c
  2878  007450  6ED9               	movwf	fsr2l,c
  2879  007452  0E01               	movlw	high _press
  2880  007454  20F4               	addwfc	prodh,w,c
  2881  007456  6EDA               	movwf	fsr2h,c
  2882  007458  0E00               	movlw	0
  2883  00745A                     L1:
  2884  00745A  6EDE               	movwf	postinc2,c
  2885  00745C  0E00               	movlw	0
  2886  00745E  6EDD               	movwf	postdec2,c
  2887                           
  2888                           ;newmain.c: 490: }
  2889                           ;newmain.c: 491: for (i = 0; i < 8; i++) {
  2890  007460  0E00               	movlw	0
  2891  007462  6E7B               	movwf	main@i+1,c
  2892  007464  0E00               	movlw	0
  2893  007466  6E7A               	movwf	main@i,c
  2894  007468                     l4850:
  2895  007468  BE7B               	btfsc	main@i+1,7,c
  2896  00746A  D006               	goto	l172
  2897  00746C  507B               	movf	main@i+1,w,c
  2898  00746E  E15B               	bnz	l4864
  2899  007470  0E08               	movlw	8
  2900  007472  5C7A               	subwf	main@i,w,c
  2901  007474  B0D8               	btfsc	status,0,c
  2902  007476  D057               	goto	u6420
  2903  007478                     l172:
  2904                           
  2905                           ;newmain.c: 492: if (h == Buttons[i][7]) {
  2906  007478  C07A  F069         	movff	main@i,??_main
  2907  00747C  C07B  F06A         	movff	main@i+1,??_main+1
  2908  007480  90D8               	bcf	status,0,c
  2909  007482  3669               	rlcf	??_main,f,c
  2910  007484  366A               	rlcf	??_main+1,f,c
  2911  007486  90D8               	bcf	status,0,c
  2912  007488  3669               	rlcf	??_main,f,c
  2913  00748A  366A               	rlcf	??_main+1,f,c
  2914  00748C  90D8               	bcf	status,0,c
  2915  00748E  3669               	rlcf	??_main,f,c
  2916  007490  366A               	rlcf	??_main+1,f,c
  2917  007492  0E07               	movlw	7
  2918  007494  2669               	addwf	??_main,f,c
  2919  007496  0E00               	movlw	0
  2920  007498  226A               	addwfc	??_main+1,f,c
  2921  00749A  0EF9               	movlw	low _Buttons
  2922  00749C  2469               	addwf	??_main,w,c
  2923  00749E  6EF6               	movwf	tblptrl,c
  2924  0074A0  0E7E               	movlw	high _Buttons
  2925  0074A2  206A               	addwfc	??_main+1,w,c
  2926  0074A4  6EF7               	movwf	tblptrh,c
  2927  0074A6                     	if	0	;There are less than 3 active tblptr bytes
  2928  0074A6                     	endif
  2929  0074A6  0008               	tblrd		*
  2930  0074A8  50F5               	movf	tablat,w,c
  2931  0074AA  1879               	xorwf	main@h,w,c
  2932  0074AC  A4D8               	btfss	status,2,c
  2933  0074AE  D014               	goto	l174
  2934                           
  2935                           ;newmain.c: 493: rightbutton = (h - 19) >> 2;
  2936  0074B0  0EED               	movlw	237
  2937  0074B2  6E69               	movwf	??_main& (0+255),c
  2938  0074B4  0EFF               	movlw	255
  2939  0074B6  6E6A               	movwf	(??_main+1)& (0+255),c
  2940  0074B8  5079               	movf	main@h,w,c
  2941  0074BA  6E6B               	movwf	(??_main+2)& (0+255),c
  2942  0074BC  6A6C               	clrf	(??_main+3)& (0+255),c
  2943  0074BE  5069               	movf	??_main,w,c
  2944  0074C0  266B               	addwf	??_main+2,f,c
  2945  0074C2  506A               	movf	??_main+1,w,c
  2946  0074C4  226C               	addwfc	??_main+3,f,c
  2947  0074C6  346C               	rlcf	??_main+3,w,c
  2948  0074C8  326C               	rrcf	??_main+3,f,c
  2949  0074CA  326B               	rrcf	??_main+2,f,c
  2950  0074CC  346C               	rlcf	??_main+3,w,c
  2951  0074CE  326C               	rrcf	??_main+3,f,c
  2952  0074D0  326B               	rrcf	??_main+2,f,c
  2953  0074D2  506B               	movf	??_main+2,w,c
  2954  0074D4  6E74               	movwf	main@rightbutton,c
  2955                           
  2956                           ;newmain.c: 494: }else{
  2957  0074D6  D024               	goto	l175
  2958  0074D8                     l174:
  2959                           
  2960                           ;newmain.c: 495: press[Buttons[i][7]] = 0;
  2961  0074D8  C07A  F069         	movff	main@i,??_main
  2962  0074DC  C07B  F06A         	movff	main@i+1,??_main+1
  2963  0074E0  90D8               	bcf	status,0,c
  2964  0074E2  3669               	rlcf	??_main,f,c
  2965  0074E4  366A               	rlcf	??_main+1,f,c
  2966  0074E6  90D8               	bcf	status,0,c
  2967  0074E8  3669               	rlcf	??_main,f,c
  2968  0074EA  366A               	rlcf	??_main+1,f,c
  2969  0074EC  90D8               	bcf	status,0,c
  2970  0074EE  3669               	rlcf	??_main,f,c
  2971  0074F0  366A               	rlcf	??_main+1,f,c
  2972  0074F2  0E07               	movlw	7
  2973  0074F4  2669               	addwf	??_main,f,c
  2974  0074F6  0E00               	movlw	0
  2975  0074F8  226A               	addwfc	??_main+1,f,c
  2976  0074FA  0EF9               	movlw	low _Buttons
  2977  0074FC  2469               	addwf	??_main,w,c
  2978  0074FE  6EF6               	movwf	tblptrl,c
  2979  007500  0E7E               	movlw	high _Buttons
  2980  007502  206A               	addwfc	??_main+1,w,c
  2981  007504  6EF7               	movwf	tblptrh,c
  2982  007506                     	if	0	;There are less than 3 active tblptr bytes
  2983  007506                     	endif
  2984  007506  0008               	tblrd		*
  2985  007508  50F5               	movf	tablat,w,c
  2986  00750A  0D02               	mullw	2
  2987  00750C  0E00               	movlw	low _press
  2988  00750E  24F3               	addwf	prodl,w,c
  2989  007510  6ED9               	movwf	fsr2l,c
  2990  007512  0E01               	movlw	high _press
  2991  007514  20F4               	addwfc	prodh,w,c
  2992  007516  6EDA               	movwf	fsr2h,c
  2993  007518  0E00               	movlw	0
  2994  00751A  6EDE               	movwf	postinc2,c
  2995  00751C  0E00               	movlw	0
  2996  00751E  6EDD               	movwf	postdec2,c
  2997  007520                     l175:
  2998  007520  4A7A               	infsnz	main@i,f,c
  2999  007522  2A7B               	incf	main@i+1,f,c
  3000  007524  D7A1               	goto	l4850
  3001  007526                     u6420:
  3002  007526                     l4864:
  3003                           
  3004                           ;newmain.c: 496: }
  3005                           ;newmain.c: 497: }
  3006                           ;newmain.c: 499: for (i = 0; i < 8; i++) {
  3007  007526  0E00               	movlw	0
  3008  007528  6E7B               	movwf	main@i+1,c
  3009  00752A  0E00               	movlw	0
  3010  00752C  6E7A               	movwf	main@i,c
  3011  00752E                     l4866:
  3012  00752E  BE7B               	btfsc	main@i+1,7,c
  3013  007530  D006               	goto	l176
  3014  007532  507B               	movf	main@i+1,w,c
  3015  007534  E141               	bnz	l4888
  3016  007536  0E08               	movlw	8
  3017  007538  5C7A               	subwf	main@i,w,c
  3018  00753A  B0D8               	btfsc	status,0,c
  3019  00753C  D03D               	goto	u6470
  3020  00753E                     l176:
  3021                           
  3022                           ;newmain.c: 500: for (j = 0; j < 8; j++) {
  3023  00753E  0E00               	movlw	0
  3024  007540  6E78               	movwf	main@j+1,c
  3025  007542  0E00               	movlw	0
  3026  007544  6E77               	movwf	main@j,c
  3027  007546                     l4872:
  3028  007546  BE78               	btfsc	main@j+1,7,c
  3029  007548  D006               	goto	l178
  3030  00754A  5078               	movf	main@j+1,w,c
  3031  00754C  E132               	bnz	l4884
  3032  00754E  0E08               	movlw	8
  3033  007550  5C77               	subwf	main@j,w,c
  3034  007552  B0D8               	btfsc	status,0,c
  3035  007554  D02E               	goto	u6460
  3036  007556                     l178:
  3037                           
  3038                           ;newmain.c: 501: if (h == Buttons[i][j]) {
  3039  007556  C07A  F069         	movff	main@i,??_main
  3040  00755A  C07B  F06A         	movff	main@i+1,??_main+1
  3041  00755E  90D8               	bcf	status,0,c
  3042  007560  3669               	rlcf	??_main,f,c
  3043  007562  366A               	rlcf	??_main+1,f,c
  3044  007564  90D8               	bcf	status,0,c
  3045  007566  3669               	rlcf	??_main,f,c
  3046  007568  366A               	rlcf	??_main+1,f,c
  3047  00756A  90D8               	bcf	status,0,c
  3048  00756C  3669               	rlcf	??_main,f,c
  3049  00756E  366A               	rlcf	??_main+1,f,c
  3050  007570  0EF9               	movlw	low _Buttons
  3051  007572  6E6B               	movwf	(??_main+2)& (0+255),c
  3052  007574  0E7E               	movlw	high _Buttons
  3053  007576  6E6C               	movwf	(??_main+3)& (0+255),c
  3054  007578  5069               	movf	??_main,w,c
  3055  00757A  266B               	addwf	??_main+2,f,c
  3056  00757C  506A               	movf	??_main+1,w,c
  3057  00757E  226C               	addwfc	??_main+3,f,c
  3058  007580  5077               	movf	main@j,w,c
  3059  007582  266B               	addwf	??_main+2,f,c
  3060  007584  5078               	movf	main@j+1,w,c
  3061  007586  226C               	addwfc	??_main+3,f,c
  3062  007588  C06B  FFF6         	movff	??_main+2,tblptrl
  3063  00758C  C06C  FFF7         	movff	??_main+3,tblptrh
  3064  007590                     	if	0	;tblptru may be non-zero
  3065  007590                     	endif
  3066  007590                     	if	0	;tblptru may be non-zero
  3067  007590                     	endif
  3068  007590  0008               	tblrd		*
  3069  007592  50F5               	movf	tablat,w,c
  3070  007594  1879               	xorwf	main@h,w,c
  3071  007596  A4D8               	btfss	status,2,c
  3072  007598  D009               	goto	l180
  3073                           
  3074                           ;newmain.c: 502: column = Buttons[0][j];
  3075  00759A  0EF9               	movlw	low _Buttons
  3076  00759C  2477               	addwf	main@j,w,c
  3077  00759E  6EF6               	movwf	tblptrl,c
  3078  0075A0  0E7E               	movlw	high _Buttons
  3079  0075A2  2078               	addwfc	main@j+1,w,c
  3080  0075A4  6EF7               	movwf	tblptrh,c
  3081  0075A6                     	if	0	;There are less than 3 active tblptr bytes
  3082  0075A6                     	endif
  3083  0075A6  0008               	tblrd		*
  3084  0075A8  CFF5 F075          	movff	tablat,main@column
  3085  0075AC                     l180:
  3086  0075AC  4A77               	infsnz	main@j,f,c
  3087  0075AE  2A78               	incf	main@j+1,f,c
  3088  0075B0  D7CA               	goto	l4872
  3089  0075B2                     u6460:
  3090  0075B2                     l4884:
  3091  0075B2  4A7A               	infsnz	main@i,f,c
  3092  0075B4  2A7B               	incf	main@i+1,f,c
  3093  0075B6  D7BB               	goto	l4866
  3094  0075B8                     u6470:
  3095  0075B8                     l4888:
  3096                           
  3097                           ;newmain.c: 503: }
  3098                           ;newmain.c: 504: }
  3099                           ;newmain.c: 505: }
  3100                           ;newmain.c: 508: if (column == 19) {
  3101  0075B8  0E13               	movlw	19
  3102  0075BA  1875               	xorwf	main@column,w,c
  3103  0075BC  A4D8               	btfss	status,2,c
  3104  0075BE  D014               	goto	l181
  3105                           
  3106                           ;newmain.c: 509: for (i = 0; i < 64; i++)
  3107  0075C0  0E00               	movlw	0
  3108  0075C2  6E7B               	movwf	main@i+1,c
  3109  0075C4  0E00               	movlw	0
  3110  0075C6  6E7A               	movwf	main@i,c
  3111  0075C8                     l4892:
  3112  0075C8  BE7B               	btfsc	main@i+1,7,c
  3113  0075CA  D006               	goto	l182
  3114  0075CC  507B               	movf	main@i+1,w,c
  3115  0075CE  E10A               	bnz	l4902
  3116  0075D0  0E40               	movlw	64
  3117  0075D2  5C7A               	subwf	main@i,w,c
  3118  0075D4  B0D8               	btfsc	status,0,c
  3119  0075D6  D006               	goto	u6500
  3120  0075D8                     l182:
  3121                           
  3122                           ;newmain.c: 510: clr_led(i);
  3123  0075D8  507A               	movf	main@i,w,c
  3124  0075DA  EC2F  F025         	call	_clr_led
  3125  0075DE  4A7A               	infsnz	main@i,f,c
  3126  0075E0  2A7B               	incf	main@i+1,f,c
  3127  0075E2  D7F2               	goto	l4892
  3128  0075E4                     u6500:
  3129  0075E4                     l4902:
  3130                           
  3131                           ;newmain.c: 511: write_display();
  3132  0075E4  EC8A  F025         	call	_write_display	;wreg free
  3133  0075E8                     l181:
  3134                           
  3135                           ;newmain.c: 512: }
  3136                           ;newmain.c: 514: if (rightbutton == 0 && column != 19) {
  3137  0075E8  5074               	movf	main@rightbutton,w,c
  3138  0075EA  A4D8               	btfss	status,2,c
  3139  0075EC  D0AA               	goto	l184
  3140  0075EE  0E13               	movlw	19
  3141  0075F0  1875               	xorwf	main@column,w,c
  3142  0075F2  B4D8               	btfsc	status,2,c
  3143  0075F4  D0A6               	goto	l184
  3144                           
  3145                           ;newmain.c: 515: for (i = 0; i < 14; i++) {
  3146  0075F6  0E00               	movlw	0
  3147  0075F8  6E7B               	movwf	main@i+1,c
  3148  0075FA  0E00               	movlw	0
  3149  0075FC  6E7A               	movwf	main@i,c
  3150  0075FE                     l4910:
  3151  0075FE  BE7B               	btfsc	main@i+1,7,c
  3152  007600  D006               	goto	l185
  3153  007602  507B               	movf	main@i+1,w,c
  3154  007604  E156               	bnz	l4948
  3155  007606  0E0E               	movlw	14
  3156  007608  5C7A               	subwf	main@i,w,c
  3157  00760A  B0D8               	btfsc	status,0,c
  3158  00760C  D052               	goto	u6580
  3159  00760E                     l185:
  3160                           
  3161                           ;newmain.c: 516: if (h == show0_1[i]) {
  3162  00760E  0E8B               	movlw	low _show0_1
  3163  007610  247A               	addwf	main@i,w,c
  3164  007612  6EF6               	movwf	tblptrl,c
  3165  007614  0E7F               	movlw	high _show0_1
  3166  007616  207B               	addwfc	main@i+1,w,c
  3167  007618  6EF7               	movwf	tblptrh,c
  3168  00761A                     	if	0	;There are less than 3 active tblptr bytes
  3169  00761A                     	endif
  3170  00761A  0008               	tblrd		*
  3171  00761C  50F5               	movf	tablat,w,c
  3172  00761E  1879               	xorwf	main@h,w,c
  3173  007620  A4D8               	btfss	status,2,c
  3174  007622  D002               	goto	l187
  3175                           
  3176                           ;newmain.c: 517: m = 1;
  3177  007624  0E01               	movlw	1
  3178  007626  D03E               	goto	L4
  3179  007628                     l187:
  3180  007628  C07A  F069         	movff	main@i,??_main
  3181  00762C  C07B  F06A         	movff	main@i+1,??_main+1
  3182  007630  1E69               	comf	??_main,f,c
  3183  007632  1E6A               	comf	??_main+1,f,c
  3184  007634  4A69               	infsnz	??_main,f,c
  3185  007636  2A6A               	incf	??_main+1,f,c
  3186  007638  0E27               	movlw	39
  3187  00763A  2669               	addwf	??_main,f,c
  3188  00763C  0E00               	movlw	0
  3189  00763E  226A               	addwfc	??_main+1,f,c
  3190  007640  0E8B               	movlw	low _show0_1
  3191  007642  2469               	addwf	??_main,w,c
  3192  007644  6EF6               	movwf	tblptrl,c
  3193  007646  0E7F               	movlw	high _show0_1
  3194  007648  206A               	addwfc	??_main+1,w,c
  3195  00764A  6EF7               	movwf	tblptrh,c
  3196  00764C                     	if	0	;There are less than 3 active tblptr bytes
  3197  00764C                     	endif
  3198  00764C  0008               	tblrd		*
  3199  00764E  50F5               	movf	tablat,w,c
  3200  007650  1879               	xorwf	main@h,w,c
  3201  007652  A4D8               	btfss	status,2,c
  3202  007654  D002               	goto	l189
  3203                           
  3204                           ;newmain.c: 521: m = 2;
  3205  007656  0E02               	movlw	2
  3206  007658  D025               	goto	L4
  3207  00765A                     l189:
  3208  00765A  0E63               	movlw	low _show0_2
  3209  00765C  247A               	addwf	main@i,w,c
  3210  00765E  6EF6               	movwf	tblptrl,c
  3211  007660  0E7F               	movlw	high _show0_2
  3212  007662  207B               	addwfc	main@i+1,w,c
  3213  007664  6EF7               	movwf	tblptrh,c
  3214  007666                     	if	0	;There are less than 3 active tblptr bytes
  3215  007666                     	endif
  3216  007666  0008               	tblrd		*
  3217  007668  50F5               	movf	tablat,w,c
  3218  00766A  1879               	xorwf	main@h,w,c
  3219  00766C  A4D8               	btfss	status,2,c
  3220  00766E  D002               	goto	l191
  3221                           
  3222                           ;newmain.c: 525: m = 3;
  3223  007670  0E03               	movlw	3
  3224  007672  D018               	goto	L4
  3225  007674                     l191:
  3226  007674  C07A  F069         	movff	main@i,??_main
  3227  007678  C07B  F06A         	movff	main@i+1,??_main+1
  3228  00767C  1E69               	comf	??_main,f,c
  3229  00767E  1E6A               	comf	??_main+1,f,c
  3230  007680  4A69               	infsnz	??_main,f,c
  3231  007682  2A6A               	incf	??_main+1,f,c
  3232  007684  0E27               	movlw	39
  3233  007686  2669               	addwf	??_main,f,c
  3234  007688  0E00               	movlw	0
  3235  00768A  226A               	addwfc	??_main+1,f,c
  3236  00768C  0E63               	movlw	low _show0_2
  3237  00768E  2469               	addwf	??_main,w,c
  3238  007690  6EF6               	movwf	tblptrl,c
  3239  007692  0E7F               	movlw	high _show0_2
  3240  007694  206A               	addwfc	??_main+1,w,c
  3241  007696  6EF7               	movwf	tblptrh,c
  3242  007698                     	if	0	;There are less than 3 active tblptr bytes
  3243  007698                     	endif
  3244  007698  0008               	tblrd		*
  3245  00769A  50F5               	movf	tablat,w,c
  3246  00769C  1879               	xorwf	main@h,w,c
  3247  00769E  A4D8               	btfss	status,2,c
  3248  0076A0  D005               	goto	l193
  3249                           
  3250                           ;newmain.c: 529: m = 4;
  3251  0076A2  0E04               	movlw	4
  3252  0076A4                     L4:
  3253  0076A4  6E76               	movwf	main@m,c
  3254                           
  3255                           ;newmain.c: 530: n = i;
  3256  0076A6  C07A  F073         	movff	main@i,main@n
  3257                           
  3258                           ;newmain.c: 531: break;
  3259  0076AA  D003               	goto	u6580
  3260  0076AC                     l193:
  3261  0076AC  4A7A               	infsnz	main@i,f,c
  3262  0076AE  2A7B               	incf	main@i+1,f,c
  3263  0076B0  D7A6               	goto	l4910
  3264  0076B2                     u6580:
  3265  0076B2                     l4948:
  3266                           
  3267                           ;newmain.c: 532: }
  3268                           ;newmain.c: 533: }
  3269                           ;newmain.c: 534: for (i = 0; i < 2; i++) {
  3270  0076B2  0E00               	movlw	0
  3271  0076B4  6E7B               	movwf	main@i+1,c
  3272  0076B6  0E00               	movlw	0
  3273  0076B8  6E7A               	movwf	main@i,c
  3274  0076BA                     l4950:
  3275  0076BA  BE7B               	btfsc	main@i+1,7,c
  3276  0076BC  D006               	goto	l194
  3277  0076BE  507B               	movf	main@i+1,w,c
  3278  0076C0  E13A               	bnz	l4974
  3279  0076C2  0E02               	movlw	2
  3280  0076C4  5C7A               	subwf	main@i,w,c
  3281  0076C6  B0D8               	btfsc	status,0,c
  3282  0076C8  D036               	goto	u6630
  3283  0076CA                     l194:
  3284                           
  3285                           ;newmain.c: 535: for (j = 0; j < 8; j++) {
  3286  0076CA  0E00               	movlw	0
  3287  0076CC  6E78               	movwf	main@j+1,c
  3288  0076CE  0E00               	movlw	0
  3289  0076D0  6E77               	movwf	main@j,c
  3290  0076D2                     l4956:
  3291  0076D2  BE78               	btfsc	main@j+1,7,c
  3292  0076D4  D006               	goto	l196
  3293  0076D6  5078               	movf	main@j+1,w,c
  3294  0076D8  E12B               	bnz	l4970
  3295  0076DA  0E08               	movlw	8
  3296  0076DC  5C77               	subwf	main@j,w,c
  3297  0076DE  B0D8               	btfsc	status,0,c
  3298  0076E0  D027               	goto	u6620
  3299  0076E2                     l196:
  3300                           
  3301                           ;newmain.c: 536: if (h == show0_3[i][j]) {
  3302  0076E2  C07A  F043         	movff	main@i,___wmul@multiplier
  3303  0076E6  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  3304  0076EA  0E00               	movlw	0
  3305  0076EC  6E46               	movwf	___wmul@multiplicand+1,c
  3306  0076EE  0E14               	movlw	20
  3307  0076F0  6E45               	movwf	___wmul@multiplicand,c
  3308  0076F2  EC71  F023         	call	___wmul	;wreg free
  3309  0076F6  0E55               	movlw	low _show0_3
  3310  0076F8  6E69               	movwf	??_main& (0+255),c
  3311  0076FA  0E7B               	movlw	high _show0_3
  3312  0076FC  6E6A               	movwf	(??_main+1)& (0+255),c
  3313  0076FE  5043               	movf	?___wmul,w,c
  3314  007700  2669               	addwf	??_main,f,c
  3315  007702  5044               	movf	?___wmul+1,w,c
  3316  007704  226A               	addwfc	??_main+1,f,c
  3317  007706  5077               	movf	main@j,w,c
  3318  007708  2669               	addwf	??_main,f,c
  3319  00770A  5078               	movf	main@j+1,w,c
  3320  00770C  226A               	addwfc	??_main+1,f,c
  3321  00770E  C069  FFF6         	movff	??_main,tblptrl
  3322  007712  C06A  FFF7         	movff	??_main+1,tblptrh
  3323  007716                     	if	0	;tblptru may be non-zero
  3324  007716                     	endif
  3325  007716                     	if	0	;tblptru may be non-zero
  3326  007716                     	endif
  3327  007716  0008               	tblrd		*
  3328  007718  50F5               	movf	tablat,w,c
  3329  00771A  1879               	xorwf	main@h,w,c
  3330  00771C  A4D8               	btfss	status,2,c
  3331  00771E  D005               	goto	l198
  3332                           
  3333                           ;newmain.c: 537: m = 5;
  3334  007720  0E05               	movlw	5
  3335  007722  6E76               	movwf	main@m,c
  3336                           
  3337                           ;newmain.c: 538: n = i;
  3338  007724  C07A  F073         	movff	main@i,main@n
  3339                           
  3340                           ;newmain.c: 539: break;
  3341  007728  D003               	goto	u6620
  3342  00772A                     l198:
  3343  00772A  4A77               	infsnz	main@j,f,c
  3344  00772C  2A78               	incf	main@j+1,f,c
  3345  00772E  D7D1               	goto	l4956
  3346  007730                     u6620:
  3347  007730                     l4970:
  3348  007730  4A7A               	infsnz	main@i,f,c
  3349  007732  2A7B               	incf	main@i+1,f,c
  3350  007734  D7C2               	goto	l4950
  3351  007736                     u6630:
  3352  007736                     l4974:
  3353                           
  3354                           ;newmain.c: 540: }
  3355                           ;newmain.c: 541: }
  3356                           ;newmain.c: 542: }
  3357                           ;newmain.c: 543: animation0(m, n);
  3358  007736  C073  F058         	movff	main@n,animation0@n
  3359  00773A  5076               	movf	main@m,w,c
  3360  00773C  ECBA  F02A         	call	_animation0
  3361                           
  3362                           ;newmain.c: 544: } else if (rightbutton == 1 && column != 19) {
  3363  007740  D118               	goto	l224
  3364  007742                     l184:
  3365  007742  0474               	decf	main@rightbutton,w,c
  3366  007744  A4D8               	btfss	status,2,c
  3367  007746  D010               	goto	l200
  3368  007748  0E13               	movlw	19
  3369  00774A  1875               	xorwf	main@column,w,c
  3370  00774C  B4D8               	btfsc	status,2,c
  3371  00774E  D00C               	goto	l200
  3372                           
  3373                           ;newmain.c: 546: m = h >> 4;
  3374  007750  3879               	swapf	main@h,w,c
  3375  007752  0B0F               	andlw	15
  3376  007754  6E76               	movwf	main@m,c
  3377                           
  3378                           ;newmain.c: 547: n = h & 0x0f;
  3379  007756  5079               	movf	main@h,w,c
  3380  007758  0B0F               	andlw	15
  3381  00775A  6E73               	movwf	main@n,c
  3382                           
  3383                           ;newmain.c: 548: animation1(m, n);
  3384  00775C  C073  F058         	movff	main@n,animation1@n
  3385  007760  5076               	movf	main@m,w,c
  3386  007762  EC24  F026         	call	_animation1
  3387                           
  3388                           ;newmain.c: 549: } else if (rightbutton == 2 && column != 19) {
  3389  007766  D105               	goto	l224
  3390  007768                     l200:
  3391  007768  0E02               	movlw	2
  3392  00776A  1874               	xorwf	main@rightbutton,w,c
  3393  00776C  A4D8               	btfss	status,2,c
  3394  00776E  D012               	goto	l202
  3395  007770  0E13               	movlw	19
  3396  007772  1875               	xorwf	main@column,w,c
  3397  007774  B4D8               	btfsc	status,2,c
  3398  007776  D00E               	goto	l202
  3399                           
  3400                           ;newmain.c: 550: m = h >> 4;
  3401  007778  3879               	swapf	main@h,w,c
  3402  00777A  0B0F               	andlw	15
  3403  00777C  6E76               	movwf	main@m,c
  3404                           
  3405                           ;newmain.c: 551: n = h & 0x0f;
  3406  00777E  5079               	movf	main@h,w,c
  3407  007780  0B0F               	andlw	15
  3408  007782  6E73               	movwf	main@n,c
  3409                           
  3410                           ;newmain.c: 552: animation2(m, n, h);
  3411  007784  C073  F058         	movff	main@n,animation2@n
  3412  007788  C079  F059         	movff	main@h,animation2@h
  3413  00778C  5076               	movf	main@m,w,c
  3414  00778E  EC56  F031         	call	_animation2
  3415                           
  3416                           ;newmain.c: 553: } else if (rightbutton == 3 && column != 19) {
  3417  007792  D0EF               	goto	l224
  3418  007794                     l202:
  3419  007794  0E03               	movlw	3
  3420  007796  1874               	xorwf	main@rightbutton,w,c
  3421  007798  A4D8               	btfss	status,2,c
  3422  00779A  D067               	goto	l204
  3423  00779C  0E13               	movlw	19
  3424  00779E  1875               	xorwf	main@column,w,c
  3425  0077A0  B4D8               	btfsc	status,2,c
  3426  0077A2  D063               	goto	l204
  3427                           
  3428                           ;newmain.c: 554: for (i = 0; i < 4; i++)
  3429  0077A4  0E00               	movlw	0
  3430  0077A6  6E7B               	movwf	main@i+1,c
  3431  0077A8  0E00               	movlw	0
  3432  0077AA  6E7A               	movwf	main@i,c
  3433  0077AC                     l4998:
  3434  0077AC  BE7B               	btfsc	main@i+1,7,c
  3435  0077AE  D006               	goto	l205
  3436  0077B0  507B               	movf	main@i+1,w,c
  3437  0077B2  E157               	bnz	l5022
  3438  0077B4  0E04               	movlw	4
  3439  0077B6  5C7A               	subwf	main@i,w,c
  3440  0077B8  B0D8               	btfsc	status,0,c
  3441  0077BA  D053               	goto	u6750
  3442  0077BC                     l205:
  3443                           
  3444                           ;newmain.c: 555: for (j = 0; j < 26; j++)
  3445  0077BC  0E00               	movlw	0
  3446  0077BE  6E78               	movwf	main@j+1,c
  3447  0077C0  0E00               	movlw	0
  3448  0077C2  6E77               	movwf	main@j,c
  3449  0077C4                     l5004:
  3450  0077C4  BE78               	btfsc	main@j+1,7,c
  3451  0077C6  D006               	goto	l207
  3452  0077C8  5078               	movf	main@j+1,w,c
  3453  0077CA  E148               	bnz	l5018
  3454  0077CC  0E1A               	movlw	26
  3455  0077CE  5C77               	subwf	main@j,w,c
  3456  0077D0  B0D8               	btfsc	status,0,c
  3457  0077D2  D044               	goto	u6740
  3458  0077D4                     l207:
  3459                           
  3460                           ;newmain.c: 556: if (circle[i][j] != 100) {
  3461  0077D4  C07A  F043         	movff	main@i,___wmul@multiplier
  3462  0077D8  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  3463  0077DC  0E00               	movlw	0
  3464  0077DE  6E46               	movwf	___wmul@multiplicand+1,c
  3465  0077E0  0E1A               	movlw	26
  3466  0077E2  6E45               	movwf	___wmul@multiplicand,c
  3467  0077E4  EC71  F023         	call	___wmul	;wreg free
  3468  0077E8  0E41               	movlw	low _circle
  3469  0077EA  6E69               	movwf	??_main& (0+255),c
  3470  0077EC  0E7C               	movlw	high _circle
  3471  0077EE  6E6A               	movwf	(??_main+1)& (0+255),c
  3472  0077F0  5043               	movf	?___wmul,w,c
  3473  0077F2  2669               	addwf	??_main,f,c
  3474  0077F4  5044               	movf	?___wmul+1,w,c
  3475  0077F6  226A               	addwfc	??_main+1,f,c
  3476  0077F8  5077               	movf	main@j,w,c
  3477  0077FA  2669               	addwf	??_main,f,c
  3478  0077FC  5078               	movf	main@j+1,w,c
  3479  0077FE  226A               	addwfc	??_main+1,f,c
  3480  007800  C069  FFF6         	movff	??_main,tblptrl
  3481  007804  C06A  FFF7         	movff	??_main+1,tblptrh
  3482  007808                     	if	0	;tblptru may be non-zero
  3483  007808                     	endif
  3484  007808                     	if	0	;tblptru may be non-zero
  3485  007808                     	endif
  3486  007808  0008               	tblrd		*
  3487  00780A  50F5               	movf	tablat,w,c
  3488  00780C  0A64               	xorlw	100
  3489  00780E  B4D8               	btfsc	status,2,c
  3490  007810  D022               	goto	l210
  3491                           
  3492                           ;newmain.c: 557: if (h == circle[i][j]) {
  3493  007812  C07A  F043         	movff	main@i,___wmul@multiplier
  3494  007816  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  3495  00781A  0E00               	movlw	0
  3496  00781C  6E46               	movwf	___wmul@multiplicand+1,c
  3497  00781E  0E1A               	movlw	26
  3498  007820  6E45               	movwf	___wmul@multiplicand,c
  3499  007822  EC71  F023         	call	___wmul	;wreg free
  3500  007826  0E41               	movlw	low _circle
  3501  007828  6E69               	movwf	??_main& (0+255),c
  3502  00782A  0E7C               	movlw	high _circle
  3503  00782C  6E6A               	movwf	(??_main+1)& (0+255),c
  3504  00782E  5043               	movf	?___wmul,w,c
  3505  007830  2669               	addwf	??_main,f,c
  3506  007832  5044               	movf	?___wmul+1,w,c
  3507  007834  226A               	addwfc	??_main+1,f,c
  3508  007836  5077               	movf	main@j,w,c
  3509  007838  2669               	addwf	??_main,f,c
  3510  00783A  5078               	movf	main@j+1,w,c
  3511  00783C  226A               	addwfc	??_main+1,f,c
  3512  00783E  C069  FFF6         	movff	??_main,tblptrl
  3513  007842  C06A  FFF7         	movff	??_main+1,tblptrh
  3514  007846                     	if	0	;tblptru may be non-zero
  3515  007846                     	endif
  3516  007846                     	if	0	;tblptru may be non-zero
  3517  007846                     	endif
  3518  007846  0008               	tblrd		*
  3519  007848  50F5               	movf	tablat,w,c
  3520  00784A  1879               	xorwf	main@h,w,c
  3521  00784C  A4D8               	btfss	status,2,c
  3522  00784E  D003               	goto	l210
  3523                           
  3524                           ;newmain.c: 558: m = i;
  3525  007850  C07A  F076         	movff	main@i,main@m
  3526                           
  3527                           ;newmain.c: 559: goto A;
  3528  007854  D006               	goto	u6750
  3529  007856                     l210:
  3530  007856  4A77               	infsnz	main@j,f,c
  3531  007858  2A78               	incf	main@j+1,f,c
  3532  00785A  D7B4               	goto	l5004
  3533  00785C                     u6740:
  3534  00785C                     l5018:
  3535  00785C  4A7A               	infsnz	main@i,f,c
  3536  00785E  2A7B               	incf	main@i+1,f,c
  3537  007860  D7A5               	goto	l4998
  3538  007862                     u6750:
  3539  007862                     l5022:
  3540                           
  3541                           ;newmain.c: 563: animation3(m);
  3542  007862  5076               	movf	main@m,w,c
  3543  007864  ECD4  F034         	call	_animation3
  3544                           
  3545                           ;newmain.c: 564: } else if (rightbutton == 8 && column != 19) {
  3546  007868  D084               	goto	l224
  3547  00786A                     l204:
  3548  00786A  0E08               	movlw	8
  3549  00786C  1874               	xorwf	main@rightbutton,w,c
  3550  00786E  A4D8               	btfss	status,2,c
  3551  007870  D00D               	goto	l213
  3552  007872  0E13               	movlw	19
  3553  007874  1875               	xorwf	main@column,w,c
  3554  007876  B4D8               	btfsc	status,2,c
  3555  007878  D009               	goto	l213
  3556                           
  3557                           ;newmain.c: 565: m = h >> 4;
  3558  00787A  3879               	swapf	main@h,w,c
  3559  00787C  0B0F               	andlw	15
  3560  00787E  6E76               	movwf	main@m,c
  3561                           
  3562                           ;newmain.c: 566: animation4(m, h);
  3563  007880  C079  F058         	movff	main@h,animation4@h
  3564  007884  5076               	movf	main@m,w,c
  3565  007886  ECA7  F02C         	call	_animation4
  3566                           
  3567                           ;newmain.c: 567: } else if (rightbutton == 9 && column != 19) {
  3568  00788A  D073               	goto	l224
  3569  00788C                     l213:
  3570  00788C  0E09               	movlw	9
  3571  00788E  1874               	xorwf	main@rightbutton,w,c
  3572  007890  A4D8               	btfss	status,2,c
  3573  007892  D012               	goto	l215
  3574  007894  0E13               	movlw	19
  3575  007896  1875               	xorwf	main@column,w,c
  3576  007898  B4D8               	btfsc	status,2,c
  3577  00789A  D00E               	goto	l215
  3578                           
  3579                           ;newmain.c: 569: m = h >> 4;
  3580  00789C  3879               	swapf	main@h,w,c
  3581  00789E  0B0F               	andlw	15
  3582  0078A0  6E76               	movwf	main@m,c
  3583                           
  3584                           ;newmain.c: 570: n = h & 0x0f;
  3585  0078A2  5079               	movf	main@h,w,c
  3586  0078A4  0B0F               	andlw	15
  3587  0078A6  6E73               	movwf	main@n,c
  3588                           
  3589                           ;newmain.c: 571: animation5(m, n, h);
  3590  0078A8  C073  F058         	movff	main@n,animation5@n
  3591  0078AC  C079  F059         	movff	main@h,animation5@h
  3592  0078B0  5076               	movf	main@m,w,c
  3593  0078B2  EC32  F029         	call	_animation5
  3594                           
  3595                           ;newmain.c: 573: } else if (rightbutton == 10 && column != 19) {
  3596  0078B6  D05D               	goto	l224
  3597  0078B8                     l215:
  3598  0078B8  0E0A               	movlw	10
  3599  0078BA  1874               	xorwf	main@rightbutton,w,c
  3600  0078BC  A4D8               	btfss	status,2,c
  3601  0078BE  D04E               	goto	l217
  3602  0078C0  0E13               	movlw	19
  3603  0078C2  1875               	xorwf	main@column,w,c
  3604  0078C4  B4D8               	btfsc	status,2,c
  3605  0078C6  D04A               	goto	l217
  3606                           
  3607                           ;newmain.c: 574: for (i = 0; i < 8; i++) {
  3608  0078C8  0E00               	movlw	0
  3609  0078CA  6E7B               	movwf	main@i+1,c
  3610  0078CC  0E00               	movlw	0
  3611  0078CE  6E7A               	movwf	main@i,c
  3612  0078D0                     l5046:
  3613  0078D0  BE7B               	btfsc	main@i+1,7,c
  3614  0078D2  D006               	goto	l218
  3615  0078D4  507B               	movf	main@i+1,w,c
  3616  0078D6  E13C               	bnz	l5068
  3617  0078D8  0E08               	movlw	8
  3618  0078DA  5C7A               	subwf	main@i,w,c
  3619  0078DC  B0D8               	btfsc	status,0,c
  3620  0078DE  D038               	goto	u6860
  3621  0078E0                     l218:
  3622                           
  3623                           ;newmain.c: 575: for (j = 0; j < 8; j++) {
  3624  0078E0  0E00               	movlw	0
  3625  0078E2  6E78               	movwf	main@j+1,c
  3626  0078E4  0E00               	movlw	0
  3627  0078E6  6E77               	movwf	main@j,c
  3628  0078E8                     l5052:
  3629  0078E8  BE78               	btfsc	main@j+1,7,c
  3630  0078EA  D006               	goto	l220
  3631  0078EC  5078               	movf	main@j+1,w,c
  3632  0078EE  E12D               	bnz	l5064
  3633  0078F0  0E08               	movlw	8
  3634  0078F2  5C77               	subwf	main@j,w,c
  3635  0078F4  B0D8               	btfsc	status,0,c
  3636  0078F6  D029               	goto	u6850
  3637  0078F8                     l220:
  3638                           
  3639                           ;newmain.c: 576: if (h == Buttons[i][j]) {
  3640  0078F8  C07A  F069         	movff	main@i,??_main
  3641  0078FC  C07B  F06A         	movff	main@i+1,??_main+1
  3642  007900  90D8               	bcf	status,0,c
  3643  007902  3669               	rlcf	??_main,f,c
  3644  007904  366A               	rlcf	??_main+1,f,c
  3645  007906  90D8               	bcf	status,0,c
  3646  007908  3669               	rlcf	??_main,f,c
  3647  00790A  366A               	rlcf	??_main+1,f,c
  3648  00790C  90D8               	bcf	status,0,c
  3649  00790E  3669               	rlcf	??_main,f,c
  3650  007910  366A               	rlcf	??_main+1,f,c
  3651  007912  0EF9               	movlw	low _Buttons
  3652  007914  6E6B               	movwf	(??_main+2)& (0+255),c
  3653  007916  0E7E               	movlw	high _Buttons
  3654  007918  6E6C               	movwf	(??_main+3)& (0+255),c
  3655  00791A  5069               	movf	??_main,w,c
  3656  00791C  266B               	addwf	??_main+2,f,c
  3657  00791E  506A               	movf	??_main+1,w,c
  3658  007920  226C               	addwfc	??_main+3,f,c
  3659  007922  5077               	movf	main@j,w,c
  3660  007924  266B               	addwf	??_main+2,f,c
  3661  007926  5078               	movf	main@j+1,w,c
  3662  007928  226C               	addwfc	??_main+3,f,c
  3663  00792A  C06B  FFF6         	movff	??_main+2,tblptrl
  3664  00792E  C06C  FFF7         	movff	??_main+3,tblptrh
  3665  007932                     	if	0	;tblptru may be non-zero
  3666  007932                     	endif
  3667  007932                     	if	0	;tblptru may be non-zero
  3668  007932                     	endif
  3669  007932  0008               	tblrd		*
  3670  007934  50F5               	movf	tablat,w,c
  3671  007936  1879               	xorwf	main@h,w,c
  3672  007938  A4D8               	btfss	status,2,c
  3673  00793A  D004               	goto	l222
  3674                           
  3675                           ;newmain.c: 577: m = i;
  3676  00793C  C07A  F076         	movff	main@i,main@m
  3677                           
  3678                           ;newmain.c: 578: n = j;
  3679  007940  C077  F073         	movff	main@j,main@n
  3680  007944                     l222:
  3681  007944  4A77               	infsnz	main@j,f,c
  3682  007946  2A78               	incf	main@j+1,f,c
  3683  007948  D7CF               	goto	l5052
  3684  00794A                     u6850:
  3685  00794A                     l5064:
  3686  00794A  4A7A               	infsnz	main@i,f,c
  3687  00794C  2A7B               	incf	main@i+1,f,c
  3688  00794E  D7C0               	goto	l5046
  3689  007950                     u6860:
  3690  007950                     l5068:
  3691                           
  3692                           ;newmain.c: 579: }
  3693                           ;newmain.c: 580: }
  3694                           ;newmain.c: 581: }
  3695                           ;newmain.c: 582: animation6(m, n);
  3696  007950  C073  F058         	movff	main@n,animation6@n
  3697  007954  5076               	movf	main@m,w,c
  3698  007956  ECC9  F027         	call	_animation6
  3699                           
  3700                           ;newmain.c: 583: } else if (rightbutton == 11 && column != 19) {
  3701  00795A  D00B               	goto	l224
  3702  00795C                     l217:
  3703  00795C  0E0B               	movlw	11
  3704  00795E  1874               	xorwf	main@rightbutton,w,c
  3705  007960  A4D8               	btfss	status,2,c
  3706  007962  D007               	goto	l224
  3707  007964  0E13               	movlw	19
  3708  007966  1875               	xorwf	main@column,w,c
  3709  007968  B4D8               	btfsc	status,2,c
  3710  00796A  D003               	goto	l224
  3711                           
  3712                           ;newmain.c: 584: animation7(h);
  3713  00796C  5079               	movf	main@h,w,c
  3714  00796E  ECDD  F02E         	call	_animation7
  3715  007972                     l224:
  3716                           
  3717                           ;newmain.c: 585: }
  3718                           ;newmain.c: 588: for (k = 0; k < 64; k++) {
  3719  007972  0E00               	movlw	0
  3720  007974  6E72               	movwf	main@k,c
  3721  007976                     l5078:
  3722  007976  0E3F               	movlw	63
  3723  007978  6472               	cpfsgt	main@k,c
  3724  00797A  D001               	goto	l225
  3725  00797C  D011               	goto	u6910
  3726  00797E                     l225:
  3727                           
  3728                           ;newmain.c: 589: if (press[k] == 1) {
  3729  00797E  5072               	movf	main@k,w,c
  3730  007980  0D02               	mullw	2
  3731  007982  0E00               	movlw	low _press
  3732  007984  24F3               	addwf	prodl,w,c
  3733  007986  6ED9               	movwf	fsr2l,c
  3734  007988  0E01               	movlw	high _press
  3735  00798A  20F4               	addwfc	prodh,w,c
  3736  00798C  6EDA               	movwf	fsr2h,c
  3737  00798E  04DE               	decf	postinc2,w,c
  3738  007990  10DE               	iorwf	postinc2,w,c
  3739  007992  A4D8               	btfss	status,2,c
  3740  007994  D003               	goto	l227
  3741                           
  3742                           ;newmain.c: 590: set_led(k);
  3743  007996  5072               	movf	main@k,w,c
  3744  007998  ECD8  F024         	call	_set_led
  3745  00799C                     l227:
  3746  00799C  2A72               	incf	main@k,f,c
  3747  00799E  D7EB               	goto	l5078
  3748  0079A0                     u6910:
  3749                           
  3750                           ;newmain.c: 591: }
  3751                           ;newmain.c: 592: }
  3752                           ;newmain.c: 593: write_display();
  3753  0079A0  EC8A  F025         	call	_write_display	;wreg free
  3754                           
  3755                           ;newmain.c: 594: break;
  3756  0079A4  D497               	goto	l151
  3757  0079A6                     l155:
  3758  0079A6  2A79               	incf	main@h,f,c
  3759  0079A8  D49C               	goto	l4802
  3760  0079AA                     
  3761                           ;newmain.c: 595: }
  3762                           ;newmain.c: 596: }
  3763                           ;newmain.c: 598: }
  3764                           ;newmain.c: 599: }
  3765                           ;newmain.c: 601: while (1);
  3766  0079AA  D7FF               	goto	l229
  3767  0079AC                     __end_of_main:
  3768                           	opt stack 0
  3769                           tblptru	equ	0xFF8
  3770                           tblptrh	equ	0xFF7
  3771                           tblptrl	equ	0xFF6
  3772                           tablat	equ	0xFF5
  3773                           prodh	equ	0xFF4
  3774                           prodl	equ	0xFF3
  3775                           postinc0	equ	0xFEE
  3776                           wreg	equ	0xFE8
  3777                           indf2	equ	0xFDF
  3778                           postinc2	equ	0xFDE
  3779                           postdec2	equ	0xFDD
  3780                           fsr2h	equ	0xFDA
  3781                           fsr2l	equ	0xFD9
  3782                           status	equ	0xFD8
  3783                           
  3784 ;; *************** function _was_key_pressed *****************
  3785 ;; Defined at:
  3786 ;;		line 1219 in file "newmain.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  k               1    wreg     unsigned char 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  k               1   18[COMRAM] unsigned char 
  3791 ;;  led             2   16[COMRAM] int 
  3792 ;;  matrix          2   14[COMRAM] int 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      unsigned char 
  3795 ;; Registers used:
  3796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3802 ;;      Params:         0       0       0       0       0       0       0
  3803 ;;      Locals:         5       0       0       0       0       0       0
  3804 ;;      Temps:          8       0       0       0       0       0       0
  3805 ;;      Totals:        13       0       0       0       0       0       0
  3806 ;;Total ram usage:       13 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    1
  3809 ;; This function calls:
  3810 ;;		___wmul
  3811 ;; This function is called by:
  3812 ;;		_main
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text1
  3817  00490E                     __ptext1:
  3818                           	opt stack 0
  3819  00490E                     _was_key_pressed:
  3820                           	opt stack 29
  3821                           
  3822                           ;incstack = 0
  3823                           ;was_key_pressed@k stored from wreg
  3824  00490E  6E55               	movwf	was_key_pressed@k,c
  3825                           
  3826                           ;newmain.c: 1220: int matrix = k >> 4;
  3827  004910  C055  F049         	movff	was_key_pressed@k,??_was_key_pressed
  3828  004914  3A49               	swapf	??_was_key_pressed,f,c
  3829  004916  0E0F               	movlw	15
  3830  004918  1649               	andwf	??_was_key_pressed,f,c
  3831  00491A  5049               	movf	??_was_key_pressed,w,c
  3832  00491C  6E51               	movwf	was_key_pressed@matrix,c
  3833  00491E  6A52               	clrf	was_key_pressed@matrix+1,c
  3834                           
  3835                           ;newmain.c: 1221: int led = k & 0b1111;
  3836  004920  C055  F049         	movff	was_key_pressed@k,??_was_key_pressed
  3837  004924  0E0F               	movlw	15
  3838  004926  1649               	andwf	??_was_key_pressed,f,c
  3839  004928  5049               	movf	??_was_key_pressed,w,c
  3840  00492A  6E53               	movwf	was_key_pressed@led,c
  3841  00492C  6A54               	clrf	was_key_pressed@led+1,c
  3842                           
  3843                           ;newmain.c: 1222: return (matrices[matrix].last_keys[buttonLUT[led] >> 4]&(1 << (buttonL
      +                          UT[led]&0x0f)));
  3844  00492E  C051  F043         	movff	was_key_pressed@matrix,___wmul@multiplier
  3845  004932  C052  F044         	movff	was_key_pressed@matrix+1,___wmul@multiplier+1
  3846  004936  0E00               	movlw	0
  3847  004938  6E46               	movwf	___wmul@multiplicand+1,c
  3848  00493A  0E1D               	movlw	29
  3849  00493C  6E45               	movwf	___wmul@multiplicand,c
  3850  00493E  EC71  F023         	call	___wmul	;wreg free
  3851  004942  0EDF               	movlw	low _buttonLUT
  3852  004944  2453               	addwf	was_key_pressed@led,w,c
  3853  004946  6EF6               	movwf	tblptrl,c
  3854  004948  0E7F               	movlw	high _buttonLUT
  3855  00494A  2054               	addwfc	was_key_pressed@led+1,w,c
  3856  00494C  6EF7               	movwf	tblptrh,c
  3857  00494E                     	if	0	;There are less than 3 active tblptr bytes
  3858  00494E                     	endif
  3859  00494E  0008               	tblrd		*
  3860  004950  CFF5 F049          	movff	tablat,??_was_key_pressed
  3861  004954  3849               	swapf	??_was_key_pressed,w,c
  3862  004956  0B0F               	andlw	15
  3863  004958  6E4A               	movwf	(??_was_key_pressed+1)& (0+255),c
  3864  00495A  6A4B               	clrf	(??_was_key_pressed+2)& (0+255),c
  3865  00495C  0E07               	movlw	7
  3866  00495E  264A               	addwf	??_was_key_pressed+1,f,c
  3867  004960  0E00               	movlw	0
  3868  004962  224B               	addwfc	??_was_key_pressed+2,f,c
  3869  004964  0E80               	movlw	low _matrices
  3870  004966  6E4C               	movwf	(??_was_key_pressed+3)& (0+255),c
  3871  004968  0E00               	movlw	high _matrices
  3872  00496A  6E4D               	movwf	(??_was_key_pressed+4)& (0+255),c
  3873  00496C  504A               	movf	??_was_key_pressed+1,w,c
  3874  00496E  264C               	addwf	??_was_key_pressed+3,f,c
  3875  004970  504B               	movf	??_was_key_pressed+2,w,c
  3876  004972  224D               	addwfc	??_was_key_pressed+4,f,c
  3877  004974  5043               	movf	?___wmul,w,c
  3878  004976  244C               	addwf	??_was_key_pressed+3,w,c
  3879  004978  6ED9               	movwf	fsr2l,c
  3880  00497A  5044               	movf	?___wmul+1,w,c
  3881  00497C  204D               	addwfc	??_was_key_pressed+4,w,c
  3882  00497E  6EDA               	movwf	fsr2h,c
  3883  004980  50DF               	movf	indf2,w,c
  3884  004982  6E4E               	movwf	(??_was_key_pressed+5)& (0+255),c
  3885  004984  0EDF               	movlw	low _buttonLUT
  3886  004986  2453               	addwf	was_key_pressed@led,w,c
  3887  004988  6EF6               	movwf	tblptrl,c
  3888  00498A  0E7F               	movlw	high _buttonLUT
  3889  00498C  2054               	addwfc	was_key_pressed@led+1,w,c
  3890  00498E  6EF7               	movwf	tblptrh,c
  3891  004990                     	if	0	;There are less than 3 active tblptr bytes
  3892  004990                     	endif
  3893  004990  0008               	tblrd		*
  3894  004992  CFF5 F04F          	movff	tablat,??_was_key_pressed+6
  3895  004996  0E0F               	movlw	15
  3896  004998  164F               	andwf	??_was_key_pressed+6,f,c
  3897  00499A  0E01               	movlw	1
  3898  00499C  6E50               	movwf	(??_was_key_pressed+7)& (0+255),c
  3899  00499E  2A4F               	incf	??_was_key_pressed+6,f,c
  3900  0049A0  D002               	goto	u3854
  3901  0049A2                     u3855:
  3902  0049A2  90D8               	bcf	status,0,c
  3903  0049A4  3650               	rlcf	??_was_key_pressed+7,f,c
  3904  0049A6                     u3854:
  3905  0049A6  2E4F               	decfsz	??_was_key_pressed+6,f,c
  3906  0049A8  D7FC               	goto	u3855
  3907  0049AA  5050               	movf	??_was_key_pressed+7,w,c
  3908  0049AC  144E               	andwf	??_was_key_pressed+5,w,c
  3909  0049AE  0012               	return	
  3910  0049B0                     __end_of_was_key_pressed:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           postinc0	equ	0xFEE
  3919                           wreg	equ	0xFE8
  3920                           indf2	equ	0xFDF
  3921                           postinc2	equ	0xFDE
  3922                           postdec2	equ	0xFDD
  3923                           fsr2h	equ	0xFDA
  3924                           fsr2l	equ	0xFD9
  3925                           status	equ	0xFD8
  3926                           
  3927 ;; *************** function _send_note *****************
  3928 ;; Defined at:
  3929 ;;		line 624 in file "newmain.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  one             1    wreg     unsigned char 
  3932 ;;  two             1    0[COMRAM] unsigned char 
  3933 ;;  three           1    1[COMRAM] unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  one             1    2[COMRAM] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3945 ;;      Params:         2       0       0       0       0       0       0
  3946 ;;      Locals:         1       0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0
  3948 ;;      Totals:         3       0       0       0       0       0       0
  3949 ;;Total ram usage:        3 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text2
  3959  0046C0                     __ptext2:
  3960                           	opt stack 0
  3961  0046C0                     _send_note:
  3962                           	opt stack 30
  3963                           
  3964                           ;incstack = 0
  3965                           ;send_note@one stored from wreg
  3966  0046C0  6E45               	movwf	send_note@one,c
  3967  0046C2                     
  3968                           ;newmain.c: 625: while (!PIR1bits.TXIF || !TRMT);
  3969  0046C2  B89E               	btfsc	3998,4,c	;volatile
  3970  0046C4  A2AC               	btfss	4012,1,c	;volatile
  3971  0046C6  D7FD               	goto	l3454
  3972                           
  3973                           ;newmain.c: 626: TXREG = one;
  3974  0046C8  C045  FFAD         	movff	send_note@one,4013	;volatile
  3975  0046CC  B89E               	btfsc	3998,4,c	;volatile
  3976  0046CE  A2AC               	btfss	4012,1,c	;volatile
  3977  0046D0  D7FD               	goto	l243
  3978                           
  3979                           ;newmain.c: 628: TXREG = two;
  3980  0046D2  C043  FFAD         	movff	send_note@two,4013	;volatile
  3981  0046D6  B89E               	btfsc	3998,4,c	;volatile
  3982  0046D8  A2AC               	btfss	4012,1,c	;volatile
  3983  0046DA  D7FD               	goto	l246
  3984                           
  3985                           ;newmain.c: 630: TXREG = three;
  3986  0046DC  C044  FFAD         	movff	send_note@three,4013	;volatile
  3987  0046E0  0012               	return		;funcret
  3988  0046E2                     __end_of_send_note:
  3989                           	opt stack 0
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           prodh	equ	0xFF4
  3995                           prodl	equ	0xFF3
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           indf2	equ	0xFDF
  3999                           postinc2	equ	0xFDE
  4000                           postdec2	equ	0xFDD
  4001                           fsr2h	equ	0xFDA
  4002                           fsr2l	equ	0xFD9
  4003                           status	equ	0xFD8
  4004                           
  4005 ;; *************** function _read_switch *****************
  4006 ;; Defined at:
  4007 ;;		line 1225 in file "newmain.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  j               2   29[COMRAM] int 
  4012 ;;  i               2   27[COMRAM] int 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      unsigned char 
  4015 ;; Registers used:
  4016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4022 ;;      Params:         0       0       0       0       0       0       0
  4023 ;;      Locals:         4       0       0       0       0       0       0
  4024 ;;      Temps:         10       0       0       0       0       0       0
  4025 ;;      Totals:        14       0       0       0       0       0       0
  4026 ;;Total ram usage:       14 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    3
  4029 ;; This function calls:
  4030 ;;		_MyIdleI2C
  4031 ;;		_MyNotAckI2C
  4032 ;;		_MyStartI2C
  4033 ;;		_MyStopI2C
  4034 ;;		_MygetsI2C
  4035 ;;		___wmul
  4036 ;;		_memcpy
  4037 ;;		_write
  4038 ;; This function is called by:
  4039 ;;		_main
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text3
  4044  004DAC                     __ptext3:
  4045                           	opt stack 0
  4046  004DAC                     _read_switch:
  4047                           	opt stack 27
  4048                           
  4049                           ;newmain.c: 1226: int i, j;
  4050                           ;newmain.c: 1227: for (j = 0; j < 4; j++) {
  4051                           
  4052                           ;incstack = 0
  4053  004DAC  0E00               	movlw	0
  4054  004DAE  6E61               	movwf	read_switch@j+1,c
  4055  004DB0  0E00               	movlw	0
  4056  004DB2  6E60               	movwf	read_switch@j,c
  4057  004DB4  BE61               	btfsc	read_switch@j+1,7,c
  4058  004DB6  D008               	goto	l573
  4059  004DB8  5061               	movf	read_switch@j+1,w,c
  4060  004DBA  E105               	bnz	u3780
  4061  004DBC  0E04               	movlw	4
  4062  004DBE  5C60               	subwf	read_switch@j,w,c
  4063  004DC0  B0D8               	btfsc	status,0,c
  4064  004DC2  D0E5               	goto	u3830
  4065  004DC4  D001               	goto	l573
  4066  004DC6                     u3780:
  4067  004DC6  D0E3               	goto	u3830
  4068  004DC8                     l573:
  4069                           
  4070                           ;newmain.c: 1228: memcpy(matrices[j].last_keys, matrices[j].keys, sizeof (matrices[j].ke
      +                          ys));
  4071  004DC8  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4072  004DCC  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4073  004DD0  0E00               	movlw	0
  4074  004DD2  6E46               	movwf	___wmul@multiplicand+1,c
  4075  004DD4  0E1D               	movlw	29
  4076  004DD6  6E45               	movwf	___wmul@multiplicand,c
  4077  004DD8  EC71  F023         	call	___wmul	;wreg free
  4078  004DDC  0E07               	movlw	7
  4079  004DDE  2643               	addwf	?___wmul,f,c
  4080  004DE0  0E00               	movlw	0
  4081  004DE2  2244               	addwfc	?___wmul+1,f,c
  4082  004DE4  0E80               	movlw	low _matrices
  4083  004DE6  2443               	addwf	?___wmul,w,c
  4084  004DE8  6E49               	movwf	memcpy@d1,c
  4085  004DEA  0E00               	movlw	high _matrices
  4086  004DEC  2044               	addwfc	?___wmul+1,w,c
  4087  004DEE  6E4A               	movwf	memcpy@d1+1,c
  4088  004DF0  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4089  004DF4  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4090  004DF8  0E00               	movlw	0
  4091  004DFA  6E46               	movwf	___wmul@multiplicand+1,c
  4092  004DFC  0E1D               	movlw	29
  4093  004DFE  6E45               	movwf	___wmul@multiplicand,c
  4094  004E00  EC71  F023         	call	___wmul	;wreg free
  4095  004E04  0E01               	movlw	1
  4096  004E06  2643               	addwf	?___wmul,f,c
  4097  004E08  0E00               	movlw	0
  4098  004E0A  2244               	addwfc	?___wmul+1,f,c
  4099  004E0C  0E80               	movlw	low _matrices
  4100  004E0E  2443               	addwf	?___wmul,w,c
  4101  004E10  6E4B               	movwf	memcpy@s1,c
  4102  004E12  0E00               	movlw	high _matrices
  4103  004E14  2044               	addwfc	?___wmul+1,w,c
  4104  004E16  6E4C               	movwf	memcpy@s1+1,c
  4105  004E18  0E00               	movlw	0
  4106  004E1A  6E4E               	movwf	memcpy@n+1,c
  4107  004E1C  0E06               	movlw	6
  4108  004E1E  6E4D               	movwf	memcpy@n,c
  4109  004E20  EC9B  F023         	call	_memcpy	;wreg free
  4110                           
  4111                           ;newmain.c: 1230: MyIdleI2C();
  4112  004E24  EC30  F023         	call	_MyIdleI2C	;wreg free
  4113                           
  4114                           ;newmain.c: 1231: MyStartI2C();
  4115  004E28  EC29  F023         	call	_MyStartI2C	;wreg free
  4116                           
  4117                           ;newmain.c: 1232: MyIdleI2C();
  4118  004E2C  EC30  F023         	call	_MyIdleI2C	;wreg free
  4119                           
  4120                           ;newmain.c: 1233: write(matrices[j].address | 0x00);
  4121  004E30  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4122  004E34  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4123  004E38  0E00               	movlw	0
  4124  004E3A  6E46               	movwf	___wmul@multiplicand+1,c
  4125  004E3C  0E1D               	movlw	29
  4126  004E3E  6E45               	movwf	___wmul@multiplicand,c
  4127  004E40  EC71  F023         	call	___wmul	;wreg free
  4128  004E44  0E80               	movlw	low _matrices
  4129  004E46  2443               	addwf	?___wmul,w,c
  4130  004E48  6ED9               	movwf	fsr2l,c
  4131  004E4A  0E00               	movlw	high _matrices
  4132  004E4C  2044               	addwfc	?___wmul+1,w,c
  4133  004E4E  6EDA               	movwf	fsr2h,c
  4134  004E50  50DF               	movf	indf2,w,c
  4135  004E52  EC84  F023         	call	_write
  4136                           
  4137                           ;newmain.c: 1234: MyIdleI2C();
  4138  004E56  EC30  F023         	call	_MyIdleI2C	;wreg free
  4139                           
  4140                           ;newmain.c: 1235: write(0x40);
  4141  004E5A  0E40               	movlw	64
  4142  004E5C  EC84  F023         	call	_write
  4143                           
  4144                           ;newmain.c: 1236: MyIdleI2C();
  4145  004E60  EC30  F023         	call	_MyIdleI2C	;wreg free
  4146                           
  4147                           ;newmain.c: 1237: MyStopI2C();
  4148  004E64  EC2B  F023         	call	_MyStopI2C	;wreg free
  4149                           
  4150                           ;newmain.c: 1239: MyIdleI2C();
  4151  004E68  EC30  F023         	call	_MyIdleI2C	;wreg free
  4152                           
  4153                           ;newmain.c: 1240: MyStartI2C();
  4154  004E6C  EC29  F023         	call	_MyStartI2C	;wreg free
  4155                           
  4156                           ;newmain.c: 1241: MyIdleI2C();
  4157  004E70  EC30  F023         	call	_MyIdleI2C	;wreg free
  4158                           
  4159                           ;newmain.c: 1242: write(matrices[j].address | 0x01);
  4160  004E74  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4161  004E78  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4162  004E7C  0E00               	movlw	0
  4163  004E7E  6E46               	movwf	___wmul@multiplicand+1,c
  4164  004E80  0E1D               	movlw	29
  4165  004E82  6E45               	movwf	___wmul@multiplicand,c
  4166  004E84  EC71  F023         	call	___wmul	;wreg free
  4167  004E88  0E80               	movlw	low _matrices
  4168  004E8A  2443               	addwf	?___wmul,w,c
  4169  004E8C  6ED9               	movwf	fsr2l,c
  4170  004E8E  0E00               	movlw	high _matrices
  4171  004E90  2044               	addwfc	?___wmul+1,w,c
  4172  004E92  6EDA               	movwf	fsr2h,c
  4173  004E94  50DF               	movf	indf2,w,c
  4174  004E96  0901               	iorlw	1
  4175  004E98  EC84  F023         	call	_write
  4176                           
  4177                           ;newmain.c: 1243: MyIdleI2C();
  4178  004E9C  EC30  F023         	call	_MyIdleI2C	;wreg free
  4179  004EA0  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4180  004EA4  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4181  004EA8  0E00               	movlw	0
  4182  004EAA  6E46               	movwf	___wmul@multiplicand+1,c
  4183  004EAC  0E1D               	movlw	29
  4184  004EAE  6E45               	movwf	___wmul@multiplicand,c
  4185  004EB0  EC71  F023         	call	___wmul	;wreg free
  4186  004EB4  0E01               	movlw	1
  4187  004EB6  2643               	addwf	?___wmul,f,c
  4188  004EB8  0E00               	movlw	0
  4189  004EBA  2244               	addwfc	?___wmul+1,f,c
  4190  004EBC  0E80               	movlw	low _matrices
  4191  004EBE  2443               	addwf	?___wmul,w,c
  4192  004EC0  6E49               	movwf	MygetsI2C@rdptr,c
  4193  004EC2  0E00               	movlw	high _matrices
  4194  004EC4  2044               	addwfc	?___wmul+1,w,c
  4195  004EC6  6E4A               	movwf	MygetsI2C@rdptr+1,c
  4196  004EC8  0E06               	movlw	6
  4197  004ECA  6E4B               	movwf	MygetsI2C@length,c
  4198  004ECC  ECE0  F023         	call	_MygetsI2C	;wreg free
  4199  004ED0  0900               	iorlw	0
  4200  004ED2  A4D8               	btfss	status,2,c
  4201  004ED4  D7E5               	goto	l576
  4202                           
  4203                           ;newmain.c: 1245: MyNotAckI2C();
  4204  004ED6  EC2D  F023         	call	_MyNotAckI2C	;wreg free
  4205                           
  4206                           ;newmain.c: 1246: MyStopI2C();
  4207  004EDA  EC2B  F023         	call	_MyStopI2C	;wreg free
  4208                           
  4209                           ;newmain.c: 1248: for (i = 0; i < 6; i++) {
  4210  004EDE  0E00               	movlw	0
  4211  004EE0  6E5F               	movwf	read_switch@i+1,c
  4212  004EE2  0E00               	movlw	0
  4213  004EE4  6E5E               	movwf	read_switch@i,c
  4214  004EE6                     l3420:
  4215  004EE6  BE5F               	btfsc	read_switch@i+1,7,c
  4216  004EE8  D006               	goto	l578
  4217  004EEA  505F               	movf	read_switch@i+1,w,c
  4218  004EEC  E149               	bnz	l3434
  4219  004EEE  0E06               	movlw	6
  4220  004EF0  5C5E               	subwf	read_switch@i,w,c
  4221  004EF2  B0D8               	btfsc	status,0,c
  4222  004EF4  D045               	goto	u3820
  4223  004EF6                     l578:
  4224                           
  4225                           ;newmain.c: 1249: if (matrices[j].keys[i] != matrices[j].last_keys[i]) {
  4226  004EF6  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4227  004EFA  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4228  004EFE  0E00               	movlw	0
  4229  004F00  6E46               	movwf	___wmul@multiplicand+1,c
  4230  004F02  0E1D               	movlw	29
  4231  004F04  6E45               	movwf	___wmul@multiplicand,c
  4232  004F06  EC71  F023         	call	___wmul	;wreg free
  4233  004F0A  0E07               	movlw	7
  4234  004F0C  245E               	addwf	read_switch@i,w,c
  4235  004F0E  6E54               	movwf	??_read_switch& (0+255),c
  4236  004F10  0E00               	movlw	0
  4237  004F12  205F               	addwfc	read_switch@i+1,w,c
  4238  004F14  6E55               	movwf	(??_read_switch+1)& (0+255),c
  4239  004F16  0E80               	movlw	low _matrices
  4240  004F18  6E56               	movwf	(??_read_switch+2)& (0+255),c
  4241  004F1A  0E00               	movlw	high _matrices
  4242  004F1C  6E57               	movwf	(??_read_switch+3)& (0+255),c
  4243  004F1E  5054               	movf	??_read_switch,w,c
  4244  004F20  2656               	addwf	??_read_switch+2,f,c
  4245  004F22  5055               	movf	??_read_switch+1,w,c
  4246  004F24  2257               	addwfc	??_read_switch+3,f,c
  4247  004F26  5043               	movf	?___wmul,w,c
  4248  004F28  2456               	addwf	??_read_switch+2,w,c
  4249  004F2A  6ED9               	movwf	fsr2l,c
  4250  004F2C  5044               	movf	?___wmul+1,w,c
  4251  004F2E  2057               	addwfc	??_read_switch+3,w,c
  4252  004F30  6EDA               	movwf	fsr2h,c
  4253  004F32  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4254  004F36  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4255  004F3A  0E00               	movlw	0
  4256  004F3C  6E46               	movwf	___wmul@multiplicand+1,c
  4257  004F3E  0E1D               	movlw	29
  4258  004F40  6E45               	movwf	___wmul@multiplicand,c
  4259  004F42  EC71  F023         	call	___wmul	;wreg free
  4260  004F46  0E01               	movlw	1
  4261  004F48  245E               	addwf	read_switch@i,w,c
  4262  004F4A  6E59               	movwf	(??_read_switch+5)& (0+255),c
  4263  004F4C  0E00               	movlw	0
  4264  004F4E  205F               	addwfc	read_switch@i+1,w,c
  4265  004F50  6E5A               	movwf	(??_read_switch+6)& (0+255),c
  4266  004F52  0E80               	movlw	low _matrices
  4267  004F54  6E5B               	movwf	(??_read_switch+7)& (0+255),c
  4268  004F56  0E00               	movlw	high _matrices
  4269  004F58  6E5C               	movwf	(??_read_switch+8)& (0+255),c
  4270  004F5A  5059               	movf	??_read_switch+5,w,c
  4271  004F5C  265B               	addwf	??_read_switch+7,f,c
  4272  004F5E  505A               	movf	??_read_switch+6,w,c
  4273  004F60  225C               	addwfc	??_read_switch+8,f,c
  4274  004F62  5043               	movf	?___wmul,w,c
  4275  004F64  245B               	addwf	??_read_switch+7,w,c
  4276  004F66  6EE1               	movwf	fsr1l,c
  4277  004F68  5044               	movf	?___wmul+1,w,c
  4278  004F6A  205C               	addwfc	??_read_switch+8,w,c
  4279  004F6C  6EE2               	movwf	fsr1h,c
  4280  004F6E  50DE               	movf	postinc2,w,c
  4281  004F70  18E6               	xorwf	postinc1,w,c
  4282  004F72  B4D8               	btfsc	status,2,c
  4283  004F74  D002               	goto	l580
  4284                           
  4285                           ;newmain.c: 1250: return 1;
  4286  004F76  0E01               	movlw	1
  4287  004F78  0012               	return	
  4288  004F7A                     l580:
  4289  004F7A  4A5E               	infsnz	read_switch@i,f,c
  4290  004F7C  2A5F               	incf	read_switch@i+1,f,c
  4291  004F7E  D7B3               	goto	l3420
  4292  004F80                     u3820:
  4293  004F80                     l3434:
  4294  004F80  4A60               	infsnz	read_switch@j,f,c
  4295  004F82  2A61               	incf	read_switch@j+1,f,c
  4296  004F84  BE61               	btfsc	read_switch@j+1,7,c
  4297  004F86  D720               	goto	l573
  4298  004F88  5061               	movf	read_switch@j+1,w,c
  4299  004F8A  E101               	bnz	l3438
  4300  004F8C  D717               	goto	L5
  4301  004F8E                     u3830:
  4302  004F8E                     l3438:
  4303                           
  4304                           ;newmain.c: 1251: }
  4305                           ;newmain.c: 1252: }
  4306                           ;newmain.c: 1254: }
  4307                           ;newmain.c: 1255: return 0;
  4308  004F8E  0E00               	movlw	0
  4309  004F90  0012               	return	
  4310  004F92                     __end_of_read_switch:
  4311                           	opt stack 0
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           postinc0	equ	0xFEE
  4319                           wreg	equ	0xFE8
  4320                           postinc1	equ	0xFE6
  4321                           fsr1h	equ	0xFE2
  4322                           fsr1l	equ	0xFE1
  4323                           indf2	equ	0xFDF
  4324                           postinc2	equ	0xFDE
  4325                           postdec2	equ	0xFDD
  4326                           fsr2h	equ	0xFDA
  4327                           fsr2l	equ	0xFD9
  4328                           status	equ	0xFD8
  4329                           
  4330 ;; *************** function _memcpy *****************
  4331 ;; Defined at:
  4332 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  d1              2    6[COMRAM] PTR void 
  4335 ;;		 -> matrices(116), 
  4336 ;;  s1              2    8[COMRAM] PTR const void 
  4337 ;;		 -> matrices.keys(6), matrices(116), 
  4338 ;;  n               2   10[COMRAM] unsigned int 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4341 ;;		 -> matrices.keys(6), matrices(116), 
  4342 ;;  d               2   12[COMRAM] PTR unsigned char 
  4343 ;;		 -> matrices(116), 
  4344 ;;  tmp             1   16[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    6[COMRAM] PTR void 
  4347 ;; Registers used:
  4348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4354 ;;      Params:         6       0       0       0       0       0       0
  4355 ;;      Locals:         5       0       0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0
  4357 ;;      Totals:        11       0       0       0       0       0       0
  4358 ;;Total ram usage:       11 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_read_switch
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text4
  4368  004736                     __ptext4:
  4369                           	opt stack 0
  4370  004736                     _memcpy:
  4371                           	opt stack 29
  4372                           
  4373                           ;incstack = 0
  4374  004736  C04B  F051         	movff	memcpy@s1,memcpy@s
  4375  00473A  C04C  F052         	movff	memcpy@s1+1,memcpy@s+1
  4376  00473E  C049  F04F         	movff	memcpy@d1,memcpy@d
  4377  004742  C04A  F050         	movff	memcpy@d1+1,memcpy@d+1
  4378  004746  D010               	goto	l1082
  4379  004748                     l3320:
  4380  004748  C051  FFD9         	movff	memcpy@s,fsr2l
  4381  00474C  C052  FFDA         	movff	memcpy@s+1,fsr2h
  4382  004750  50DF               	movf	indf2,w,c
  4383  004752  6E53               	movwf	memcpy@tmp,c
  4384  004754  4A51               	infsnz	memcpy@s,f,c
  4385  004756  2A52               	incf	memcpy@s+1,f,c
  4386  004758  C04F  FFD9         	movff	memcpy@d,fsr2l
  4387  00475C  C050  FFDA         	movff	memcpy@d+1,fsr2h
  4388  004760  C053  FFDF         	movff	memcpy@tmp,indf2
  4389  004764  4A4F               	infsnz	memcpy@d,f,c
  4390  004766  2A50               	incf	memcpy@d+1,f,c
  4391  004768                     l1082:
  4392  004768  064D               	decf	memcpy@n,f,c
  4393  00476A  A0D8               	btfss	status,0,c
  4394  00476C  064E               	decf	memcpy@n+1,f,c
  4395  00476E  284D               	incf	memcpy@n,w,c
  4396  004770  E1EB               	bnz	l3320
  4397  004772  284E               	incf	memcpy@n+1,w,c
  4398  004774  B4D8               	btfsc	status,2,c
  4399  004776  0012               	return	
  4400  004778  D7E7               	goto	l1083
  4401  00477A                     __end_of_memcpy:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           postinc0	equ	0xFEE
  4410                           wreg	equ	0xFE8
  4411                           postinc1	equ	0xFE6
  4412                           fsr1h	equ	0xFE2
  4413                           fsr1l	equ	0xFE1
  4414                           indf2	equ	0xFDF
  4415                           postinc2	equ	0xFDE
  4416                           postdec2	equ	0xFDD
  4417                           fsr2h	equ	0xFDA
  4418                           fsr2l	equ	0xFD9
  4419                           status	equ	0xFD8
  4420                           
  4421 ;; *************** function _MygetsI2C *****************
  4422 ;; Defined at:
  4423 ;;		line 1328 in file "newmain.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  rdptr           2    6[COMRAM] PTR unsigned char 
  4426 ;;		 -> matrices(116), 
  4427 ;;  length          1    8[COMRAM] unsigned char 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      char 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4439 ;;      Params:         3       0       0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0
  4442 ;;      Totals:         3       0       0       0       0       0       0
  4443 ;;Total ram usage:        3 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    1
  4446 ;; This function calls:
  4447 ;;		_MyReadI2C
  4448 ;; This function is called by:
  4449 ;;		_read_switch
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text5
  4454  0047C0                     __ptext5:
  4455                           	opt stack 0
  4456  0047C0                     _MygetsI2C:
  4457                           	opt stack 28
  4458                           
  4459                           ;newmain.c: 1329: while (length--)
  4460                           
  4461                           ;incstack = 0
  4462  0047C0  D020               	goto	u3760
  4463  0047C2                     
  4464                           ;newmain.c: 1330: {
  4465                           ;newmain.c: 1331: *rdptr++ = MyReadI2C();
  4466  0047C2  EC43  F023         	call	_MyReadI2C	;wreg free
  4467  0047C6  C049  FFD9         	movff	MygetsI2C@rdptr,fsr2l
  4468  0047CA  C04A  FFDA         	movff	MygetsI2C@rdptr+1,fsr2h
  4469  0047CE  6EDF               	movwf	indf2,c
  4470  0047D0  4A49               	infsnz	MygetsI2C@rdptr,f,c
  4471  0047D2  2A4A               	incf	MygetsI2C@rdptr+1,f,c
  4472  0047D4  B6C5               	btfsc	4037,3,c	;volatile
  4473  0047D6  D7FE               	goto	l631
  4474                           
  4475                           ;newmain.c: 1334: if (PIR2bits.BCLIF)
  4476  0047D8  A6A1               	btfss	4001,3,c	;volatile
  4477  0047DA  D002               	goto	l633
  4478                           
  4479                           ;newmain.c: 1335: {
  4480                           ;newmain.c: 1336: return ( -1);
  4481  0047DC  0EFF               	movlw	255
  4482  0047DE  0012               	return	
  4483  0047E0                     l633:
  4484                           
  4485                           ;newmain.c: 1337: }
  4486                           ;newmain.c: 1339: if (((SSPCON1 & 0x0F) == 0x08) || ((SSPCON1 & 0x0F) == 0x0B))
  4487  0047E0  50C6               	movf	4038,w,c	;volatile
  4488  0047E2  0B0F               	andlw	15
  4489  0047E4  0A08               	xorlw	8
  4490  0047E6  B4D8               	btfsc	status,2,c
  4491  0047E8  D005               	goto	u3740
  4492  0047EA  50C6               	movf	4038,w,c	;volatile
  4493  0047EC  0B0F               	andlw	15
  4494  0047EE  0A0B               	xorlw	11
  4495  0047F0  A4D8               	btfss	status,2,c
  4496  0047F2  D007               	goto	u3760
  4497  0047F4                     u3740:
  4498                           
  4499                           ;newmain.c: 1340: {
  4500                           ;newmain.c: 1341: if (length)
  4501  0047F4  504B               	movf	MygetsI2C@length,w,c
  4502  0047F6  B4D8               	btfsc	status,2,c
  4503  0047F8  D004               	goto	u3760
  4504                           
  4505                           ;newmain.c: 1342: {
  4506                           ;newmain.c: 1343: SSPCON2bits.ACKDT = 0;
  4507  0047FA  9AC5               	bcf	4037,5,c	;volatile
  4508                           
  4509                           ;newmain.c: 1344: SSPCON2bits.ACKEN = 1;
  4510  0047FC  88C5               	bsf	4037,4,c	;volatile
  4511  0047FE  B8C5               	btfsc	4037,4,c	;volatile
  4512  004800  D7FE               	goto	l640
  4513  004802                     u3760:
  4514  004802  064B               	decf	MygetsI2C@length,f,c
  4515  004804  284B               	incf	MygetsI2C@length,w,c
  4516  004806  A4D8               	btfss	status,2,c
  4517  004808  D7DC               	goto	l629
  4518                           
  4519                           ;newmain.c: 1346: }
  4520                           ;newmain.c: 1347: }
  4521                           ;newmain.c: 1349: }
  4522                           ;newmain.c: 1350: return ( 0);
  4523  00480A  0E00               	movlw	0
  4524  00480C  0012               	return	
  4525  00480E                     __end_of_MygetsI2C:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           postinc0	equ	0xFEE
  4534                           wreg	equ	0xFE8
  4535                           postinc1	equ	0xFE6
  4536                           fsr1h	equ	0xFE2
  4537                           fsr1l	equ	0xFE1
  4538                           indf2	equ	0xFDF
  4539                           postinc2	equ	0xFDE
  4540                           postdec2	equ	0xFDD
  4541                           fsr2h	equ	0xFDA
  4542                           fsr2l	equ	0xFD9
  4543                           status	equ	0xFD8
  4544                           
  4545 ;; *************** function _MyReadI2C *****************
  4546 ;; Defined at:
  4547 ;;		line 1358 in file "newmain.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      unsigned char 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4561 ;;      Params:         0       0       0       0       0       0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0
  4564 ;;      Totals:         0       0       0       0       0       0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_MygetsI2C
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text6
  4575  004686                     __ptext6:
  4576                           	opt stack 0
  4577  004686                     _MyReadI2C:
  4578                           	opt stack 28
  4579                           
  4580                           ;newmain.c: 1359: if (((SSPCON1 & 0x0F) == 0x08) || ((SSPCON1 & 0x0F) == 0x0B))
  4581                           
  4582                           ;incstack = 0
  4583  004686  50C6               	movf	4038,w,c	;volatile
  4584  004688  0B0F               	andlw	15
  4585  00468A  0A08               	xorlw	8
  4586  00468C  B4D8               	btfsc	status,2,c
  4587  00468E  D004               	goto	u3620
  4588  004690  50C6               	movf	4038,w,c	;volatile
  4589  004692  0B0F               	andlw	15
  4590  004694  0A0B               	xorlw	11
  4591  004696  B4D8               	btfsc	status,2,c
  4592  004698                     u3620:
  4593                           
  4594                           ;newmain.c: 1360: SSPCON2bits.RCEN = 1;
  4595  004698  86C5               	bsf	4037,3,c	;volatile
  4596  00469A                     
  4597                           ;newmain.c: 1361: while (!SSPSTATbits.BF);
  4598  00469A  A0C7               	btfss	4039,0,c	;volatile
  4599  00469C  D7FE               	goto	l648
  4600                           
  4601                           ;newmain.c: 1362: return ( SSPBUF);
  4602  00469E  50C9               	movf	4041,w,c	;volatile
  4603  0046A0  0012               	return	
  4604  0046A2                     __end_of_MyReadI2C:
  4605                           	opt stack 0
  4606                           tblptru	equ	0xFF8
  4607                           tblptrh	equ	0xFF7
  4608                           tblptrl	equ	0xFF6
  4609                           tablat	equ	0xFF5
  4610                           prodh	equ	0xFF4
  4611                           prodl	equ	0xFF3
  4612                           postinc0	equ	0xFEE
  4613                           wreg	equ	0xFE8
  4614                           postinc1	equ	0xFE6
  4615                           fsr1h	equ	0xFE2
  4616                           fsr1l	equ	0xFE1
  4617                           indf2	equ	0xFDF
  4618                           postinc2	equ	0xFDE
  4619                           postdec2	equ	0xFDD
  4620                           fsr2h	equ	0xFDA
  4621                           fsr2l	equ	0xFD9
  4622                           status	equ	0xFD8
  4623                           
  4624 ;; *************** function _MyNotAckI2C *****************
  4625 ;; Defined at:
  4626 ;;		line 1353 in file "newmain.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		None
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4640 ;;      Params:         0       0       0       0       0       0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0
  4643 ;;      Totals:         0       0       0       0       0       0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_read_switch
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text7
  4654  00465A                     __ptext7:
  4655                           	opt stack 0
  4656  00465A                     _MyNotAckI2C:
  4657                           	opt stack 29
  4658                           
  4659                           ;newmain.c: 1354: SSPCON2bits.ACKDT = 1;
  4660                           
  4661                           ;incstack = 0
  4662  00465A  8AC5               	bsf	4037,5,c	;volatile
  4663                           
  4664                           ;newmain.c: 1355: SSPCON2bits.ACKEN = 1;
  4665  00465C  88C5               	bsf	4037,4,c	;volatile
  4666  00465E  0012               	return		;funcret
  4667  004660                     __end_of_MyNotAckI2C:
  4668                           	opt stack 0
  4669                           tblptru	equ	0xFF8
  4670                           tblptrh	equ	0xFF7
  4671                           tblptrl	equ	0xFF6
  4672                           tablat	equ	0xFF5
  4673                           prodh	equ	0xFF4
  4674                           prodl	equ	0xFF3
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           postinc1	equ	0xFE6
  4678                           fsr1h	equ	0xFE2
  4679                           fsr1l	equ	0xFE1
  4680                           indf2	equ	0xFDF
  4681                           postinc2	equ	0xFDE
  4682                           postdec2	equ	0xFDD
  4683                           fsr2h	equ	0xFDA
  4684                           fsr2l	equ	0xFD9
  4685                           status	equ	0xFD8
  4686                           
  4687 ;; *************** function _is_key_pressed *****************
  4688 ;; Defined at:
  4689 ;;		line 1213 in file "newmain.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  k               1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  k               1   18[COMRAM] unsigned char 
  4694 ;;  led             2   16[COMRAM] int 
  4695 ;;  matrix          2   14[COMRAM] int 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4705 ;;      Params:         0       0       0       0       0       0       0
  4706 ;;      Locals:         5       0       0       0       0       0       0
  4707 ;;      Temps:          8       0       0       0       0       0       0
  4708 ;;      Totals:        13       0       0       0       0       0       0
  4709 ;;Total ram usage:       13 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    1
  4712 ;; This function calls:
  4713 ;;		___wmul
  4714 ;; This function is called by:
  4715 ;;		_main
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text8
  4720  00486C                     __ptext8:
  4721                           	opt stack 0
  4722  00486C                     _is_key_pressed:
  4723                           	opt stack 29
  4724                           
  4725                           ;incstack = 0
  4726                           ;is_key_pressed@k stored from wreg
  4727  00486C  6E55               	movwf	is_key_pressed@k,c
  4728                           
  4729                           ;newmain.c: 1214: int matrix = k >> 4;
  4730  00486E  C055  F049         	movff	is_key_pressed@k,??_is_key_pressed
  4731  004872  3A49               	swapf	??_is_key_pressed,f,c
  4732  004874  0E0F               	movlw	15
  4733  004876  1649               	andwf	??_is_key_pressed,f,c
  4734  004878  5049               	movf	??_is_key_pressed,w,c
  4735  00487A  6E51               	movwf	is_key_pressed@matrix,c
  4736  00487C  6A52               	clrf	is_key_pressed@matrix+1,c
  4737                           
  4738                           ;newmain.c: 1215: int led = k & 0b1111;
  4739  00487E  C055  F049         	movff	is_key_pressed@k,??_is_key_pressed
  4740  004882  0E0F               	movlw	15
  4741  004884  1649               	andwf	??_is_key_pressed,f,c
  4742  004886  5049               	movf	??_is_key_pressed,w,c
  4743  004888  6E53               	movwf	is_key_pressed@led,c
  4744  00488A  6A54               	clrf	is_key_pressed@led+1,c
  4745                           
  4746                           ;newmain.c: 1216: return (matrices[matrix].keys[buttonLUT[led] >> 4]&(1 << (buttonLUT[le
      +                          d]&0x0f)));
  4747  00488C  C051  F043         	movff	is_key_pressed@matrix,___wmul@multiplier
  4748  004890  C052  F044         	movff	is_key_pressed@matrix+1,___wmul@multiplier+1
  4749  004894  0E00               	movlw	0
  4750  004896  6E46               	movwf	___wmul@multiplicand+1,c
  4751  004898  0E1D               	movlw	29
  4752  00489A  6E45               	movwf	___wmul@multiplicand,c
  4753  00489C  EC71  F023         	call	___wmul	;wreg free
  4754  0048A0  0EDF               	movlw	low _buttonLUT
  4755  0048A2  2453               	addwf	is_key_pressed@led,w,c
  4756  0048A4  6EF6               	movwf	tblptrl,c
  4757  0048A6  0E7F               	movlw	high _buttonLUT
  4758  0048A8  2054               	addwfc	is_key_pressed@led+1,w,c
  4759  0048AA  6EF7               	movwf	tblptrh,c
  4760  0048AC                     	if	0	;There are less than 3 active tblptr bytes
  4761  0048AC                     	endif
  4762  0048AC  0008               	tblrd		*
  4763  0048AE  CFF5 F049          	movff	tablat,??_is_key_pressed
  4764  0048B2  3849               	swapf	??_is_key_pressed,w,c
  4765  0048B4  0B0F               	andlw	15
  4766  0048B6  6E4A               	movwf	(??_is_key_pressed+1)& (0+255),c
  4767  0048B8  6A4B               	clrf	(??_is_key_pressed+2)& (0+255),c
  4768  0048BA  0E01               	movlw	1
  4769  0048BC  264A               	addwf	??_is_key_pressed+1,f,c
  4770  0048BE  0E00               	movlw	0
  4771  0048C0  224B               	addwfc	??_is_key_pressed+2,f,c
  4772  0048C2  0E80               	movlw	low _matrices
  4773  0048C4  6E4C               	movwf	(??_is_key_pressed+3)& (0+255),c
  4774  0048C6  0E00               	movlw	high _matrices
  4775  0048C8  6E4D               	movwf	(??_is_key_pressed+4)& (0+255),c
  4776  0048CA  504A               	movf	??_is_key_pressed+1,w,c
  4777  0048CC  264C               	addwf	??_is_key_pressed+3,f,c
  4778  0048CE  504B               	movf	??_is_key_pressed+2,w,c
  4779  0048D0  224D               	addwfc	??_is_key_pressed+4,f,c
  4780  0048D2  5043               	movf	?___wmul,w,c
  4781  0048D4  244C               	addwf	??_is_key_pressed+3,w,c
  4782  0048D6  6ED9               	movwf	fsr2l,c
  4783  0048D8  5044               	movf	?___wmul+1,w,c
  4784  0048DA  204D               	addwfc	??_is_key_pressed+4,w,c
  4785  0048DC  6EDA               	movwf	fsr2h,c
  4786  0048DE  50DF               	movf	indf2,w,c
  4787  0048E0  6E4E               	movwf	(??_is_key_pressed+5)& (0+255),c
  4788  0048E2  0EDF               	movlw	low _buttonLUT
  4789  0048E4  2453               	addwf	is_key_pressed@led,w,c
  4790  0048E6  6EF6               	movwf	tblptrl,c
  4791  0048E8  0E7F               	movlw	high _buttonLUT
  4792  0048EA  2054               	addwfc	is_key_pressed@led+1,w,c
  4793  0048EC  6EF7               	movwf	tblptrh,c
  4794  0048EE                     	if	0	;There are less than 3 active tblptr bytes
  4795  0048EE                     	endif
  4796  0048EE  0008               	tblrd		*
  4797  0048F0  CFF5 F04F          	movff	tablat,??_is_key_pressed+6
  4798  0048F4  0E0F               	movlw	15
  4799  0048F6  164F               	andwf	??_is_key_pressed+6,f,c
  4800  0048F8  0E01               	movlw	1
  4801  0048FA  6E50               	movwf	(??_is_key_pressed+7)& (0+255),c
  4802  0048FC  2A4F               	incf	??_is_key_pressed+6,f,c
  4803  0048FE  D002               	goto	u3844
  4804  004900                     u3845:
  4805  004900  90D8               	bcf	status,0,c
  4806  004902  3650               	rlcf	??_is_key_pressed+7,f,c
  4807  004904                     u3844:
  4808  004904  2E4F               	decfsz	??_is_key_pressed+6,f,c
  4809  004906  D7FC               	goto	u3845
  4810  004908  5050               	movf	??_is_key_pressed+7,w,c
  4811  00490A  144E               	andwf	??_is_key_pressed+5,w,c
  4812  00490C  0012               	return	
  4813  00490E                     __end_of_is_key_pressed:
  4814                           	opt stack 0
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           prodh	equ	0xFF4
  4820                           prodl	equ	0xFF3
  4821                           postinc0	equ	0xFEE
  4822                           wreg	equ	0xFE8
  4823                           postinc1	equ	0xFE6
  4824                           fsr1h	equ	0xFE2
  4825                           fsr1l	equ	0xFE1
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function _animation7 *****************
  4834 ;; Defined at:
  4835 ;;		line 1110 in file "newmain.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  h               1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  h               1   23[COMRAM] unsigned char 
  4840 ;;  j               2   26[COMRAM] int 
  4841 ;;  i               2   24[COMRAM] int 
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4851 ;;      Params:         0       0       0       0       0       0       0
  4852 ;;      Locals:         5       0       0       0       0       0       0
  4853 ;;      Temps:          2       0       0       0       0       0       0
  4854 ;;      Totals:         7       0       0       0       0       0       0
  4855 ;;Total ram usage:        7 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    4
  4858 ;; This function calls:
  4859 ;;		___wmul
  4860 ;;		_clr_led
  4861 ;;		_set_led
  4862 ;;		_write_display
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text9
  4869  005DBA                     __ptext9:
  4870                           	opt stack 0
  4871  005DBA                     _animation7:
  4872                           	opt stack 26
  4873                           
  4874                           ;incstack = 0
  4875                           ;animation7@h stored from wreg
  4876  005DBA  6E5A               	movwf	animation7@h,c
  4877                           
  4878                           ;newmain.c: 1111: int i = 0, j = 0;
  4879  005DBC  0E00               	movlw	0
  4880  005DBE  6E5C               	movwf	animation7@i+1,c
  4881  005DC0  0E00               	movlw	0
  4882  005DC2  6E5B               	movwf	animation7@i,c
  4883  005DC4  0E00               	movlw	0
  4884  005DC6  6E5E               	movwf	animation7@j+1,c
  4885  005DC8  0E00               	movlw	0
  4886  005DCA  6E5D               	movwf	animation7@j,c
  4887                           
  4888                           ;newmain.c: 1112: if (h == 15 || h == 28 || h == 35 || h == 48 || h == 10 || h == 11 || 
      +                          h == 24 || h == 25 || h == 14 || h == 34 || h == 38 || h == 39 || h == 52 || h == 53 || 
      +                          h == 29 || h == 49) {
  4889  005DCC  0E0F               	movlw	15
  4890  005DCE  185A               	xorwf	animation7@h,w,c
  4891  005DD0  B4D8               	btfsc	status,2,c
  4892  005DD2  D03C               	goto	u5920
  4893  005DD4  0E1C               	movlw	28
  4894  005DD6  185A               	xorwf	animation7@h,w,c
  4895  005DD8  B4D8               	btfsc	status,2,c
  4896  005DDA  D038               	goto	u5920
  4897  005DDC  0E23               	movlw	35
  4898  005DDE  185A               	xorwf	animation7@h,w,c
  4899  005DE0  B4D8               	btfsc	status,2,c
  4900  005DE2  D034               	goto	u5920
  4901  005DE4  0E30               	movlw	48
  4902  005DE6  185A               	xorwf	animation7@h,w,c
  4903  005DE8  B4D8               	btfsc	status,2,c
  4904  005DEA  D030               	goto	u5920
  4905  005DEC  0E0A               	movlw	10
  4906  005DEE  185A               	xorwf	animation7@h,w,c
  4907  005DF0  B4D8               	btfsc	status,2,c
  4908  005DF2  D02C               	goto	u5920
  4909  005DF4  0E0B               	movlw	11
  4910  005DF6  185A               	xorwf	animation7@h,w,c
  4911  005DF8  B4D8               	btfsc	status,2,c
  4912  005DFA  D028               	goto	u5920
  4913  005DFC  0E18               	movlw	24
  4914  005DFE  185A               	xorwf	animation7@h,w,c
  4915  005E00  B4D8               	btfsc	status,2,c
  4916  005E02  D024               	goto	u5920
  4917  005E04  0E19               	movlw	25
  4918  005E06  185A               	xorwf	animation7@h,w,c
  4919  005E08  B4D8               	btfsc	status,2,c
  4920  005E0A  D020               	goto	u5920
  4921  005E0C  0E0E               	movlw	14
  4922  005E0E  185A               	xorwf	animation7@h,w,c
  4923  005E10  B4D8               	btfsc	status,2,c
  4924  005E12  D01C               	goto	u5920
  4925  005E14  0E22               	movlw	34
  4926  005E16  185A               	xorwf	animation7@h,w,c
  4927  005E18  B4D8               	btfsc	status,2,c
  4928  005E1A  D018               	goto	u5920
  4929  005E1C  0E26               	movlw	38
  4930  005E1E  185A               	xorwf	animation7@h,w,c
  4931  005E20  B4D8               	btfsc	status,2,c
  4932  005E22  D014               	goto	u5920
  4933  005E24  0E27               	movlw	39
  4934  005E26  185A               	xorwf	animation7@h,w,c
  4935  005E28  B4D8               	btfsc	status,2,c
  4936  005E2A  D010               	goto	u5920
  4937  005E2C  0E34               	movlw	52
  4938  005E2E  185A               	xorwf	animation7@h,w,c
  4939  005E30  B4D8               	btfsc	status,2,c
  4940  005E32  D00C               	goto	u5920
  4941  005E34  0E35               	movlw	53
  4942  005E36  185A               	xorwf	animation7@h,w,c
  4943  005E38  B4D8               	btfsc	status,2,c
  4944  005E3A  D008               	goto	u5920
  4945  005E3C  0E1D               	movlw	29
  4946  005E3E  185A               	xorwf	animation7@h,w,c
  4947  005E40  B4D8               	btfsc	status,2,c
  4948  005E42  D004               	goto	u5920
  4949  005E44  0E31               	movlw	49
  4950  005E46  185A               	xorwf	animation7@h,w,c
  4951  005E48  A4D8               	btfss	status,2,c
  4952  005E4A  D0B9               	goto	l511
  4953  005E4C                     u5920:
  4954                           
  4955                           ;newmain.c: 1113: for (i = 0; i < 4; i++) {
  4956  005E4C  0E00               	movlw	0
  4957  005E4E  6E5C               	movwf	animation7@i+1,c
  4958  005E50  0E00               	movlw	0
  4959  005E52  6E5B               	movwf	animation7@i,c
  4960  005E54  BE5C               	btfsc	animation7@i+1,7,c
  4961  005E56  D008               	goto	l514
  4962  005E58  505C               	movf	animation7@i+1,w,c
  4963  005E5A  E105               	bnz	u5930
  4964  005E5C  0E04               	movlw	4
  4965  005E5E  5C5B               	subwf	animation7@i,w,c
  4966  005E60  B0D8               	btfsc	status,0,c
  4967  005E62  0012               	return	
  4968  005E64  D001               	goto	l514
  4969  005E66                     u5930:
  4970  005E66  0012               	return	
  4971  005E68                     l514:
  4972                           
  4973                           ;newmain.c: 1114: for (j = 0; j < 29; j++) {
  4974  005E68  0E00               	movlw	0
  4975  005E6A  6E5E               	movwf	animation7@j+1,c
  4976  005E6C  0E00               	movlw	0
  4977  005E6E  6E5D               	movwf	animation7@j,c
  4978  005E70                     l4568:
  4979  005E70  BE5E               	btfsc	animation7@j+1,7,c
  4980  005E72  D006               	goto	l516
  4981  005E74  505E               	movf	animation7@j+1,w,c
  4982  005E76  E144               	bnz	l4580
  4983  005E78  0E1D               	movlw	29
  4984  005E7A  5C5D               	subwf	animation7@j,w,c
  4985  005E7C  B0D8               	btfsc	status,0,c
  4986  005E7E  D040               	goto	u5960
  4987  005E80                     l516:
  4988                           
  4989                           ;newmain.c: 1115: if (show7_1[i][j] != 100)
  4990  005E80  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4991  005E84  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4992  005E88  0E00               	movlw	0
  4993  005E8A  6E46               	movwf	___wmul@multiplicand+1,c
  4994  005E8C  0E1D               	movlw	29
  4995  005E8E  6E45               	movwf	___wmul@multiplicand,c
  4996  005E90  EC71  F023         	call	___wmul	;wreg free
  4997  005E94  0ECD               	movlw	low _show7_1
  4998  005E96  6E58               	movwf	??_animation7& (0+255),c
  4999  005E98  0E7B               	movlw	high _show7_1
  5000  005E9A  6E59               	movwf	(??_animation7+1)& (0+255),c
  5001  005E9C  5043               	movf	?___wmul,w,c
  5002  005E9E  2658               	addwf	??_animation7,f,c
  5003  005EA0  5044               	movf	?___wmul+1,w,c
  5004  005EA2  2259               	addwfc	??_animation7+1,f,c
  5005  005EA4  505D               	movf	animation7@j,w,c
  5006  005EA6  2658               	addwf	??_animation7,f,c
  5007  005EA8  505E               	movf	animation7@j+1,w,c
  5008  005EAA  2259               	addwfc	??_animation7+1,f,c
  5009  005EAC  C058  FFF6         	movff	??_animation7,tblptrl
  5010  005EB0  C059  FFF7         	movff	??_animation7+1,tblptrh
  5011  005EB4                     	if	0	;tblptru may be non-zero
  5012  005EB4                     	endif
  5013  005EB4                     	if	0	;tblptru may be non-zero
  5014  005EB4                     	endif
  5015  005EB4  0008               	tblrd		*
  5016  005EB6  50F5               	movf	tablat,w,c
  5017  005EB8  0A64               	xorlw	100
  5018  005EBA  B4D8               	btfsc	status,2,c
  5019  005EBC  D021               	goto	u5960
  5020                           
  5021                           ;newmain.c: 1116: set_led(show7_1[i][j]);
  5022  005EBE  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5023  005EC2  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5024  005EC6  0E00               	movlw	0
  5025  005EC8  6E46               	movwf	___wmul@multiplicand+1,c
  5026  005ECA  0E1D               	movlw	29
  5027  005ECC  6E45               	movwf	___wmul@multiplicand,c
  5028  005ECE  EC71  F023         	call	___wmul	;wreg free
  5029  005ED2  0ECD               	movlw	low _show7_1
  5030  005ED4  6E58               	movwf	??_animation7& (0+255),c
  5031  005ED6  0E7B               	movlw	high _show7_1
  5032  005ED8  6E59               	movwf	(??_animation7+1)& (0+255),c
  5033  005EDA  5043               	movf	?___wmul,w,c
  5034  005EDC  2658               	addwf	??_animation7,f,c
  5035  005EDE  5044               	movf	?___wmul+1,w,c
  5036  005EE0  2259               	addwfc	??_animation7+1,f,c
  5037  005EE2  505D               	movf	animation7@j,w,c
  5038  005EE4  2658               	addwf	??_animation7,f,c
  5039  005EE6  505E               	movf	animation7@j+1,w,c
  5040  005EE8  2259               	addwfc	??_animation7+1,f,c
  5041  005EEA  C058  FFF6         	movff	??_animation7,tblptrl
  5042  005EEE  C059  FFF7         	movff	??_animation7+1,tblptrh
  5043  005EF2                     	if	0	;tblptru may be non-zero
  5044  005EF2                     	endif
  5045  005EF2                     	if	0	;tblptru may be non-zero
  5046  005EF2                     	endif
  5047  005EF2  0008               	tblrd		*
  5048  005EF4  50F5               	movf	tablat,w,c
  5049  005EF6  ECD8  F024         	call	_set_led
  5050                           
  5051                           ;newmain.c: 1117: else
  5052                           ;newmain.c: 1118: break;
  5053  005EFA  4A5D               	infsnz	animation7@j,f,c
  5054  005EFC  2A5E               	incf	animation7@j+1,f,c
  5055  005EFE  D7B8               	goto	l4568
  5056  005F00                     u5960:
  5057  005F00                     l4580:
  5058                           
  5059                           ;newmain.c: 1119: }
  5060                           ;newmain.c: 1120: write_display();
  5061  005F00  EC8A  F025         	call	_write_display	;wreg free
  5062                           
  5063                           ;newmain.c: 1121: _delay((unsigned long)((10)*(4000000/4000.0)));
  5064  005F04  0E0D               	movlw	13
  5065  005F06  6E58               	movwf	??_animation7& (0+255),c
  5066  005F08  0EFC               	movlw	252
  5067  005F0A                     u6957:
  5068  005F0A  2EE8               	decfsz	wreg,f,c
  5069  005F0C  D7FE               	bra	u6957
  5070  005F0E  2E58               	decfsz	??_animation7& (0+255),f,c
  5071  005F10  D7FC               	bra	u6957
  5072                           
  5073                           ;newmain.c: 1122: for (j = 0; j < 29; j++){
  5074  005F12  0E00               	movlw	0
  5075  005F14  6E5E               	movwf	animation7@j+1,c
  5076  005F16  0E00               	movlw	0
  5077  005F18  6E5D               	movwf	animation7@j,c
  5078  005F1A                     l4586:
  5079  005F1A  BE5E               	btfsc	animation7@j+1,7,c
  5080  005F1C  D006               	goto	l520
  5081  005F1E  505E               	movf	animation7@j+1,w,c
  5082  005F20  E144               	bnz	l4598
  5083  005F22  0E1D               	movlw	29
  5084  005F24  5C5D               	subwf	animation7@j,w,c
  5085  005F26  B0D8               	btfsc	status,0,c
  5086  005F28  D040               	goto	u5990
  5087  005F2A                     l520:
  5088                           
  5089                           ;newmain.c: 1123: if(show7_1[i][j]!=100)
  5090  005F2A  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5091  005F2E  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5092  005F32  0E00               	movlw	0
  5093  005F34  6E46               	movwf	___wmul@multiplicand+1,c
  5094  005F36  0E1D               	movlw	29
  5095  005F38  6E45               	movwf	___wmul@multiplicand,c
  5096  005F3A  EC71  F023         	call	___wmul	;wreg free
  5097  005F3E  0ECD               	movlw	low _show7_1
  5098  005F40  6E58               	movwf	??_animation7& (0+255),c
  5099  005F42  0E7B               	movlw	high _show7_1
  5100  005F44  6E59               	movwf	(??_animation7+1)& (0+255),c
  5101  005F46  5043               	movf	?___wmul,w,c
  5102  005F48  2658               	addwf	??_animation7,f,c
  5103  005F4A  5044               	movf	?___wmul+1,w,c
  5104  005F4C  2259               	addwfc	??_animation7+1,f,c
  5105  005F4E  505D               	movf	animation7@j,w,c
  5106  005F50  2658               	addwf	??_animation7,f,c
  5107  005F52  505E               	movf	animation7@j+1,w,c
  5108  005F54  2259               	addwfc	??_animation7+1,f,c
  5109  005F56  C058  FFF6         	movff	??_animation7,tblptrl
  5110  005F5A  C059  FFF7         	movff	??_animation7+1,tblptrh
  5111  005F5E                     	if	0	;tblptru may be non-zero
  5112  005F5E                     	endif
  5113  005F5E                     	if	0	;tblptru may be non-zero
  5114  005F5E                     	endif
  5115  005F5E  0008               	tblrd		*
  5116  005F60  50F5               	movf	tablat,w,c
  5117  005F62  0A64               	xorlw	100
  5118  005F64  B4D8               	btfsc	status,2,c
  5119  005F66  D021               	goto	u5990
  5120                           
  5121                           ;newmain.c: 1124: clr_led(show7_1[i][j]);
  5122  005F68  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5123  005F6C  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5124  005F70  0E00               	movlw	0
  5125  005F72  6E46               	movwf	___wmul@multiplicand+1,c
  5126  005F74  0E1D               	movlw	29
  5127  005F76  6E45               	movwf	___wmul@multiplicand,c
  5128  005F78  EC71  F023         	call	___wmul	;wreg free
  5129  005F7C  0ECD               	movlw	low _show7_1
  5130  005F7E  6E58               	movwf	??_animation7& (0+255),c
  5131  005F80  0E7B               	movlw	high _show7_1
  5132  005F82  6E59               	movwf	(??_animation7+1)& (0+255),c
  5133  005F84  5043               	movf	?___wmul,w,c
  5134  005F86  2658               	addwf	??_animation7,f,c
  5135  005F88  5044               	movf	?___wmul+1,w,c
  5136  005F8A  2259               	addwfc	??_animation7+1,f,c
  5137  005F8C  505D               	movf	animation7@j,w,c
  5138  005F8E  2658               	addwf	??_animation7,f,c
  5139  005F90  505E               	movf	animation7@j+1,w,c
  5140  005F92  2259               	addwfc	??_animation7+1,f,c
  5141  005F94  C058  FFF6         	movff	??_animation7,tblptrl
  5142  005F98  C059  FFF7         	movff	??_animation7+1,tblptrh
  5143  005F9C                     	if	0	;tblptru may be non-zero
  5144  005F9C                     	endif
  5145  005F9C                     	if	0	;tblptru may be non-zero
  5146  005F9C                     	endif
  5147  005F9C  0008               	tblrd		*
  5148  005F9E  50F5               	movf	tablat,w,c
  5149  005FA0  EC2F  F025         	call	_clr_led
  5150                           
  5151                           ;newmain.c: 1125: else
  5152                           ;newmain.c: 1126: break;
  5153  005FA4  4A5D               	infsnz	animation7@j,f,c
  5154  005FA6  2A5E               	incf	animation7@j+1,f,c
  5155  005FA8  D7B8               	goto	l4586
  5156  005FAA                     u5990:
  5157  005FAA                     l4598:
  5158                           
  5159                           ;newmain.c: 1127: }
  5160                           ;newmain.c: 1128: write_display();
  5161  005FAA  EC8A  F025         	call	_write_display	;wreg free
  5162  005FAE  4A5B               	infsnz	animation7@i,f,c
  5163  005FB0  2A5C               	incf	animation7@i+1,f,c
  5164  005FB2  BE5C               	btfsc	animation7@i+1,7,c
  5165  005FB4  D759               	goto	l514
  5166  005FB6  505C               	movf	animation7@i+1,w,c
  5167  005FB8  E101               	bnz	u6000
  5168  005FBA  D750               	goto	L6
  5169  005FBC                     u6000:
  5170                           
  5171                           ;newmain.c: 1129: }
  5172                           ;newmain.c: 1130: } else {
  5173  005FBC  0012               	return	
  5174  005FBE                     l511:
  5175                           
  5176                           ;newmain.c: 1132: if (count == 0) {
  5177  005FBE  5041               	movf	_count,w,c
  5178  005FC0  1042               	iorwf	_count+1,w,c
  5179  005FC2  A4D8               	btfss	status,2,c
  5180  005FC4  D0BD               	goto	l525
  5181                           
  5182                           ;newmain.c: 1133: for (i = 0; i < 7; i++) {
  5183  005FC6  0E00               	movlw	0
  5184  005FC8  6E5C               	movwf	animation7@i+1,c
  5185  005FCA  0E00               	movlw	0
  5186  005FCC  6E5B               	movwf	animation7@i,c
  5187  005FCE  BE5C               	btfsc	animation7@i+1,7,c
  5188  005FD0  D008               	goto	l526
  5189  005FD2  505C               	movf	animation7@i+1,w,c
  5190  005FD4  E105               	bnz	u6020
  5191  005FD6  0E07               	movlw	7
  5192  005FD8  5C5B               	subwf	animation7@i,w,c
  5193  005FDA  B0D8               	btfsc	status,0,c
  5194  005FDC  D0AC               	goto	u6090
  5195  005FDE  D001               	goto	l526
  5196  005FE0                     u6020:
  5197  005FE0  D0AA               	goto	u6090
  5198  005FE2                     l526:
  5199                           
  5200                           ;newmain.c: 1134: for (j = 0; j < 24; j++) {
  5201  005FE2  0E00               	movlw	0
  5202  005FE4  6E5E               	movwf	animation7@j+1,c
  5203  005FE6  0E00               	movlw	0
  5204  005FE8  6E5D               	movwf	animation7@j,c
  5205  005FEA                     l4614:
  5206  005FEA  BE5E               	btfsc	animation7@j+1,7,c
  5207  005FEC  D006               	goto	l528
  5208  005FEE  505E               	movf	animation7@j+1,w,c
  5209  005FF0  E144               	bnz	l4626
  5210  005FF2  0E18               	movlw	24
  5211  005FF4  5C5D               	subwf	animation7@j,w,c
  5212  005FF6  B0D8               	btfsc	status,0,c
  5213  005FF8  D040               	goto	u6050
  5214  005FFA                     l528:
  5215                           
  5216                           ;newmain.c: 1135: if (show7_2[i][j] != 100)
  5217  005FFA  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5218  005FFE  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5219  006002  0E00               	movlw	0
  5220  006004  6E46               	movwf	___wmul@multiplicand+1,c
  5221  006006  0E18               	movlw	24
  5222  006008  6E45               	movwf	___wmul@multiplicand,c
  5223  00600A  EC71  F023         	call	___wmul	;wreg free
  5224  00600E  0EAD               	movlw	low _show7_2
  5225  006010  6E58               	movwf	??_animation7& (0+255),c
  5226  006012  0E7A               	movlw	high _show7_2
  5227  006014  6E59               	movwf	(??_animation7+1)& (0+255),c
  5228  006016  5043               	movf	?___wmul,w,c
  5229  006018  2658               	addwf	??_animation7,f,c
  5230  00601A  5044               	movf	?___wmul+1,w,c
  5231  00601C  2259               	addwfc	??_animation7+1,f,c
  5232  00601E  505D               	movf	animation7@j,w,c
  5233  006020  2658               	addwf	??_animation7,f,c
  5234  006022  505E               	movf	animation7@j+1,w,c
  5235  006024  2259               	addwfc	??_animation7+1,f,c
  5236  006026  C058  FFF6         	movff	??_animation7,tblptrl
  5237  00602A  C059  FFF7         	movff	??_animation7+1,tblptrh
  5238  00602E                     	if	0	;tblptru may be non-zero
  5239  00602E                     	endif
  5240  00602E                     	if	0	;tblptru may be non-zero
  5241  00602E                     	endif
  5242  00602E  0008               	tblrd		*
  5243  006030  50F5               	movf	tablat,w,c
  5244  006032  0A64               	xorlw	100
  5245  006034  B4D8               	btfsc	status,2,c
  5246  006036  D021               	goto	u6050
  5247                           
  5248                           ;newmain.c: 1136: set_led(show7_2[i][j]);
  5249  006038  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5250  00603C  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5251  006040  0E00               	movlw	0
  5252  006042  6E46               	movwf	___wmul@multiplicand+1,c
  5253  006044  0E18               	movlw	24
  5254  006046  6E45               	movwf	___wmul@multiplicand,c
  5255  006048  EC71  F023         	call	___wmul	;wreg free
  5256  00604C  0EAD               	movlw	low _show7_2
  5257  00604E  6E58               	movwf	??_animation7& (0+255),c
  5258  006050  0E7A               	movlw	high _show7_2
  5259  006052  6E59               	movwf	(??_animation7+1)& (0+255),c
  5260  006054  5043               	movf	?___wmul,w,c
  5261  006056  2658               	addwf	??_animation7,f,c
  5262  006058  5044               	movf	?___wmul+1,w,c
  5263  00605A  2259               	addwfc	??_animation7+1,f,c
  5264  00605C  505D               	movf	animation7@j,w,c
  5265  00605E  2658               	addwf	??_animation7,f,c
  5266  006060  505E               	movf	animation7@j+1,w,c
  5267  006062  2259               	addwfc	??_animation7+1,f,c
  5268  006064  C058  FFF6         	movff	??_animation7,tblptrl
  5269  006068  C059  FFF7         	movff	??_animation7+1,tblptrh
  5270  00606C                     	if	0	;tblptru may be non-zero
  5271  00606C                     	endif
  5272  00606C                     	if	0	;tblptru may be non-zero
  5273  00606C                     	endif
  5274  00606C  0008               	tblrd		*
  5275  00606E  50F5               	movf	tablat,w,c
  5276  006070  ECD8  F024         	call	_set_led
  5277                           
  5278                           ;newmain.c: 1137: else
  5279                           ;newmain.c: 1138: break;
  5280  006074  4A5D               	infsnz	animation7@j,f,c
  5281  006076  2A5E               	incf	animation7@j+1,f,c
  5282  006078  D7B8               	goto	l4614
  5283  00607A                     u6050:
  5284  00607A                     l4626:
  5285                           
  5286                           ;newmain.c: 1139: }
  5287                           ;newmain.c: 1140: write_display();
  5288  00607A  EC8A  F025         	call	_write_display	;wreg free
  5289                           
  5290                           ;newmain.c: 1141: _delay((unsigned long)((10)*(4000000/4000.0)));
  5291  00607E  0E0D               	movlw	13
  5292  006080  6E58               	movwf	??_animation7& (0+255),c
  5293  006082  0EFC               	movlw	252
  5294  006084                     u6967:
  5295  006084  2EE8               	decfsz	wreg,f,c
  5296  006086  D7FE               	bra	u6967
  5297  006088  2E58               	decfsz	??_animation7& (0+255),f,c
  5298  00608A  D7FC               	bra	u6967
  5299                           
  5300                           ;newmain.c: 1142: for (j = 0; j < 24; j++){
  5301  00608C  0E00               	movlw	0
  5302  00608E  6E5E               	movwf	animation7@j+1,c
  5303  006090  0E00               	movlw	0
  5304  006092  6E5D               	movwf	animation7@j,c
  5305  006094                     l4632:
  5306  006094  BE5E               	btfsc	animation7@j+1,7,c
  5307  006096  D006               	goto	l532
  5308  006098  505E               	movf	animation7@j+1,w,c
  5309  00609A  E144               	bnz	l4644
  5310  00609C  0E18               	movlw	24
  5311  00609E  5C5D               	subwf	animation7@j,w,c
  5312  0060A0  B0D8               	btfsc	status,0,c
  5313  0060A2  D040               	goto	u6080
  5314  0060A4                     l532:
  5315                           
  5316                           ;newmain.c: 1143: if (show7_2[i][j] != 100)
  5317  0060A4  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5318  0060A8  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5319  0060AC  0E00               	movlw	0
  5320  0060AE  6E46               	movwf	___wmul@multiplicand+1,c
  5321  0060B0  0E18               	movlw	24
  5322  0060B2  6E45               	movwf	___wmul@multiplicand,c
  5323  0060B4  EC71  F023         	call	___wmul	;wreg free
  5324  0060B8  0EAD               	movlw	low _show7_2
  5325  0060BA  6E58               	movwf	??_animation7& (0+255),c
  5326  0060BC  0E7A               	movlw	high _show7_2
  5327  0060BE  6E59               	movwf	(??_animation7+1)& (0+255),c
  5328  0060C0  5043               	movf	?___wmul,w,c
  5329  0060C2  2658               	addwf	??_animation7,f,c
  5330  0060C4  5044               	movf	?___wmul+1,w,c
  5331  0060C6  2259               	addwfc	??_animation7+1,f,c
  5332  0060C8  505D               	movf	animation7@j,w,c
  5333  0060CA  2658               	addwf	??_animation7,f,c
  5334  0060CC  505E               	movf	animation7@j+1,w,c
  5335  0060CE  2259               	addwfc	??_animation7+1,f,c
  5336  0060D0  C058  FFF6         	movff	??_animation7,tblptrl
  5337  0060D4  C059  FFF7         	movff	??_animation7+1,tblptrh
  5338  0060D8                     	if	0	;tblptru may be non-zero
  5339  0060D8                     	endif
  5340  0060D8                     	if	0	;tblptru may be non-zero
  5341  0060D8                     	endif
  5342  0060D8  0008               	tblrd		*
  5343  0060DA  50F5               	movf	tablat,w,c
  5344  0060DC  0A64               	xorlw	100
  5345  0060DE  B4D8               	btfsc	status,2,c
  5346  0060E0  D021               	goto	u6080
  5347                           
  5348                           ;newmain.c: 1144: clr_led(show7_2[i][j]);
  5349  0060E2  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5350  0060E6  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5351  0060EA  0E00               	movlw	0
  5352  0060EC  6E46               	movwf	___wmul@multiplicand+1,c
  5353  0060EE  0E18               	movlw	24
  5354  0060F0  6E45               	movwf	___wmul@multiplicand,c
  5355  0060F2  EC71  F023         	call	___wmul	;wreg free
  5356  0060F6  0EAD               	movlw	low _show7_2
  5357  0060F8  6E58               	movwf	??_animation7& (0+255),c
  5358  0060FA  0E7A               	movlw	high _show7_2
  5359  0060FC  6E59               	movwf	(??_animation7+1)& (0+255),c
  5360  0060FE  5043               	movf	?___wmul,w,c
  5361  006100  2658               	addwf	??_animation7,f,c
  5362  006102  5044               	movf	?___wmul+1,w,c
  5363  006104  2259               	addwfc	??_animation7+1,f,c
  5364  006106  505D               	movf	animation7@j,w,c
  5365  006108  2658               	addwf	??_animation7,f,c
  5366  00610A  505E               	movf	animation7@j+1,w,c
  5367  00610C  2259               	addwfc	??_animation7+1,f,c
  5368  00610E  C058  FFF6         	movff	??_animation7,tblptrl
  5369  006112  C059  FFF7         	movff	??_animation7+1,tblptrh
  5370  006116                     	if	0	;tblptru may be non-zero
  5371  006116                     	endif
  5372  006116                     	if	0	;tblptru may be non-zero
  5373  006116                     	endif
  5374  006116  0008               	tblrd		*
  5375  006118  50F5               	movf	tablat,w,c
  5376  00611A  EC2F  F025         	call	_clr_led
  5377                           
  5378                           ;newmain.c: 1145: else
  5379                           ;newmain.c: 1146: break;
  5380  00611E  4A5D               	infsnz	animation7@j,f,c
  5381  006120  2A5E               	incf	animation7@j+1,f,c
  5382  006122  D7B8               	goto	l4632
  5383  006124                     u6080:
  5384  006124                     l4644:
  5385                           
  5386                           ;newmain.c: 1147: }
  5387                           ;newmain.c: 1148: write_display();
  5388  006124  EC8A  F025         	call	_write_display	;wreg free
  5389  006128  4A5B               	infsnz	animation7@i,f,c
  5390  00612A  2A5C               	incf	animation7@i+1,f,c
  5391  00612C  BE5C               	btfsc	animation7@i+1,7,c
  5392  00612E  D759               	goto	l526
  5393  006130  505C               	movf	animation7@i+1,w,c
  5394  006132  E101               	bnz	l4650
  5395  006134  D750               	goto	L7
  5396  006136                     u6090:
  5397  006136                     l4650:
  5398                           
  5399                           ;newmain.c: 1149: }
  5400                           ;newmain.c: 1150: count = 1;
  5401  006136  0E00               	movlw	0
  5402  006138  6E42               	movwf	_count+1,c
  5403  00613A  0E01               	movlw	1
  5404  00613C  6E41               	movwf	_count,c
  5405                           
  5406                           ;newmain.c: 1152: } else if (count == 1) {
  5407  00613E  0012               	return	
  5408  006140                     l525:
  5409  006140  0441               	decf	_count,w,c
  5410  006142  1042               	iorwf	_count+1,w,c
  5411  006144  A4D8               	btfss	status,2,c
  5412  006146  0012               	return	
  5413                           
  5414                           ;newmain.c: 1153: for (i = 8; i >= 0; i--) {
  5415  006148  0E00               	movlw	0
  5416  00614A  6E5C               	movwf	animation7@i+1,c
  5417  00614C  0E08               	movlw	8
  5418  00614E  6E5B               	movwf	animation7@i,c
  5419  006150                     l4656:
  5420  006150  BE5C               	btfsc	animation7@i+1,7,c
  5421  006152  D0A7               	goto	u6180
  5422                           
  5423                           ;newmain.c: 1154: for (j = 0; j < 24; j++) {
  5424  006154  0E00               	movlw	0
  5425  006156  6E5E               	movwf	animation7@j+1,c
  5426  006158  0E00               	movlw	0
  5427  00615A  6E5D               	movwf	animation7@j,c
  5428  00615C                     l4662:
  5429  00615C  BE5E               	btfsc	animation7@j+1,7,c
  5430  00615E  D006               	goto	l540
  5431  006160  505E               	movf	animation7@j+1,w,c
  5432  006162  E144               	bnz	l4674
  5433  006164  0E18               	movlw	24
  5434  006166  5C5D               	subwf	animation7@j,w,c
  5435  006168  B0D8               	btfsc	status,0,c
  5436  00616A  D040               	goto	u6140
  5437  00616C                     l540:
  5438                           
  5439                           ;newmain.c: 1155: if (show7_2[i][j] != 100)
  5440  00616C  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5441  006170  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5442  006174  0E00               	movlw	0
  5443  006176  6E46               	movwf	___wmul@multiplicand+1,c
  5444  006178  0E18               	movlw	24
  5445  00617A  6E45               	movwf	___wmul@multiplicand,c
  5446  00617C  EC71  F023         	call	___wmul	;wreg free
  5447  006180  0EAD               	movlw	low _show7_2
  5448  006182  6E58               	movwf	??_animation7& (0+255),c
  5449  006184  0E7A               	movlw	high _show7_2
  5450  006186  6E59               	movwf	(??_animation7+1)& (0+255),c
  5451  006188  5043               	movf	?___wmul,w,c
  5452  00618A  2658               	addwf	??_animation7,f,c
  5453  00618C  5044               	movf	?___wmul+1,w,c
  5454  00618E  2259               	addwfc	??_animation7+1,f,c
  5455  006190  505D               	movf	animation7@j,w,c
  5456  006192  2658               	addwf	??_animation7,f,c
  5457  006194  505E               	movf	animation7@j+1,w,c
  5458  006196  2259               	addwfc	??_animation7+1,f,c
  5459  006198  C058  FFF6         	movff	??_animation7,tblptrl
  5460  00619C  C059  FFF7         	movff	??_animation7+1,tblptrh
  5461  0061A0                     	if	0	;tblptru may be non-zero
  5462  0061A0                     	endif
  5463  0061A0                     	if	0	;tblptru may be non-zero
  5464  0061A0                     	endif
  5465  0061A0  0008               	tblrd		*
  5466  0061A2  50F5               	movf	tablat,w,c
  5467  0061A4  0A64               	xorlw	100
  5468  0061A6  B4D8               	btfsc	status,2,c
  5469  0061A8  D021               	goto	u6140
  5470                           
  5471                           ;newmain.c: 1156: set_led(show7_2[i][j]);
  5472  0061AA  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5473  0061AE  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5474  0061B2  0E00               	movlw	0
  5475  0061B4  6E46               	movwf	___wmul@multiplicand+1,c
  5476  0061B6  0E18               	movlw	24
  5477  0061B8  6E45               	movwf	___wmul@multiplicand,c
  5478  0061BA  EC71  F023         	call	___wmul	;wreg free
  5479  0061BE  0EAD               	movlw	low _show7_2
  5480  0061C0  6E58               	movwf	??_animation7& (0+255),c
  5481  0061C2  0E7A               	movlw	high _show7_2
  5482  0061C4  6E59               	movwf	(??_animation7+1)& (0+255),c
  5483  0061C6  5043               	movf	?___wmul,w,c
  5484  0061C8  2658               	addwf	??_animation7,f,c
  5485  0061CA  5044               	movf	?___wmul+1,w,c
  5486  0061CC  2259               	addwfc	??_animation7+1,f,c
  5487  0061CE  505D               	movf	animation7@j,w,c
  5488  0061D0  2658               	addwf	??_animation7,f,c
  5489  0061D2  505E               	movf	animation7@j+1,w,c
  5490  0061D4  2259               	addwfc	??_animation7+1,f,c
  5491  0061D6  C058  FFF6         	movff	??_animation7,tblptrl
  5492  0061DA  C059  FFF7         	movff	??_animation7+1,tblptrh
  5493  0061DE                     	if	0	;tblptru may be non-zero
  5494  0061DE                     	endif
  5495  0061DE                     	if	0	;tblptru may be non-zero
  5496  0061DE                     	endif
  5497  0061DE  0008               	tblrd		*
  5498  0061E0  50F5               	movf	tablat,w,c
  5499  0061E2  ECD8  F024         	call	_set_led
  5500                           
  5501                           ;newmain.c: 1157: else
  5502                           ;newmain.c: 1158: break;
  5503  0061E6  4A5D               	infsnz	animation7@j,f,c
  5504  0061E8  2A5E               	incf	animation7@j+1,f,c
  5505  0061EA  D7B8               	goto	l4662
  5506  0061EC                     u6140:
  5507  0061EC                     l4674:
  5508                           
  5509                           ;newmain.c: 1159: }
  5510                           ;newmain.c: 1160: write_display();
  5511  0061EC  EC8A  F025         	call	_write_display	;wreg free
  5512                           
  5513                           ;newmain.c: 1161: _delay((unsigned long)((10)*(4000000/4000.0)));
  5514  0061F0  0E0D               	movlw	13
  5515  0061F2  6E58               	movwf	??_animation7& (0+255),c
  5516  0061F4  0EFC               	movlw	252
  5517  0061F6                     u6977:
  5518  0061F6  2EE8               	decfsz	wreg,f,c
  5519  0061F8  D7FE               	bra	u6977
  5520  0061FA  2E58               	decfsz	??_animation7& (0+255),f,c
  5521  0061FC  D7FC               	bra	u6977
  5522                           
  5523                           ;newmain.c: 1162: for (j = 0; j < 24; j++){
  5524  0061FE  0E00               	movlw	0
  5525  006200  6E5E               	movwf	animation7@j+1,c
  5526  006202  0E00               	movlw	0
  5527  006204  6E5D               	movwf	animation7@j,c
  5528  006206                     l4680:
  5529  006206  BE5E               	btfsc	animation7@j+1,7,c
  5530  006208  D006               	goto	l544
  5531  00620A  505E               	movf	animation7@j+1,w,c
  5532  00620C  E144               	bnz	l4692
  5533  00620E  0E18               	movlw	24
  5534  006210  5C5D               	subwf	animation7@j,w,c
  5535  006212  B0D8               	btfsc	status,0,c
  5536  006214  D040               	goto	u6170
  5537  006216                     l544:
  5538                           
  5539                           ;newmain.c: 1163: if (show7_2[i][j] != 100)
  5540  006216  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5541  00621A  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5542  00621E  0E00               	movlw	0
  5543  006220  6E46               	movwf	___wmul@multiplicand+1,c
  5544  006222  0E18               	movlw	24
  5545  006224  6E45               	movwf	___wmul@multiplicand,c
  5546  006226  EC71  F023         	call	___wmul	;wreg free
  5547  00622A  0EAD               	movlw	low _show7_2
  5548  00622C  6E58               	movwf	??_animation7& (0+255),c
  5549  00622E  0E7A               	movlw	high _show7_2
  5550  006230  6E59               	movwf	(??_animation7+1)& (0+255),c
  5551  006232  5043               	movf	?___wmul,w,c
  5552  006234  2658               	addwf	??_animation7,f,c
  5553  006236  5044               	movf	?___wmul+1,w,c
  5554  006238  2259               	addwfc	??_animation7+1,f,c
  5555  00623A  505D               	movf	animation7@j,w,c
  5556  00623C  2658               	addwf	??_animation7,f,c
  5557  00623E  505E               	movf	animation7@j+1,w,c
  5558  006240  2259               	addwfc	??_animation7+1,f,c
  5559  006242  C058  FFF6         	movff	??_animation7,tblptrl
  5560  006246  C059  FFF7         	movff	??_animation7+1,tblptrh
  5561  00624A                     	if	0	;tblptru may be non-zero
  5562  00624A                     	endif
  5563  00624A                     	if	0	;tblptru may be non-zero
  5564  00624A                     	endif
  5565  00624A  0008               	tblrd		*
  5566  00624C  50F5               	movf	tablat,w,c
  5567  00624E  0A64               	xorlw	100
  5568  006250  B4D8               	btfsc	status,2,c
  5569  006252  D021               	goto	u6170
  5570                           
  5571                           ;newmain.c: 1164: clr_led(show7_2[i][j]);
  5572  006254  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5573  006258  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5574  00625C  0E00               	movlw	0
  5575  00625E  6E46               	movwf	___wmul@multiplicand+1,c
  5576  006260  0E18               	movlw	24
  5577  006262  6E45               	movwf	___wmul@multiplicand,c
  5578  006264  EC71  F023         	call	___wmul	;wreg free
  5579  006268  0EAD               	movlw	low _show7_2
  5580  00626A  6E58               	movwf	??_animation7& (0+255),c
  5581  00626C  0E7A               	movlw	high _show7_2
  5582  00626E  6E59               	movwf	(??_animation7+1)& (0+255),c
  5583  006270  5043               	movf	?___wmul,w,c
  5584  006272  2658               	addwf	??_animation7,f,c
  5585  006274  5044               	movf	?___wmul+1,w,c
  5586  006276  2259               	addwfc	??_animation7+1,f,c
  5587  006278  505D               	movf	animation7@j,w,c
  5588  00627A  2658               	addwf	??_animation7,f,c
  5589  00627C  505E               	movf	animation7@j+1,w,c
  5590  00627E  2259               	addwfc	??_animation7+1,f,c
  5591  006280  C058  FFF6         	movff	??_animation7,tblptrl
  5592  006284  C059  FFF7         	movff	??_animation7+1,tblptrh
  5593  006288                     	if	0	;tblptru may be non-zero
  5594  006288                     	endif
  5595  006288                     	if	0	;tblptru may be non-zero
  5596  006288                     	endif
  5597  006288  0008               	tblrd		*
  5598  00628A  50F5               	movf	tablat,w,c
  5599  00628C  EC2F  F025         	call	_clr_led
  5600                           
  5601                           ;newmain.c: 1165: else
  5602                           ;newmain.c: 1166: break;
  5603  006290  4A5D               	infsnz	animation7@j,f,c
  5604  006292  2A5E               	incf	animation7@j+1,f,c
  5605  006294  D7B8               	goto	l4680
  5606  006296                     u6170:
  5607  006296                     l4692:
  5608                           
  5609                           ;newmain.c: 1167: }
  5610                           ;newmain.c: 1168: write_display();
  5611  006296  EC8A  F025         	call	_write_display	;wreg free
  5612  00629A  065B               	decf	animation7@i,f,c
  5613  00629C  A0D8               	btfss	status,0,c
  5614  00629E  065C               	decf	animation7@i+1,f,c
  5615  0062A0  D757               	goto	l4656
  5616  0062A2                     u6180:
  5617                           
  5618                           ;newmain.c: 1169: }
  5619                           ;newmain.c: 1170: count = 0;
  5620  0062A2  0E00               	movlw	0
  5621  0062A4  6E42               	movwf	_count+1,c
  5622  0062A6  0E00               	movlw	0
  5623  0062A8  6E41               	movwf	_count,c
  5624  0062AA  0012               	return	
  5625  0062AC                     __end_of_animation7:
  5626                           	opt stack 0
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           prodh	equ	0xFF4
  5632                           prodl	equ	0xFF3
  5633                           postinc0	equ	0xFEE
  5634                           wreg	equ	0xFE8
  5635                           postinc1	equ	0xFE6
  5636                           fsr1h	equ	0xFE2
  5637                           fsr1l	equ	0xFE1
  5638                           indf2	equ	0xFDF
  5639                           postinc2	equ	0xFDE
  5640                           postdec2	equ	0xFDD
  5641                           fsr2h	equ	0xFDA
  5642                           fsr2l	equ	0xFD9
  5643                           status	equ	0xFD8
  5644                           
  5645 ;; *************** function _animation6 *****************
  5646 ;; Defined at:
  5647 ;;		line 1076 in file "newmain.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  m               1    wreg     unsigned char 
  5650 ;;  n               1   21[COMRAM] unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  m               1   35[COMRAM] unsigned char 
  5653 ;;  x               1   26[COMRAM] unsigned char 
  5654 ;;  d               2   33[COMRAM] int 
  5655 ;;  c               2   31[COMRAM] int 
  5656 ;;  b               2   29[COMRAM] int 
  5657 ;;  a               2   27[COMRAM] int 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5667 ;;      Params:         1       0       0       0       0       0       0
  5668 ;;      Locals:        10       0       0       0       0       0       0
  5669 ;;      Temps:          4       0       0       0       0       0       0
  5670 ;;      Totals:        15       0       0       0       0       0       0
  5671 ;;Total ram usage:       15 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    4
  5674 ;; This function calls:
  5675 ;;		_clr_led
  5676 ;;		_set_led
  5677 ;;		_write_display
  5678 ;; This function is called by:
  5679 ;;		_main
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text10
  5684  004F92                     __ptext10:
  5685                           	opt stack 0
  5686  004F92                     _animation6:
  5687                           	opt stack 26
  5688                           
  5689                           ;incstack = 0
  5690                           ;animation6@m stored from wreg
  5691  004F92  6E66               	movwf	animation6@m,c
  5692                           
  5693                           ;newmain.c: 1077: int a = m - 1, b = m + 1, c = n - 1, d = n + 1;
  5694  004F94  0EFF               	movlw	255
  5695  004F96  2466               	addwf	animation6@m,w,c
  5696  004F98  6E5E               	movwf	animation6@a,c
  5697  004F9A  6A5F               	clrf	animation6@a+1,c
  5698  004F9C  0EFF               	movlw	255
  5699  004F9E  225F               	addwfc	animation6@a+1,f,c
  5700  004FA0  0E01               	movlw	1
  5701  004FA2  2466               	addwf	animation6@m,w,c
  5702  004FA4  6E60               	movwf	animation6@b,c
  5703  004FA6  6A61               	clrf	animation6@b+1,c
  5704  004FA8  0E00               	movlw	0
  5705  004FAA  2261               	addwfc	animation6@b+1,f,c
  5706  004FAC  0EFF               	movlw	255
  5707  004FAE  2458               	addwf	animation6@n,w,c
  5708  004FB0  6E62               	movwf	animation6@c,c
  5709  004FB2  6A63               	clrf	animation6@c+1,c
  5710  004FB4  0EFF               	movlw	255
  5711  004FB6  2263               	addwfc	animation6@c+1,f,c
  5712  004FB8  0E01               	movlw	1
  5713  004FBA  2458               	addwf	animation6@n,w,c
  5714  004FBC  6E64               	movwf	animation6@d,c
  5715  004FBE  6A65               	clrf	animation6@d+1,c
  5716  004FC0  0E00               	movlw	0
  5717  004FC2  2265               	addwfc	animation6@d+1,f,c
  5718                           
  5719                           ;newmain.c: 1079: set_led(Buttons[m][n]);
  5720  004FC4  5066               	movf	animation6@m,w,c
  5721  004FC6  0D08               	mullw	8
  5722  004FC8  0EF9               	movlw	low _Buttons
  5723  004FCA  6E59               	movwf	??_animation6& (0+255),c
  5724  004FCC  0E7E               	movlw	high _Buttons
  5725  004FCE  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5726  004FD0  50F3               	movf	prodl,w,c
  5727  004FD2  2659               	addwf	??_animation6,f,c
  5728  004FD4  50F4               	movf	prodh,w,c
  5729  004FD6  225A               	addwfc	??_animation6+1,f,c
  5730  004FD8  5058               	movf	animation6@n,w,c
  5731  004FDA  0D01               	mullw	1
  5732  004FDC  50F3               	movf	prodl,w,c
  5733  004FDE  2659               	addwf	??_animation6,f,c
  5734  004FE0  50F4               	movf	prodh,w,c
  5735  004FE2  225A               	addwfc	??_animation6+1,f,c
  5736  004FE4  C059  FFF6         	movff	??_animation6,tblptrl
  5737  004FE8  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5738  004FEC                     	if	0	;tblptru may be non-zero
  5739  004FEC                     	endif
  5740  004FEC                     	if	0	;tblptru may be non-zero
  5741  004FEC                     	endif
  5742  004FEC  0008               	tblrd		*
  5743  004FEE  50F5               	movf	tablat,w,c
  5744  004FF0  ECD8  F024         	call	_set_led
  5745                           
  5746                           ;newmain.c: 1080: write_display();
  5747  004FF4  EC8A  F025         	call	_write_display	;wreg free
  5748                           
  5749                           ;newmain.c: 1081: _delay((unsigned long)((10)*(4000000/4000.0)));
  5750  004FF8  0E0D               	movlw	13
  5751  004FFA  6E59               	movwf	??_animation6& (0+255),c
  5752  004FFC  0EFC               	movlw	252
  5753  004FFE                     u6987:
  5754  004FFE  2EE8               	decfsz	wreg,f,c
  5755  005000  D7FE               	bra	u6987
  5756  005002  2E59               	decfsz	??_animation6& (0+255),f,c
  5757  005004  D7FC               	bra	u6987
  5758                           
  5759                           ;newmain.c: 1082: clr_led(Buttons[m][n]);
  5760  005006  5066               	movf	animation6@m,w,c
  5761  005008  0D08               	mullw	8
  5762  00500A  0EF9               	movlw	low _Buttons
  5763  00500C  6E59               	movwf	??_animation6& (0+255),c
  5764  00500E  0E7E               	movlw	high _Buttons
  5765  005010  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5766  005012  50F3               	movf	prodl,w,c
  5767  005014  2659               	addwf	??_animation6,f,c
  5768  005016  50F4               	movf	prodh,w,c
  5769  005018  225A               	addwfc	??_animation6+1,f,c
  5770  00501A  5058               	movf	animation6@n,w,c
  5771  00501C  0D01               	mullw	1
  5772  00501E  50F3               	movf	prodl,w,c
  5773  005020  2659               	addwf	??_animation6,f,c
  5774  005022  50F4               	movf	prodh,w,c
  5775  005024  225A               	addwfc	??_animation6+1,f,c
  5776  005026  C059  FFF6         	movff	??_animation6,tblptrl
  5777  00502A  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5778  00502E                     	if	0	;tblptru may be non-zero
  5779  00502E                     	endif
  5780  00502E                     	if	0	;tblptru may be non-zero
  5781  00502E                     	endif
  5782  00502E  0008               	tblrd		*
  5783  005030  50F5               	movf	tablat,w,c
  5784  005032  EC2F  F025         	call	_clr_led
  5785                           
  5786                           ;newmain.c: 1083: write_display();
  5787  005036  EC8A  F025         	call	_write_display	;wreg free
  5788                           
  5789                           ;newmain.c: 1085: for (uint8_t x = 0; x < 8; x++) {
  5790  00503A  0E00               	movlw	0
  5791  00503C  6E5D               	movwf	animation6@x,c
  5792  00503E                     l4480:
  5793  00503E  0E07               	movlw	7
  5794  005040  645D               	cpfsgt	animation6@x,c
  5795  005042  D001               	goto	l500
  5796  005044  0012               	return	
  5797  005046                     l500:
  5798                           
  5799                           ;newmain.c: 1086: if (a >= 0)
  5800  005046  BE5F               	btfsc	animation6@a+1,7,c
  5801  005048  D023               	goto	l502
  5802                           
  5803                           ;newmain.c: 1087: set_led(Buttons[a][n]);
  5804  00504A  5058               	movf	animation6@n,w,c
  5805  00504C  0D01               	mullw	1
  5806  00504E  C05E  F059         	movff	animation6@a,??_animation6
  5807  005052  C05F  F05A         	movff	animation6@a+1,??_animation6+1
  5808  005056  90D8               	bcf	status,0,c
  5809  005058  3659               	rlcf	??_animation6,f,c
  5810  00505A  365A               	rlcf	??_animation6+1,f,c
  5811  00505C  90D8               	bcf	status,0,c
  5812  00505E  3659               	rlcf	??_animation6,f,c
  5813  005060  365A               	rlcf	??_animation6+1,f,c
  5814  005062  90D8               	bcf	status,0,c
  5815  005064  3659               	rlcf	??_animation6,f,c
  5816  005066  365A               	rlcf	??_animation6+1,f,c
  5817  005068  0EF9               	movlw	low _Buttons
  5818  00506A  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5819  00506C  0E7E               	movlw	high _Buttons
  5820  00506E  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5821  005070  5059               	movf	??_animation6,w,c
  5822  005072  265B               	addwf	??_animation6+2,f,c
  5823  005074  505A               	movf	??_animation6+1,w,c
  5824  005076  225C               	addwfc	??_animation6+3,f,c
  5825  005078  50F3               	movf	prodl,w,c
  5826  00507A  265B               	addwf	??_animation6+2,f,c
  5827  00507C  50F4               	movf	prodh,w,c
  5828  00507E  225C               	addwfc	??_animation6+3,f,c
  5829  005080  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5830  005084  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5831  005088                     	if	0	;tblptru may be non-zero
  5832  005088                     	endif
  5833  005088                     	if	0	;tblptru may be non-zero
  5834  005088                     	endif
  5835  005088  0008               	tblrd		*
  5836  00508A  50F5               	movf	tablat,w,c
  5837  00508C  ECD8  F024         	call	_set_led
  5838  005090                     l502:
  5839                           
  5840                           ;newmain.c: 1088: if (b < 8)
  5841  005090  BE61               	btfsc	animation6@b+1,7,c
  5842  005092  D006               	goto	u5730
  5843  005094  5061               	movf	animation6@b+1,w,c
  5844  005096  E127               	bnz	l4492
  5845  005098  0E08               	movlw	8
  5846  00509A  5C60               	subwf	animation6@b,w,c
  5847  00509C  B0D8               	btfsc	status,0,c
  5848  00509E  D023               	goto	l503
  5849  0050A0                     u5730:
  5850                           
  5851                           ;newmain.c: 1089: set_led(Buttons[b][n]);
  5852  0050A0  5058               	movf	animation6@n,w,c
  5853  0050A2  0D01               	mullw	1
  5854  0050A4  C060  F059         	movff	animation6@b,??_animation6
  5855  0050A8  C061  F05A         	movff	animation6@b+1,??_animation6+1
  5856  0050AC  90D8               	bcf	status,0,c
  5857  0050AE  3659               	rlcf	??_animation6,f,c
  5858  0050B0  365A               	rlcf	??_animation6+1,f,c
  5859  0050B2  90D8               	bcf	status,0,c
  5860  0050B4  3659               	rlcf	??_animation6,f,c
  5861  0050B6  365A               	rlcf	??_animation6+1,f,c
  5862  0050B8  90D8               	bcf	status,0,c
  5863  0050BA  3659               	rlcf	??_animation6,f,c
  5864  0050BC  365A               	rlcf	??_animation6+1,f,c
  5865  0050BE  0EF9               	movlw	low _Buttons
  5866  0050C0  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5867  0050C2  0E7E               	movlw	high _Buttons
  5868  0050C4  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5869  0050C6  5059               	movf	??_animation6,w,c
  5870  0050C8  265B               	addwf	??_animation6+2,f,c
  5871  0050CA  505A               	movf	??_animation6+1,w,c
  5872  0050CC  225C               	addwfc	??_animation6+3,f,c
  5873  0050CE  50F3               	movf	prodl,w,c
  5874  0050D0  265B               	addwf	??_animation6+2,f,c
  5875  0050D2  50F4               	movf	prodh,w,c
  5876  0050D4  225C               	addwfc	??_animation6+3,f,c
  5877  0050D6  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5878  0050DA  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5879  0050DE                     	if	0	;tblptru may be non-zero
  5880  0050DE                     	endif
  5881  0050DE                     	if	0	;tblptru may be non-zero
  5882  0050DE                     	endif
  5883  0050DE  0008               	tblrd		*
  5884  0050E0  50F5               	movf	tablat,w,c
  5885  0050E2  ECD8  F024         	call	_set_led
  5886  0050E6                     l503:
  5887  0050E6                     l4492:
  5888                           
  5889                           ;newmain.c: 1090: if (c >= 0)
  5890  0050E6  BE63               	btfsc	animation6@c+1,7,c
  5891  0050E8  D016               	goto	l504
  5892                           
  5893                           ;newmain.c: 1091: set_led(Buttons[m][c]);
  5894  0050EA  5066               	movf	animation6@m,w,c
  5895  0050EC  0D08               	mullw	8
  5896  0050EE  0EF9               	movlw	low _Buttons
  5897  0050F0  6E59               	movwf	??_animation6& (0+255),c
  5898  0050F2  0E7E               	movlw	high _Buttons
  5899  0050F4  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5900  0050F6  50F3               	movf	prodl,w,c
  5901  0050F8  2659               	addwf	??_animation6,f,c
  5902  0050FA  50F4               	movf	prodh,w,c
  5903  0050FC  225A               	addwfc	??_animation6+1,f,c
  5904  0050FE  5062               	movf	animation6@c,w,c
  5905  005100  2659               	addwf	??_animation6,f,c
  5906  005102  5063               	movf	animation6@c+1,w,c
  5907  005104  225A               	addwfc	??_animation6+1,f,c
  5908  005106  C059  FFF6         	movff	??_animation6,tblptrl
  5909  00510A  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5910  00510E                     	if	0	;tblptru may be non-zero
  5911  00510E                     	endif
  5912  00510E                     	if	0	;tblptru may be non-zero
  5913  00510E                     	endif
  5914  00510E  0008               	tblrd		*
  5915  005110  50F5               	movf	tablat,w,c
  5916  005112  ECD8  F024         	call	_set_led
  5917  005116                     l504:
  5918                           
  5919                           ;newmain.c: 1092: if (d < 8)
  5920  005116  BE65               	btfsc	animation6@d+1,7,c
  5921  005118  D006               	goto	u5750
  5922  00511A  5065               	movf	animation6@d+1,w,c
  5923  00511C  E11A               	bnz	l4500
  5924  00511E  0E08               	movlw	8
  5925  005120  5C64               	subwf	animation6@d,w,c
  5926  005122  B0D8               	btfsc	status,0,c
  5927  005124  D016               	goto	l505
  5928  005126                     u5750:
  5929                           
  5930                           ;newmain.c: 1093: set_led(Buttons[m][d]);
  5931  005126  5066               	movf	animation6@m,w,c
  5932  005128  0D08               	mullw	8
  5933  00512A  0EF9               	movlw	low _Buttons
  5934  00512C  6E59               	movwf	??_animation6& (0+255),c
  5935  00512E  0E7E               	movlw	high _Buttons
  5936  005130  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5937  005132  50F3               	movf	prodl,w,c
  5938  005134  2659               	addwf	??_animation6,f,c
  5939  005136  50F4               	movf	prodh,w,c
  5940  005138  225A               	addwfc	??_animation6+1,f,c
  5941  00513A  5064               	movf	animation6@d,w,c
  5942  00513C  2659               	addwf	??_animation6,f,c
  5943  00513E  5065               	movf	animation6@d+1,w,c
  5944  005140  225A               	addwfc	??_animation6+1,f,c
  5945  005142  C059  FFF6         	movff	??_animation6,tblptrl
  5946  005146  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5947  00514A                     	if	0	;tblptru may be non-zero
  5948  00514A                     	endif
  5949  00514A                     	if	0	;tblptru may be non-zero
  5950  00514A                     	endif
  5951  00514A  0008               	tblrd		*
  5952  00514C  50F5               	movf	tablat,w,c
  5953  00514E  ECD8  F024         	call	_set_led
  5954  005152                     l505:
  5955  005152                     l4500:
  5956                           
  5957                           ;newmain.c: 1095: write_display();
  5958  005152  EC8A  F025         	call	_write_display	;wreg free
  5959                           
  5960                           ;newmain.c: 1096: _delay((unsigned long)((10)*(4000000/4000.0)));
  5961  005156  0E0D               	movlw	13
  5962  005158  6E59               	movwf	??_animation6& (0+255),c
  5963  00515A  0EFC               	movlw	252
  5964  00515C                     u6997:
  5965  00515C  2EE8               	decfsz	wreg,f,c
  5966  00515E  D7FE               	bra	u6997
  5967  005160  2E59               	decfsz	??_animation6& (0+255),f,c
  5968  005162  D7FC               	bra	u6997
  5969                           
  5970                           ;newmain.c: 1097: clr_led(Buttons[a][n]);
  5971  005164  5058               	movf	animation6@n,w,c
  5972  005166  0D01               	mullw	1
  5973  005168  C05E  F059         	movff	animation6@a,??_animation6
  5974  00516C  C05F  F05A         	movff	animation6@a+1,??_animation6+1
  5975  005170  90D8               	bcf	status,0,c
  5976  005172  3659               	rlcf	??_animation6,f,c
  5977  005174  365A               	rlcf	??_animation6+1,f,c
  5978  005176  90D8               	bcf	status,0,c
  5979  005178  3659               	rlcf	??_animation6,f,c
  5980  00517A  365A               	rlcf	??_animation6+1,f,c
  5981  00517C  90D8               	bcf	status,0,c
  5982  00517E  3659               	rlcf	??_animation6,f,c
  5983  005180  365A               	rlcf	??_animation6+1,f,c
  5984  005182  0EF9               	movlw	low _Buttons
  5985  005184  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5986  005186  0E7E               	movlw	high _Buttons
  5987  005188  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5988  00518A  5059               	movf	??_animation6,w,c
  5989  00518C  265B               	addwf	??_animation6+2,f,c
  5990  00518E  505A               	movf	??_animation6+1,w,c
  5991  005190  225C               	addwfc	??_animation6+3,f,c
  5992  005192  50F3               	movf	prodl,w,c
  5993  005194  265B               	addwf	??_animation6+2,f,c
  5994  005196  50F4               	movf	prodh,w,c
  5995  005198  225C               	addwfc	??_animation6+3,f,c
  5996  00519A  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5997  00519E  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5998  0051A2                     	if	0	;tblptru may be non-zero
  5999  0051A2                     	endif
  6000  0051A2                     	if	0	;tblptru may be non-zero
  6001  0051A2                     	endif
  6002  0051A2  0008               	tblrd		*
  6003  0051A4  50F5               	movf	tablat,w,c
  6004  0051A6  EC2F  F025         	call	_clr_led
  6005                           
  6006                           ;newmain.c: 1098: clr_led(Buttons[b][n]);
  6007  0051AA  5058               	movf	animation6@n,w,c
  6008  0051AC  0D01               	mullw	1
  6009  0051AE  C060  F059         	movff	animation6@b,??_animation6
  6010  0051B2  C061  F05A         	movff	animation6@b+1,??_animation6+1
  6011  0051B6  90D8               	bcf	status,0,c
  6012  0051B8  3659               	rlcf	??_animation6,f,c
  6013  0051BA  365A               	rlcf	??_animation6+1,f,c
  6014  0051BC  90D8               	bcf	status,0,c
  6015  0051BE  3659               	rlcf	??_animation6,f,c
  6016  0051C0  365A               	rlcf	??_animation6+1,f,c
  6017  0051C2  90D8               	bcf	status,0,c
  6018  0051C4  3659               	rlcf	??_animation6,f,c
  6019  0051C6  365A               	rlcf	??_animation6+1,f,c
  6020  0051C8  0EF9               	movlw	low _Buttons
  6021  0051CA  6E5B               	movwf	(??_animation6+2)& (0+255),c
  6022  0051CC  0E7E               	movlw	high _Buttons
  6023  0051CE  6E5C               	movwf	(??_animation6+3)& (0+255),c
  6024  0051D0  5059               	movf	??_animation6,w,c
  6025  0051D2  265B               	addwf	??_animation6+2,f,c
  6026  0051D4  505A               	movf	??_animation6+1,w,c
  6027  0051D6  225C               	addwfc	??_animation6+3,f,c
  6028  0051D8  50F3               	movf	prodl,w,c
  6029  0051DA  265B               	addwf	??_animation6+2,f,c
  6030  0051DC  50F4               	movf	prodh,w,c
  6031  0051DE  225C               	addwfc	??_animation6+3,f,c
  6032  0051E0  C05B  FFF6         	movff	??_animation6+2,tblptrl
  6033  0051E4  C05C  FFF7         	movff	??_animation6+3,tblptrh
  6034  0051E8                     	if	0	;tblptru may be non-zero
  6035  0051E8                     	endif
  6036  0051E8                     	if	0	;tblptru may be non-zero
  6037  0051E8                     	endif
  6038  0051E8  0008               	tblrd		*
  6039  0051EA  50F5               	movf	tablat,w,c
  6040  0051EC  EC2F  F025         	call	_clr_led
  6041                           
  6042                           ;newmain.c: 1099: clr_led(Buttons[m][c]);
  6043  0051F0  5066               	movf	animation6@m,w,c
  6044  0051F2  0D08               	mullw	8
  6045  0051F4  0EF9               	movlw	low _Buttons
  6046  0051F6  6E59               	movwf	??_animation6& (0+255),c
  6047  0051F8  0E7E               	movlw	high _Buttons
  6048  0051FA  6E5A               	movwf	(??_animation6+1)& (0+255),c
  6049  0051FC  50F3               	movf	prodl,w,c
  6050  0051FE  2659               	addwf	??_animation6,f,c
  6051  005200  50F4               	movf	prodh,w,c
  6052  005202  225A               	addwfc	??_animation6+1,f,c
  6053  005204  5062               	movf	animation6@c,w,c
  6054  005206  2659               	addwf	??_animation6,f,c
  6055  005208  5063               	movf	animation6@c+1,w,c
  6056  00520A  225A               	addwfc	??_animation6+1,f,c
  6057  00520C  C059  FFF6         	movff	??_animation6,tblptrl
  6058  005210  C05A  FFF7         	movff	??_animation6+1,tblptrh
  6059  005214                     	if	0	;tblptru may be non-zero
  6060  005214                     	endif
  6061  005214                     	if	0	;tblptru may be non-zero
  6062  005214                     	endif
  6063  005214  0008               	tblrd		*
  6064  005216  50F5               	movf	tablat,w,c
  6065  005218  EC2F  F025         	call	_clr_led
  6066                           
  6067                           ;newmain.c: 1100: clr_led(Buttons[m][d]);
  6068  00521C  5066               	movf	animation6@m,w,c
  6069  00521E  0D08               	mullw	8
  6070  005220  0EF9               	movlw	low _Buttons
  6071  005222  6E59               	movwf	??_animation6& (0+255),c
  6072  005224  0E7E               	movlw	high _Buttons
  6073  005226  6E5A               	movwf	(??_animation6+1)& (0+255),c
  6074  005228  50F3               	movf	prodl,w,c
  6075  00522A  2659               	addwf	??_animation6,f,c
  6076  00522C  50F4               	movf	prodh,w,c
  6077  00522E  225A               	addwfc	??_animation6+1,f,c
  6078  005230  5064               	movf	animation6@d,w,c
  6079  005232  2659               	addwf	??_animation6,f,c
  6080  005234  5065               	movf	animation6@d+1,w,c
  6081  005236  225A               	addwfc	??_animation6+1,f,c
  6082  005238  C059  FFF6         	movff	??_animation6,tblptrl
  6083  00523C  C05A  FFF7         	movff	??_animation6+1,tblptrh
  6084  005240                     	if	0	;tblptru may be non-zero
  6085  005240                     	endif
  6086  005240                     	if	0	;tblptru may be non-zero
  6087  005240                     	endif
  6088  005240  0008               	tblrd		*
  6089  005242  50F5               	movf	tablat,w,c
  6090  005244  EC2F  F025         	call	_clr_led
  6091                           
  6092                           ;newmain.c: 1101: write_display();
  6093  005248  EC8A  F025         	call	_write_display	;wreg free
  6094                           
  6095                           ;newmain.c: 1102: a--;
  6096  00524C  065E               	decf	animation6@a,f,c
  6097  00524E  A0D8               	btfss	status,0,c
  6098  005250  065F               	decf	animation6@a+1,f,c
  6099                           
  6100                           ;newmain.c: 1103: b++;
  6101  005252  4A60               	infsnz	animation6@b,f,c
  6102  005254  2A61               	incf	animation6@b+1,f,c
  6103                           
  6104                           ;newmain.c: 1104: c--;
  6105  005256  0662               	decf	animation6@c,f,c
  6106  005258  A0D8               	btfss	status,0,c
  6107  00525A  0663               	decf	animation6@c+1,f,c
  6108                           
  6109                           ;newmain.c: 1105: d++;
  6110  00525C  4A64               	infsnz	animation6@d,f,c
  6111  00525E  2A65               	incf	animation6@d+1,f,c
  6112  005260  2A5D               	incf	animation6@x,f,c
  6113  005262  D6ED               	goto	l4480
  6114  005264                     __end_of_animation6:
  6115                           	opt stack 0
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           postinc0	equ	0xFEE
  6123                           wreg	equ	0xFE8
  6124                           postinc1	equ	0xFE6
  6125                           fsr1h	equ	0xFE2
  6126                           fsr1l	equ	0xFE1
  6127                           indf2	equ	0xFDF
  6128                           postinc2	equ	0xFDE
  6129                           postdec2	equ	0xFDD
  6130                           fsr2h	equ	0xFDA
  6131                           fsr2l	equ	0xFD9
  6132                           status	equ	0xFD8
  6133                           
  6134 ;; *************** function _animation5 *****************
  6135 ;; Defined at:
  6136 ;;		line 1002 in file "newmain.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  m               1    wreg     unsigned char 
  6139 ;;  n               1   21[COMRAM] unsigned char 
  6140 ;;  h               1   22[COMRAM] unsigned char 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  m               1   25[COMRAM] unsigned char 
  6143 ;;  x               1   28[COMRAM] unsigned char 
  6144 ;;  i               1   27[COMRAM] unsigned char 
  6145 ;;  j               1   26[COMRAM] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      void 
  6148 ;; Registers used:
  6149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6155 ;;      Params:         2       0       0       0       0       0       0
  6156 ;;      Locals:         4       0       0       0       0       0       0
  6157 ;;      Temps:          2       0       0       0       0       0       0
  6158 ;;      Totals:         8       0       0       0       0       0       0
  6159 ;;Total ram usage:        8 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:    4
  6162 ;; This function calls:
  6163 ;;		_clr_led
  6164 ;;		_set_led
  6165 ;;		_write_display
  6166 ;; This function is called by:
  6167 ;;		_main
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text11
  6172  005264                     __ptext11:
  6173                           	opt stack 0
  6174  005264                     _animation5:
  6175                           	opt stack 26
  6176                           
  6177                           ;incstack = 0
  6178                           ;animation5@m stored from wreg
  6179  005264  6E5C               	movwf	animation5@m,c
  6180                           
  6181                           ;newmain.c: 1003: uint8_t i = 0, j = 0, x = 0;
  6182  005266  0E00               	movlw	0
  6183  005268  6E5E               	movwf	animation5@i,c
  6184  00526A  0E00               	movlw	0
  6185  00526C  6E5D               	movwf	animation5@j,c
  6186  00526E  0E00               	movlw	0
  6187  005270  6E5F               	movwf	animation5@x,c
  6188                           
  6189                           ;newmain.c: 1005: if (m == 0) {
  6190  005272  505C               	movf	animation5@m,w,c
  6191  005274  A4D8               	btfss	status,2,c
  6192  005276  D05C               	goto	l462
  6193                           
  6194                           ;newmain.c: 1006: for (i = 0; i < 16; i++) {
  6195  005278  0E00               	movlw	0
  6196  00527A  6E5E               	movwf	animation5@i,c
  6197  00527C                     l4318:
  6198  00527C  0E0F               	movlw	15
  6199  00527E  645E               	cpfsgt	animation5@i,c
  6200  005280  D001               	goto	l463
  6201  005282  0012               	return	
  6202  005284                     l463:
  6203                           
  6204                           ;newmain.c: 1007: if (show5[i][0] == n) {
  6205  005284  505E               	movf	animation5@i,w,c
  6206  005286  0D04               	mullw	4
  6207  005288  0E39               	movlw	low _show5
  6208  00528A  24F3               	addwf	prodl,w,c
  6209  00528C  6EF6               	movwf	tblptrl,c
  6210  00528E  0E7E               	movlw	high _show5
  6211  005290  20F4               	addwfc	prodh,w,c
  6212  005292  6EF7               	movwf	tblptrh,c
  6213  005294                     	if	0	;There are less than 3 active tblptr bytes
  6214  005294                     	endif
  6215  005294  0008               	tblrd		*
  6216  005296  50F5               	movf	tablat,w,c
  6217  005298  1858               	xorwf	animation5@n,w,c
  6218  00529A  A4D8               	btfss	status,2,c
  6219  00529C  D047               	goto	l465
  6220                           
  6221                           ;newmain.c: 1008: for (j = 0; j < 4; j++) {
  6222  00529E  0E00               	movlw	0
  6223  0052A0  6E5D               	movwf	animation5@j,c
  6224  0052A2                     l4326:
  6225  0052A2  0E03               	movlw	3
  6226  0052A4  645D               	cpfsgt	animation5@j,c
  6227  0052A6  D001               	goto	l466
  6228  0052A8  D03E               	goto	u5480
  6229  0052AA                     l466:
  6230                           
  6231                           ;newmain.c: 1009: x = show5[i][j];
  6232  0052AA  505E               	movf	animation5@i,w,c
  6233  0052AC  0D04               	mullw	4
  6234  0052AE  0E39               	movlw	low _show5
  6235  0052B0  6E5A               	movwf	??_animation5& (0+255),c
  6236  0052B2  0E7E               	movlw	high _show5
  6237  0052B4  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6238  0052B6  50F3               	movf	prodl,w,c
  6239  0052B8  265A               	addwf	??_animation5,f,c
  6240  0052BA  50F4               	movf	prodh,w,c
  6241  0052BC  225B               	addwfc	??_animation5+1,f,c
  6242  0052BE  505D               	movf	animation5@j,w,c
  6243  0052C0  0D01               	mullw	1
  6244  0052C2  50F3               	movf	prodl,w,c
  6245  0052C4  265A               	addwf	??_animation5,f,c
  6246  0052C6  50F4               	movf	prodh,w,c
  6247  0052C8  225B               	addwfc	??_animation5+1,f,c
  6248  0052CA  C05A  FFF6         	movff	??_animation5,tblptrl
  6249  0052CE  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6250  0052D2                     	if	0	;tblptru may be non-zero
  6251  0052D2                     	endif
  6252  0052D2                     	if	0	;tblptru may be non-zero
  6253  0052D2                     	endif
  6254  0052D2  0008               	tblrd		*
  6255  0052D4  CFF5 F05F          	movff	tablat,animation5@x
  6256                           
  6257                           ;newmain.c: 1010: if (temp[x] == 0) {
  6258  0052D8  505F               	movf	animation5@x,w,c
  6259  0052DA  0D01               	mullw	1
  6260  0052DC  0E01               	movlw	low _temp
  6261  0052DE  24F3               	addwf	prodl,w,c
  6262  0052E0  6ED9               	movwf	fsr2l,c
  6263  0052E2  0E00               	movlw	high _temp
  6264  0052E4  20F4               	addwfc	prodh,w,c
  6265  0052E6  6EDA               	movwf	fsr2h,c
  6266  0052E8  50DF               	movf	indf2,w,c
  6267  0052EA  A4D8               	btfss	status,2,c
  6268  0052EC  D00D               	goto	l468
  6269                           
  6270                           ;newmain.c: 1011: set_led(x);
  6271  0052EE  505F               	movf	animation5@x,w,c
  6272  0052F0  ECD8  F024         	call	_set_led
  6273                           
  6274                           ;newmain.c: 1012: temp[x] = 1;
  6275  0052F4  505F               	movf	animation5@x,w,c
  6276  0052F6  0D01               	mullw	1
  6277  0052F8  0E01               	movlw	low _temp
  6278  0052FA  24F3               	addwf	prodl,w,c
  6279  0052FC  6ED9               	movwf	fsr2l,c
  6280  0052FE  0E00               	movlw	high _temp
  6281  005300  20F4               	addwfc	prodh,w,c
  6282  005302  6EDA               	movwf	fsr2h,c
  6283  005304  0E01               	movlw	1
  6284  005306  D00C               	goto	L8
  6285  005308                     l468:
  6286                           
  6287                           ;newmain.c: 1014: clr_led(x);
  6288  005308  505F               	movf	animation5@x,w,c
  6289  00530A  EC2F  F025         	call	_clr_led
  6290                           
  6291                           ;newmain.c: 1015: temp[x] = 0;
  6292  00530E  505F               	movf	animation5@x,w,c
  6293  005310  0D01               	mullw	1
  6294  005312  0E01               	movlw	low _temp
  6295  005314  24F3               	addwf	prodl,w,c
  6296  005316  6ED9               	movwf	fsr2l,c
  6297  005318  0E00               	movlw	high _temp
  6298  00531A  20F4               	addwfc	prodh,w,c
  6299  00531C  6EDA               	movwf	fsr2h,c
  6300  00531E  0E00               	movlw	0
  6301  005320                     L8:
  6302  005320  6EDF               	movwf	indf2,c
  6303  005322  2A5D               	incf	animation5@j,f,c
  6304  005324  D7BE               	goto	l4326
  6305  005326                     u5480:
  6306                           
  6307                           ;newmain.c: 1016: }
  6308                           ;newmain.c: 1017: }
  6309                           ;newmain.c: 1018: write_display();
  6310  005326  EC8A  F025         	call	_write_display	;wreg free
  6311                           
  6312                           ;newmain.c: 1019: break;
  6313  00532A  0012               	return	
  6314  00532C                     l465:
  6315  00532C  2A5E               	incf	animation5@i,f,c
  6316  00532E  D7A6               	goto	l4318
  6317  005330                     l462:
  6318  005330  045C               	decf	animation5@m,w,c
  6319  005332  A4D8               	btfss	status,2,c
  6320  005334  D05D               	goto	l471
  6321                           
  6322                           ;newmain.c: 1023: for (i = 0; i < 16; i++) {
  6323  005336  0E00               	movlw	0
  6324  005338  6E5E               	movwf	animation5@i,c
  6325  00533A                     l4356:
  6326  00533A  0E0F               	movlw	15
  6327  00533C  645E               	cpfsgt	animation5@i,c
  6328  00533E  D001               	goto	l472
  6329  005340  0012               	return	
  6330  005342                     l472:
  6331                           
  6332                           ;newmain.c: 1024: if (show5[i][0] == n) {
  6333  005342  505E               	movf	animation5@i,w,c
  6334  005344  0D04               	mullw	4
  6335  005346  0E39               	movlw	low _show5
  6336  005348  24F3               	addwf	prodl,w,c
  6337  00534A  6EF6               	movwf	tblptrl,c
  6338  00534C  0E7E               	movlw	high _show5
  6339  00534E  20F4               	addwfc	prodh,w,c
  6340  005350  6EF7               	movwf	tblptrh,c
  6341  005352                     	if	0	;There are less than 3 active tblptr bytes
  6342  005352                     	endif
  6343  005352  0008               	tblrd		*
  6344  005354  50F5               	movf	tablat,w,c
  6345  005356  1858               	xorwf	animation5@n,w,c
  6346  005358  A4D8               	btfss	status,2,c
  6347  00535A  D048               	goto	l474
  6348                           
  6349                           ;newmain.c: 1025: for (j = 0; j < 4; j++) {
  6350  00535C  0E00               	movlw	0
  6351  00535E  6E5D               	movwf	animation5@j,c
  6352  005360                     l4364:
  6353  005360  0E03               	movlw	3
  6354  005362  645D               	cpfsgt	animation5@j,c
  6355  005364  D001               	goto	l475
  6356  005366  D03F               	goto	u5550
  6357  005368                     l475:
  6358                           
  6359                           ;newmain.c: 1026: x = show5[i][j] + 16;
  6360  005368  505E               	movf	animation5@i,w,c
  6361  00536A  0D04               	mullw	4
  6362  00536C  0E39               	movlw	low _show5
  6363  00536E  6E5A               	movwf	??_animation5& (0+255),c
  6364  005370  0E7E               	movlw	high _show5
  6365  005372  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6366  005374  50F3               	movf	prodl,w,c
  6367  005376  265A               	addwf	??_animation5,f,c
  6368  005378  50F4               	movf	prodh,w,c
  6369  00537A  225B               	addwfc	??_animation5+1,f,c
  6370  00537C  505D               	movf	animation5@j,w,c
  6371  00537E  0D01               	mullw	1
  6372  005380  50F3               	movf	prodl,w,c
  6373  005382  265A               	addwf	??_animation5,f,c
  6374  005384  50F4               	movf	prodh,w,c
  6375  005386  225B               	addwfc	??_animation5+1,f,c
  6376  005388  C05A  FFF6         	movff	??_animation5,tblptrl
  6377  00538C  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6378  005390                     	if	0	;tblptru may be non-zero
  6379  005390                     	endif
  6380  005390                     	if	0	;tblptru may be non-zero
  6381  005390                     	endif
  6382  005390  0008               	tblrd		*
  6383  005392  50F5               	movf	tablat,w,c
  6384  005394  0F10               	addlw	16
  6385  005396  6E5F               	movwf	animation5@x,c
  6386                           
  6387                           ;newmain.c: 1027: if (temp[x] == 0) {
  6388  005398  505F               	movf	animation5@x,w,c
  6389  00539A  0D01               	mullw	1
  6390  00539C  0E01               	movlw	low _temp
  6391  00539E  24F3               	addwf	prodl,w,c
  6392  0053A0  6ED9               	movwf	fsr2l,c
  6393  0053A2  0E00               	movlw	high _temp
  6394  0053A4  20F4               	addwfc	prodh,w,c
  6395  0053A6  6EDA               	movwf	fsr2h,c
  6396  0053A8  50DF               	movf	indf2,w,c
  6397  0053AA  A4D8               	btfss	status,2,c
  6398  0053AC  D00D               	goto	l477
  6399                           
  6400                           ;newmain.c: 1028: set_led(x);
  6401  0053AE  505F               	movf	animation5@x,w,c
  6402  0053B0  ECD8  F024         	call	_set_led
  6403                           
  6404                           ;newmain.c: 1029: temp[x] = 1;
  6405  0053B4  505F               	movf	animation5@x,w,c
  6406  0053B6  0D01               	mullw	1
  6407  0053B8  0E01               	movlw	low _temp
  6408  0053BA  24F3               	addwf	prodl,w,c
  6409  0053BC  6ED9               	movwf	fsr2l,c
  6410  0053BE  0E00               	movlw	high _temp
  6411  0053C0  20F4               	addwfc	prodh,w,c
  6412  0053C2  6EDA               	movwf	fsr2h,c
  6413  0053C4  0E01               	movlw	1
  6414  0053C6  D00C               	goto	L9
  6415  0053C8                     l477:
  6416                           
  6417                           ;newmain.c: 1031: clr_led(x);
  6418  0053C8  505F               	movf	animation5@x,w,c
  6419  0053CA  EC2F  F025         	call	_clr_led
  6420                           
  6421                           ;newmain.c: 1032: temp[x] = 0;
  6422  0053CE  505F               	movf	animation5@x,w,c
  6423  0053D0  0D01               	mullw	1
  6424  0053D2  0E01               	movlw	low _temp
  6425  0053D4  24F3               	addwf	prodl,w,c
  6426  0053D6  6ED9               	movwf	fsr2l,c
  6427  0053D8  0E00               	movlw	high _temp
  6428  0053DA  20F4               	addwfc	prodh,w,c
  6429  0053DC  6EDA               	movwf	fsr2h,c
  6430  0053DE  0E00               	movlw	0
  6431  0053E0                     L9:
  6432  0053E0  6EDF               	movwf	indf2,c
  6433  0053E2  2A5D               	incf	animation5@j,f,c
  6434  0053E4  D7BD               	goto	l4364
  6435  0053E6                     u5550:
  6436                           
  6437                           ;newmain.c: 1033: }
  6438                           ;newmain.c: 1034: }
  6439                           ;newmain.c: 1035: write_display();
  6440  0053E6  EC8A  F025         	call	_write_display	;wreg free
  6441                           
  6442                           ;newmain.c: 1036: break;
  6443  0053EA  0012               	return	
  6444  0053EC                     l474:
  6445  0053EC  2A5E               	incf	animation5@i,f,c
  6446  0053EE  D7A5               	goto	l4356
  6447  0053F0                     l471:
  6448  0053F0  0E02               	movlw	2
  6449  0053F2  185C               	xorwf	animation5@m,w,c
  6450  0053F4  A4D8               	btfss	status,2,c
  6451  0053F6  D05D               	goto	l480
  6452                           
  6453                           ;newmain.c: 1040: for (i = 0; i < 16; i++) {
  6454  0053F8  0E00               	movlw	0
  6455  0053FA  6E5E               	movwf	animation5@i,c
  6456  0053FC                     l4394:
  6457  0053FC  0E0F               	movlw	15
  6458  0053FE  645E               	cpfsgt	animation5@i,c
  6459  005400  D001               	goto	l481
  6460  005402  0012               	return	
  6461  005404                     l481:
  6462                           
  6463                           ;newmain.c: 1041: if (show5[i][0] == n) {
  6464  005404  505E               	movf	animation5@i,w,c
  6465  005406  0D04               	mullw	4
  6466  005408  0E39               	movlw	low _show5
  6467  00540A  24F3               	addwf	prodl,w,c
  6468  00540C  6EF6               	movwf	tblptrl,c
  6469  00540E  0E7E               	movlw	high _show5
  6470  005410  20F4               	addwfc	prodh,w,c
  6471  005412  6EF7               	movwf	tblptrh,c
  6472  005414                     	if	0	;There are less than 3 active tblptr bytes
  6473  005414                     	endif
  6474  005414  0008               	tblrd		*
  6475  005416  50F5               	movf	tablat,w,c
  6476  005418  1858               	xorwf	animation5@n,w,c
  6477  00541A  A4D8               	btfss	status,2,c
  6478  00541C  D048               	goto	l483
  6479                           
  6480                           ;newmain.c: 1042: for (j = 0; j < 4; j++) {
  6481  00541E  0E00               	movlw	0
  6482  005420  6E5D               	movwf	animation5@j,c
  6483  005422                     l4402:
  6484  005422  0E03               	movlw	3
  6485  005424  645D               	cpfsgt	animation5@j,c
  6486  005426  D001               	goto	l484
  6487  005428  D03F               	goto	u5620
  6488  00542A                     l484:
  6489                           
  6490                           ;newmain.c: 1043: x = show5[i][j] + 32;
  6491  00542A  505E               	movf	animation5@i,w,c
  6492  00542C  0D04               	mullw	4
  6493  00542E  0E39               	movlw	low _show5
  6494  005430  6E5A               	movwf	??_animation5& (0+255),c
  6495  005432  0E7E               	movlw	high _show5
  6496  005434  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6497  005436  50F3               	movf	prodl,w,c
  6498  005438  265A               	addwf	??_animation5,f,c
  6499  00543A  50F4               	movf	prodh,w,c
  6500  00543C  225B               	addwfc	??_animation5+1,f,c
  6501  00543E  505D               	movf	animation5@j,w,c
  6502  005440  0D01               	mullw	1
  6503  005442  50F3               	movf	prodl,w,c
  6504  005444  265A               	addwf	??_animation5,f,c
  6505  005446  50F4               	movf	prodh,w,c
  6506  005448  225B               	addwfc	??_animation5+1,f,c
  6507  00544A  C05A  FFF6         	movff	??_animation5,tblptrl
  6508  00544E  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6509  005452                     	if	0	;tblptru may be non-zero
  6510  005452                     	endif
  6511  005452                     	if	0	;tblptru may be non-zero
  6512  005452                     	endif
  6513  005452  0008               	tblrd		*
  6514  005454  50F5               	movf	tablat,w,c
  6515  005456  0F20               	addlw	32
  6516  005458  6E5F               	movwf	animation5@x,c
  6517                           
  6518                           ;newmain.c: 1044: if (temp[x] == 0) {
  6519  00545A  505F               	movf	animation5@x,w,c
  6520  00545C  0D01               	mullw	1
  6521  00545E  0E01               	movlw	low _temp
  6522  005460  24F3               	addwf	prodl,w,c
  6523  005462  6ED9               	movwf	fsr2l,c
  6524  005464  0E00               	movlw	high _temp
  6525  005466  20F4               	addwfc	prodh,w,c
  6526  005468  6EDA               	movwf	fsr2h,c
  6527  00546A  50DF               	movf	indf2,w,c
  6528  00546C  A4D8               	btfss	status,2,c
  6529  00546E  D00D               	goto	l486
  6530                           
  6531                           ;newmain.c: 1045: set_led(x);
  6532  005470  505F               	movf	animation5@x,w,c
  6533  005472  ECD8  F024         	call	_set_led
  6534                           
  6535                           ;newmain.c: 1046: temp[x] = 1;
  6536  005476  505F               	movf	animation5@x,w,c
  6537  005478  0D01               	mullw	1
  6538  00547A  0E01               	movlw	low _temp
  6539  00547C  24F3               	addwf	prodl,w,c
  6540  00547E  6ED9               	movwf	fsr2l,c
  6541  005480  0E00               	movlw	high _temp
  6542  005482  20F4               	addwfc	prodh,w,c
  6543  005484  6EDA               	movwf	fsr2h,c
  6544  005486  0E01               	movlw	1
  6545  005488  D00C               	goto	L10
  6546  00548A                     l486:
  6547                           
  6548                           ;newmain.c: 1048: clr_led(x);
  6549  00548A  505F               	movf	animation5@x,w,c
  6550  00548C  EC2F  F025         	call	_clr_led
  6551                           
  6552                           ;newmain.c: 1049: temp[x] = 0;
  6553  005490  505F               	movf	animation5@x,w,c
  6554  005492  0D01               	mullw	1
  6555  005494  0E01               	movlw	low _temp
  6556  005496  24F3               	addwf	prodl,w,c
  6557  005498  6ED9               	movwf	fsr2l,c
  6558  00549A  0E00               	movlw	high _temp
  6559  00549C  20F4               	addwfc	prodh,w,c
  6560  00549E  6EDA               	movwf	fsr2h,c
  6561  0054A0  0E00               	movlw	0
  6562  0054A2                     L10:
  6563  0054A2  6EDF               	movwf	indf2,c
  6564  0054A4  2A5D               	incf	animation5@j,f,c
  6565  0054A6  D7BD               	goto	l4402
  6566  0054A8                     u5620:
  6567                           
  6568                           ;newmain.c: 1050: }
  6569                           ;newmain.c: 1051: }
  6570                           ;newmain.c: 1052: write_display();
  6571  0054A8  EC8A  F025         	call	_write_display	;wreg free
  6572                           
  6573                           ;newmain.c: 1053: break;
  6574  0054AC  0012               	return	
  6575  0054AE                     l483:
  6576  0054AE  2A5E               	incf	animation5@i,f,c
  6577  0054B0  D7A5               	goto	l4394
  6578  0054B2                     l480:
  6579  0054B2  0E03               	movlw	3
  6580  0054B4  185C               	xorwf	animation5@m,w,c
  6581  0054B6  A4D8               	btfss	status,2,c
  6582  0054B8  0012               	return	
  6583                           
  6584                           ;newmain.c: 1057: for (i = 0; i < 16; i++) {
  6585  0054BA  0E00               	movlw	0
  6586  0054BC  6E5E               	movwf	animation5@i,c
  6587  0054BE                     l4432:
  6588  0054BE  0E0F               	movlw	15
  6589  0054C0  645E               	cpfsgt	animation5@i,c
  6590  0054C2  D001               	goto	l490
  6591  0054C4  0012               	return	
  6592  0054C6                     l490:
  6593                           
  6594                           ;newmain.c: 1058: if (show5[i][0] == n) {
  6595  0054C6  505E               	movf	animation5@i,w,c
  6596  0054C8  0D04               	mullw	4
  6597  0054CA  0E39               	movlw	low _show5
  6598  0054CC  24F3               	addwf	prodl,w,c
  6599  0054CE  6EF6               	movwf	tblptrl,c
  6600  0054D0  0E7E               	movlw	high _show5
  6601  0054D2  20F4               	addwfc	prodh,w,c
  6602  0054D4  6EF7               	movwf	tblptrh,c
  6603  0054D6                     	if	0	;There are less than 3 active tblptr bytes
  6604  0054D6                     	endif
  6605  0054D6  0008               	tblrd		*
  6606  0054D8  50F5               	movf	tablat,w,c
  6607  0054DA  1858               	xorwf	animation5@n,w,c
  6608  0054DC  A4D8               	btfss	status,2,c
  6609  0054DE  D048               	goto	l492
  6610                           
  6611                           ;newmain.c: 1059: for (j = 0; j < 4; j++) {
  6612  0054E0  0E00               	movlw	0
  6613  0054E2  6E5D               	movwf	animation5@j,c
  6614  0054E4                     l4440:
  6615  0054E4  0E03               	movlw	3
  6616  0054E6  645D               	cpfsgt	animation5@j,c
  6617  0054E8  D001               	goto	l493
  6618  0054EA  D03F               	goto	u5690
  6619  0054EC                     l493:
  6620                           
  6621                           ;newmain.c: 1060: x = show5[i][j] + 48;
  6622  0054EC  505E               	movf	animation5@i,w,c
  6623  0054EE  0D04               	mullw	4
  6624  0054F0  0E39               	movlw	low _show5
  6625  0054F2  6E5A               	movwf	??_animation5& (0+255),c
  6626  0054F4  0E7E               	movlw	high _show5
  6627  0054F6  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6628  0054F8  50F3               	movf	prodl,w,c
  6629  0054FA  265A               	addwf	??_animation5,f,c
  6630  0054FC  50F4               	movf	prodh,w,c
  6631  0054FE  225B               	addwfc	??_animation5+1,f,c
  6632  005500  505D               	movf	animation5@j,w,c
  6633  005502  0D01               	mullw	1
  6634  005504  50F3               	movf	prodl,w,c
  6635  005506  265A               	addwf	??_animation5,f,c
  6636  005508  50F4               	movf	prodh,w,c
  6637  00550A  225B               	addwfc	??_animation5+1,f,c
  6638  00550C  C05A  FFF6         	movff	??_animation5,tblptrl
  6639  005510  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6640  005514                     	if	0	;tblptru may be non-zero
  6641  005514                     	endif
  6642  005514                     	if	0	;tblptru may be non-zero
  6643  005514                     	endif
  6644  005514  0008               	tblrd		*
  6645  005516  50F5               	movf	tablat,w,c
  6646  005518  0F30               	addlw	48
  6647  00551A  6E5F               	movwf	animation5@x,c
  6648                           
  6649                           ;newmain.c: 1061: if (temp[x] == 0) {
  6650  00551C  505F               	movf	animation5@x,w,c
  6651  00551E  0D01               	mullw	1
  6652  005520  0E01               	movlw	low _temp
  6653  005522  24F3               	addwf	prodl,w,c
  6654  005524  6ED9               	movwf	fsr2l,c
  6655  005526  0E00               	movlw	high _temp
  6656  005528  20F4               	addwfc	prodh,w,c
  6657  00552A  6EDA               	movwf	fsr2h,c
  6658  00552C  50DF               	movf	indf2,w,c
  6659  00552E  A4D8               	btfss	status,2,c
  6660  005530  D00D               	goto	l495
  6661                           
  6662                           ;newmain.c: 1062: set_led(x);
  6663  005532  505F               	movf	animation5@x,w,c
  6664  005534  ECD8  F024         	call	_set_led
  6665                           
  6666                           ;newmain.c: 1063: temp[x] = 1;
  6667  005538  505F               	movf	animation5@x,w,c
  6668  00553A  0D01               	mullw	1
  6669  00553C  0E01               	movlw	low _temp
  6670  00553E  24F3               	addwf	prodl,w,c
  6671  005540  6ED9               	movwf	fsr2l,c
  6672  005542  0E00               	movlw	high _temp
  6673  005544  20F4               	addwfc	prodh,w,c
  6674  005546  6EDA               	movwf	fsr2h,c
  6675  005548  0E01               	movlw	1
  6676  00554A  D00C               	goto	L11
  6677  00554C                     l495:
  6678                           
  6679                           ;newmain.c: 1065: clr_led(x);
  6680  00554C  505F               	movf	animation5@x,w,c
  6681  00554E  EC2F  F025         	call	_clr_led
  6682                           
  6683                           ;newmain.c: 1066: temp[x] = 0;
  6684  005552  505F               	movf	animation5@x,w,c
  6685  005554  0D01               	mullw	1
  6686  005556  0E01               	movlw	low _temp
  6687  005558  24F3               	addwf	prodl,w,c
  6688  00555A  6ED9               	movwf	fsr2l,c
  6689  00555C  0E00               	movlw	high _temp
  6690  00555E  20F4               	addwfc	prodh,w,c
  6691  005560  6EDA               	movwf	fsr2h,c
  6692  005562  0E00               	movlw	0
  6693  005564                     L11:
  6694  005564  6EDF               	movwf	indf2,c
  6695  005566  2A5D               	incf	animation5@j,f,c
  6696  005568  D7BD               	goto	l4440
  6697  00556A                     u5690:
  6698                           
  6699                           ;newmain.c: 1067: }
  6700                           ;newmain.c: 1068: }
  6701                           ;newmain.c: 1069: write_display();
  6702  00556A  EC8A  F025         	call	_write_display	;wreg free
  6703                           
  6704                           ;newmain.c: 1070: break;
  6705  00556E  0012               	return	
  6706  005570                     l492:
  6707  005570  2A5E               	incf	animation5@i,f,c
  6708  005572  D7A5               	goto	l4432
  6709  005574                     __end_of_animation5:
  6710                           	opt stack 0
  6711                           tblptru	equ	0xFF8
  6712                           tblptrh	equ	0xFF7
  6713                           tblptrl	equ	0xFF6
  6714                           tablat	equ	0xFF5
  6715                           prodh	equ	0xFF4
  6716                           prodl	equ	0xFF3
  6717                           postinc0	equ	0xFEE
  6718                           wreg	equ	0xFE8
  6719                           postinc1	equ	0xFE6
  6720                           fsr1h	equ	0xFE2
  6721                           fsr1l	equ	0xFE1
  6722                           indf2	equ	0xFDF
  6723                           postinc2	equ	0xFDE
  6724                           postdec2	equ	0xFDD
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _animation4 *****************
  6730 ;; Defined at:
  6731 ;;		line 914 in file "newmain.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  m               1    wreg     unsigned char 
  6734 ;;  h               1   21[COMRAM] unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  m               1   24[COMRAM] unsigned char 
  6737 ;;  j               1   26[COMRAM] unsigned char 
  6738 ;;  i               1   25[COMRAM] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6748 ;;      Params:         1       0       0       0       0       0       0
  6749 ;;      Locals:         3       0       0       0       0       0       0
  6750 ;;      Temps:          2       0       0       0       0       0       0
  6751 ;;      Totals:         6       0       0       0       0       0       0
  6752 ;;Total ram usage:        6 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    4
  6755 ;; This function calls:
  6756 ;;		_clr_led
  6757 ;;		_set_led
  6758 ;;		_write_display
  6759 ;; This function is called by:
  6760 ;;		_main
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text12
  6765  00594E                     __ptext12:
  6766                           	opt stack 0
  6767  00594E                     _animation4:
  6768                           	opt stack 26
  6769                           
  6770                           ;incstack = 0
  6771                           ;animation4@m stored from wreg
  6772  00594E  6E5B               	movwf	animation4@m,c
  6773                           
  6774                           ;newmain.c: 915: uint8_t i = 0, j = 0;
  6775  005950  0E00               	movlw	0
  6776  005952  6E5C               	movwf	animation4@i,c
  6777  005954  0E00               	movlw	0
  6778  005956  6E5D               	movwf	animation4@j,c
  6779                           
  6780                           ;newmain.c: 916: set_led(h);
  6781  005958  5058               	movf	animation4@h,w,c
  6782  00595A  ECD8  F024         	call	_set_led
  6783                           
  6784                           ;newmain.c: 917: write_display();
  6785  00595E  EC8A  F025         	call	_write_display	;wreg free
  6786                           
  6787                           ;newmain.c: 918: if (m == 0) {
  6788  005962  505B               	movf	animation4@m,w,c
  6789  005964  A4D8               	btfss	status,2,c
  6790  005966  D086               	goto	l410
  6791                           
  6792                           ;newmain.c: 919: for (i = 0; i < 8; i++) {
  6793  005968  0E00               	movlw	0
  6794  00596A  6E5C               	movwf	animation4@i,c
  6795  00596C                     l4128:
  6796  00596C  0E07               	movlw	7
  6797  00596E  645C               	cpfsgt	animation4@i,c
  6798  005970  D001               	goto	l411
  6799  005972  D21D               	goto	u5420
  6800  005974                     l411:
  6801                           
  6802                           ;newmain.c: 920: for (j = 0; j < 8; j++){
  6803  005974  0E00               	movlw	0
  6804  005976  6E5D               	movwf	animation4@j,c
  6805  005978                     l4134:
  6806  005978  0E07               	movlw	7
  6807  00597A  645D               	cpfsgt	animation4@j,c
  6808  00597C  D001               	goto	l413
  6809  00597E  D033               	goto	u5110
  6810  005980                     l413:
  6811                           
  6812                           ;newmain.c: 921: if (show4_1[i][j] != 100)
  6813  005980  505C               	movf	animation4@i,w,c
  6814  005982  0D08               	mullw	8
  6815  005984  0EB9               	movlw	low _show4_1
  6816  005986  6E59               	movwf	??_animation4& (0+255),c
  6817  005988  0E7E               	movlw	high _show4_1
  6818  00598A  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6819  00598C  50F3               	movf	prodl,w,c
  6820  00598E  2659               	addwf	??_animation4,f,c
  6821  005990  50F4               	movf	prodh,w,c
  6822  005992  225A               	addwfc	??_animation4+1,f,c
  6823  005994  505D               	movf	animation4@j,w,c
  6824  005996  0D01               	mullw	1
  6825  005998  50F3               	movf	prodl,w,c
  6826  00599A  2659               	addwf	??_animation4,f,c
  6827  00599C  50F4               	movf	prodh,w,c
  6828  00599E  225A               	addwfc	??_animation4+1,f,c
  6829  0059A0  C059  FFF6         	movff	??_animation4,tblptrl
  6830  0059A4  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6831  0059A8                     	if	0	;tblptru may be non-zero
  6832  0059A8                     	endif
  6833  0059A8                     	if	0	;tblptru may be non-zero
  6834  0059A8                     	endif
  6835  0059A8  0008               	tblrd		*
  6836  0059AA  50F5               	movf	tablat,w,c
  6837  0059AC  0A64               	xorlw	100
  6838  0059AE  B4D8               	btfsc	status,2,c
  6839  0059B0  D01A               	goto	u5110
  6840                           
  6841                           ;newmain.c: 922: set_led(show4_1[i][j]);
  6842  0059B2  505C               	movf	animation4@i,w,c
  6843  0059B4  0D08               	mullw	8
  6844  0059B6  0EB9               	movlw	low _show4_1
  6845  0059B8  6E59               	movwf	??_animation4& (0+255),c
  6846  0059BA  0E7E               	movlw	high _show4_1
  6847  0059BC  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6848  0059BE  50F3               	movf	prodl,w,c
  6849  0059C0  2659               	addwf	??_animation4,f,c
  6850  0059C2  50F4               	movf	prodh,w,c
  6851  0059C4  225A               	addwfc	??_animation4+1,f,c
  6852  0059C6  505D               	movf	animation4@j,w,c
  6853  0059C8  0D01               	mullw	1
  6854  0059CA  50F3               	movf	prodl,w,c
  6855  0059CC  2659               	addwf	??_animation4,f,c
  6856  0059CE  50F4               	movf	prodh,w,c
  6857  0059D0  225A               	addwfc	??_animation4+1,f,c
  6858  0059D2  C059  FFF6         	movff	??_animation4,tblptrl
  6859  0059D6  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6860  0059DA                     	if	0	;tblptru may be non-zero
  6861  0059DA                     	endif
  6862  0059DA                     	if	0	;tblptru may be non-zero
  6863  0059DA                     	endif
  6864  0059DA  0008               	tblrd		*
  6865  0059DC  50F5               	movf	tablat,w,c
  6866  0059DE  ECD8  F024         	call	_set_led
  6867                           
  6868                           ;newmain.c: 923: else
  6869                           ;newmain.c: 924: break;
  6870  0059E2  2A5D               	incf	animation4@j,f,c
  6871  0059E4  D7C9               	goto	l4134
  6872  0059E6                     u5110:
  6873                           
  6874                           ;newmain.c: 925: }
  6875                           ;newmain.c: 926: write_display();
  6876  0059E6  EC8A  F025         	call	_write_display	;wreg free
  6877                           
  6878                           ;newmain.c: 927: _delay((unsigned long)((5)*(4000000/4000.0)));
  6879  0059EA  0E07               	movlw	7
  6880  0059EC  6E59               	movwf	??_animation4& (0+255),c
  6881  0059EE  0E7D               	movlw	125
  6882  0059F0                     u7007:
  6883  0059F0  2EE8               	decfsz	wreg,f,c
  6884  0059F2  D7FE               	bra	u7007
  6885  0059F4  2E59               	decfsz	??_animation4& (0+255),f,c
  6886  0059F6  D7FC               	bra	u7007
  6887  0059F8  F000               	nop	
  6888                           
  6889                           ;newmain.c: 929: for (j = 0; j < 8; j++){
  6890  0059FA  0E00               	movlw	0
  6891  0059FC  6E5D               	movwf	animation4@j,c
  6892  0059FE                     l4152:
  6893  0059FE  0E07               	movlw	7
  6894  005A00  645D               	cpfsgt	animation4@j,c
  6895  005A02  D001               	goto	l417
  6896  005A04  D033               	goto	u5140
  6897  005A06                     l417:
  6898                           
  6899                           ;newmain.c: 930: if (show4_1[i][j] != 100)
  6900  005A06  505C               	movf	animation4@i,w,c
  6901  005A08  0D08               	mullw	8
  6902  005A0A  0EB9               	movlw	low _show4_1
  6903  005A0C  6E59               	movwf	??_animation4& (0+255),c
  6904  005A0E  0E7E               	movlw	high _show4_1
  6905  005A10  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6906  005A12  50F3               	movf	prodl,w,c
  6907  005A14  2659               	addwf	??_animation4,f,c
  6908  005A16  50F4               	movf	prodh,w,c
  6909  005A18  225A               	addwfc	??_animation4+1,f,c
  6910  005A1A  505D               	movf	animation4@j,w,c
  6911  005A1C  0D01               	mullw	1
  6912  005A1E  50F3               	movf	prodl,w,c
  6913  005A20  2659               	addwf	??_animation4,f,c
  6914  005A22  50F4               	movf	prodh,w,c
  6915  005A24  225A               	addwfc	??_animation4+1,f,c
  6916  005A26  C059  FFF6         	movff	??_animation4,tblptrl
  6917  005A2A  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6918  005A2E                     	if	0	;tblptru may be non-zero
  6919  005A2E                     	endif
  6920  005A2E                     	if	0	;tblptru may be non-zero
  6921  005A2E                     	endif
  6922  005A2E  0008               	tblrd		*
  6923  005A30  50F5               	movf	tablat,w,c
  6924  005A32  0A64               	xorlw	100
  6925  005A34  B4D8               	btfsc	status,2,c
  6926  005A36  D01A               	goto	u5140
  6927                           
  6928                           ;newmain.c: 931: clr_led(show4_1[i][j]);
  6929  005A38  505C               	movf	animation4@i,w,c
  6930  005A3A  0D08               	mullw	8
  6931  005A3C  0EB9               	movlw	low _show4_1
  6932  005A3E  6E59               	movwf	??_animation4& (0+255),c
  6933  005A40  0E7E               	movlw	high _show4_1
  6934  005A42  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6935  005A44  50F3               	movf	prodl,w,c
  6936  005A46  2659               	addwf	??_animation4,f,c
  6937  005A48  50F4               	movf	prodh,w,c
  6938  005A4A  225A               	addwfc	??_animation4+1,f,c
  6939  005A4C  505D               	movf	animation4@j,w,c
  6940  005A4E  0D01               	mullw	1
  6941  005A50  50F3               	movf	prodl,w,c
  6942  005A52  2659               	addwf	??_animation4,f,c
  6943  005A54  50F4               	movf	prodh,w,c
  6944  005A56  225A               	addwfc	??_animation4+1,f,c
  6945  005A58  C059  FFF6         	movff	??_animation4,tblptrl
  6946  005A5C  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6947  005A60                     	if	0	;tblptru may be non-zero
  6948  005A60                     	endif
  6949  005A60                     	if	0	;tblptru may be non-zero
  6950  005A60                     	endif
  6951  005A60  0008               	tblrd		*
  6952  005A62  50F5               	movf	tablat,w,c
  6953  005A64  EC2F  F025         	call	_clr_led
  6954                           
  6955                           ;newmain.c: 932: else
  6956                           ;newmain.c: 933: break;
  6957  005A68  2A5D               	incf	animation4@j,f,c
  6958  005A6A  D7C9               	goto	l4152
  6959  005A6C                     u5140:
  6960                           
  6961                           ;newmain.c: 934: }
  6962                           ;newmain.c: 935: write_display();
  6963  005A6C  EC8A  F025         	call	_write_display	;wreg free
  6964  005A70  2A5C               	incf	animation4@i,f,c
  6965  005A72  D77C               	goto	l4128
  6966  005A74                     l410:
  6967  005A74  045B               	decf	animation4@m,w,c
  6968  005A76  A4D8               	btfss	status,2,c
  6969  005A78  D086               	goto	l422
  6970                           
  6971                           ;newmain.c: 938: for (i = 0; i < 6; i++) {
  6972  005A7A  0E00               	movlw	0
  6973  005A7C  6E5C               	movwf	animation4@i,c
  6974  005A7E                     l4174:
  6975  005A7E  0E05               	movlw	5
  6976  005A80  645C               	cpfsgt	animation4@i,c
  6977  005A82  D001               	goto	l423
  6978  005A84  D194               	goto	u5420
  6979  005A86                     l423:
  6980                           
  6981                           ;newmain.c: 939: for (j = 0; j < 8; j++){
  6982  005A86  0E00               	movlw	0
  6983  005A88  6E5D               	movwf	animation4@j,c
  6984  005A8A                     l4180:
  6985  005A8A  0E07               	movlw	7
  6986  005A8C  645D               	cpfsgt	animation4@j,c
  6987  005A8E  D001               	goto	l425
  6988  005A90  D033               	goto	u5200
  6989  005A92                     l425:
  6990                           
  6991                           ;newmain.c: 940: if (show4_2[i][j] != 100)
  6992  005A92  505C               	movf	animation4@i,w,c
  6993  005A94  0D08               	mullw	8
  6994  005A96  0E09               	movlw	low _show4_2
  6995  005A98  6E59               	movwf	??_animation4& (0+255),c
  6996  005A9A  0E7D               	movlw	high _show4_2
  6997  005A9C  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6998  005A9E  50F3               	movf	prodl,w,c
  6999  005AA0  2659               	addwf	??_animation4,f,c
  7000  005AA2  50F4               	movf	prodh,w,c
  7001  005AA4  225A               	addwfc	??_animation4+1,f,c
  7002  005AA6  505D               	movf	animation4@j,w,c
  7003  005AA8  0D01               	mullw	1
  7004  005AAA  50F3               	movf	prodl,w,c
  7005  005AAC  2659               	addwf	??_animation4,f,c
  7006  005AAE  50F4               	movf	prodh,w,c
  7007  005AB0  225A               	addwfc	??_animation4+1,f,c
  7008  005AB2  C059  FFF6         	movff	??_animation4,tblptrl
  7009  005AB6  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7010  005ABA                     	if	0	;tblptru may be non-zero
  7011  005ABA                     	endif
  7012  005ABA                     	if	0	;tblptru may be non-zero
  7013  005ABA                     	endif
  7014  005ABA  0008               	tblrd		*
  7015  005ABC  50F5               	movf	tablat,w,c
  7016  005ABE  0A64               	xorlw	100
  7017  005AC0  B4D8               	btfsc	status,2,c
  7018  005AC2  D01A               	goto	u5200
  7019                           
  7020                           ;newmain.c: 941: set_led(show4_2[i][j]);
  7021  005AC4  505C               	movf	animation4@i,w,c
  7022  005AC6  0D08               	mullw	8
  7023  005AC8  0E09               	movlw	low _show4_2
  7024  005ACA  6E59               	movwf	??_animation4& (0+255),c
  7025  005ACC  0E7D               	movlw	high _show4_2
  7026  005ACE  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7027  005AD0  50F3               	movf	prodl,w,c
  7028  005AD2  2659               	addwf	??_animation4,f,c
  7029  005AD4  50F4               	movf	prodh,w,c
  7030  005AD6  225A               	addwfc	??_animation4+1,f,c
  7031  005AD8  505D               	movf	animation4@j,w,c
  7032  005ADA  0D01               	mullw	1
  7033  005ADC  50F3               	movf	prodl,w,c
  7034  005ADE  2659               	addwf	??_animation4,f,c
  7035  005AE0  50F4               	movf	prodh,w,c
  7036  005AE2  225A               	addwfc	??_animation4+1,f,c
  7037  005AE4  C059  FFF6         	movff	??_animation4,tblptrl
  7038  005AE8  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7039  005AEC                     	if	0	;tblptru may be non-zero
  7040  005AEC                     	endif
  7041  005AEC                     	if	0	;tblptru may be non-zero
  7042  005AEC                     	endif
  7043  005AEC  0008               	tblrd		*
  7044  005AEE  50F5               	movf	tablat,w,c
  7045  005AF0  ECD8  F024         	call	_set_led
  7046                           
  7047                           ;newmain.c: 942: else
  7048                           ;newmain.c: 943: break;
  7049  005AF4  2A5D               	incf	animation4@j,f,c
  7050  005AF6  D7C9               	goto	l4180
  7051  005AF8                     u5200:
  7052                           
  7053                           ;newmain.c: 944: }
  7054                           ;newmain.c: 945: write_display();
  7055  005AF8  EC8A  F025         	call	_write_display	;wreg free
  7056                           
  7057                           ;newmain.c: 946: _delay((unsigned long)((5)*(4000000/4000.0)));
  7058  005AFC  0E07               	movlw	7
  7059  005AFE  6E59               	movwf	??_animation4& (0+255),c
  7060  005B00  0E7D               	movlw	125
  7061  005B02                     u7017:
  7062  005B02  2EE8               	decfsz	wreg,f,c
  7063  005B04  D7FE               	bra	u7017
  7064  005B06  2E59               	decfsz	??_animation4& (0+255),f,c
  7065  005B08  D7FC               	bra	u7017
  7066  005B0A  F000               	nop	
  7067                           
  7068                           ;newmain.c: 948: for (j = 0; j < 8; j++){
  7069  005B0C  0E00               	movlw	0
  7070  005B0E  6E5D               	movwf	animation4@j,c
  7071  005B10                     l4198:
  7072  005B10  0E07               	movlw	7
  7073  005B12  645D               	cpfsgt	animation4@j,c
  7074  005B14  D001               	goto	l429
  7075  005B16  D033               	goto	u5230
  7076  005B18                     l429:
  7077                           
  7078                           ;newmain.c: 949: if (show4_2[i][j] != 100)
  7079  005B18  505C               	movf	animation4@i,w,c
  7080  005B1A  0D08               	mullw	8
  7081  005B1C  0E09               	movlw	low _show4_2
  7082  005B1E  6E59               	movwf	??_animation4& (0+255),c
  7083  005B20  0E7D               	movlw	high _show4_2
  7084  005B22  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7085  005B24  50F3               	movf	prodl,w,c
  7086  005B26  2659               	addwf	??_animation4,f,c
  7087  005B28  50F4               	movf	prodh,w,c
  7088  005B2A  225A               	addwfc	??_animation4+1,f,c
  7089  005B2C  505D               	movf	animation4@j,w,c
  7090  005B2E  0D01               	mullw	1
  7091  005B30  50F3               	movf	prodl,w,c
  7092  005B32  2659               	addwf	??_animation4,f,c
  7093  005B34  50F4               	movf	prodh,w,c
  7094  005B36  225A               	addwfc	??_animation4+1,f,c
  7095  005B38  C059  FFF6         	movff	??_animation4,tblptrl
  7096  005B3C  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7097  005B40                     	if	0	;tblptru may be non-zero
  7098  005B40                     	endif
  7099  005B40                     	if	0	;tblptru may be non-zero
  7100  005B40                     	endif
  7101  005B40  0008               	tblrd		*
  7102  005B42  50F5               	movf	tablat,w,c
  7103  005B44  0A64               	xorlw	100
  7104  005B46  B4D8               	btfsc	status,2,c
  7105  005B48  D01A               	goto	u5230
  7106                           
  7107                           ;newmain.c: 950: clr_led(show4_2[i][j]);
  7108  005B4A  505C               	movf	animation4@i,w,c
  7109  005B4C  0D08               	mullw	8
  7110  005B4E  0E09               	movlw	low _show4_2
  7111  005B50  6E59               	movwf	??_animation4& (0+255),c
  7112  005B52  0E7D               	movlw	high _show4_2
  7113  005B54  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7114  005B56  50F3               	movf	prodl,w,c
  7115  005B58  2659               	addwf	??_animation4,f,c
  7116  005B5A  50F4               	movf	prodh,w,c
  7117  005B5C  225A               	addwfc	??_animation4+1,f,c
  7118  005B5E  505D               	movf	animation4@j,w,c
  7119  005B60  0D01               	mullw	1
  7120  005B62  50F3               	movf	prodl,w,c
  7121  005B64  2659               	addwf	??_animation4,f,c
  7122  005B66  50F4               	movf	prodh,w,c
  7123  005B68  225A               	addwfc	??_animation4+1,f,c
  7124  005B6A  C059  FFF6         	movff	??_animation4,tblptrl
  7125  005B6E  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7126  005B72                     	if	0	;tblptru may be non-zero
  7127  005B72                     	endif
  7128  005B72                     	if	0	;tblptru may be non-zero
  7129  005B72                     	endif
  7130  005B72  0008               	tblrd		*
  7131  005B74  50F5               	movf	tablat,w,c
  7132  005B76  EC2F  F025         	call	_clr_led
  7133                           
  7134                           ;newmain.c: 951: else
  7135                           ;newmain.c: 952: break;
  7136  005B7A  2A5D               	incf	animation4@j,f,c
  7137  005B7C  D7C9               	goto	l4198
  7138  005B7E                     u5230:
  7139                           
  7140                           ;newmain.c: 953: }
  7141                           ;newmain.c: 954: write_display();
  7142  005B7E  EC8A  F025         	call	_write_display	;wreg free
  7143  005B82  2A5C               	incf	animation4@i,f,c
  7144  005B84  D77C               	goto	l4174
  7145  005B86                     l422:
  7146  005B86  0E02               	movlw	2
  7147  005B88  185B               	xorwf	animation4@m,w,c
  7148  005B8A  A4D8               	btfss	status,2,c
  7149  005B8C  D086               	goto	l434
  7150                           
  7151                           ;newmain.c: 957: for (i = 0; i < 6; i++) {
  7152  005B8E  0E00               	movlw	0
  7153  005B90  6E5C               	movwf	animation4@i,c
  7154  005B92                     l4220:
  7155  005B92  0E05               	movlw	5
  7156  005B94  645C               	cpfsgt	animation4@i,c
  7157  005B96  D001               	goto	l435
  7158  005B98  D10A               	goto	u5420
  7159  005B9A                     l435:
  7160                           
  7161                           ;newmain.c: 958: for (j = 0; j < 8; j++){
  7162  005B9A  0E00               	movlw	0
  7163  005B9C  6E5D               	movwf	animation4@j,c
  7164  005B9E                     l4226:
  7165  005B9E  0E07               	movlw	7
  7166  005BA0  645D               	cpfsgt	animation4@j,c
  7167  005BA2  D001               	goto	l437
  7168  005BA4  D033               	goto	u5290
  7169  005BA6                     l437:
  7170                           
  7171                           ;newmain.c: 959: if (show4_2[i][j] != 100)
  7172  005BA6  505C               	movf	animation4@i,w,c
  7173  005BA8  0D08               	mullw	8
  7174  005BAA  0E09               	movlw	low _show4_2
  7175  005BAC  6E59               	movwf	??_animation4& (0+255),c
  7176  005BAE  0E7D               	movlw	high _show4_2
  7177  005BB0  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7178  005BB2  50F3               	movf	prodl,w,c
  7179  005BB4  2659               	addwf	??_animation4,f,c
  7180  005BB6  50F4               	movf	prodh,w,c
  7181  005BB8  225A               	addwfc	??_animation4+1,f,c
  7182  005BBA  505D               	movf	animation4@j,w,c
  7183  005BBC  0D01               	mullw	1
  7184  005BBE  50F3               	movf	prodl,w,c
  7185  005BC0  2659               	addwf	??_animation4,f,c
  7186  005BC2  50F4               	movf	prodh,w,c
  7187  005BC4  225A               	addwfc	??_animation4+1,f,c
  7188  005BC6  C059  FFF6         	movff	??_animation4,tblptrl
  7189  005BCA  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7190  005BCE                     	if	0	;tblptru may be non-zero
  7191  005BCE                     	endif
  7192  005BCE                     	if	0	;tblptru may be non-zero
  7193  005BCE                     	endif
  7194  005BCE  0008               	tblrd		*
  7195  005BD0  50F5               	movf	tablat,w,c
  7196  005BD2  0A64               	xorlw	100
  7197  005BD4  B4D8               	btfsc	status,2,c
  7198  005BD6  D01A               	goto	u5290
  7199                           
  7200                           ;newmain.c: 960: set_led(show4_3[i][j]);
  7201  005BD8  505C               	movf	animation4@i,w,c
  7202  005BDA  0D08               	mullw	8
  7203  005BDC  0EA9               	movlw	low _show4_3
  7204  005BDE  6E59               	movwf	??_animation4& (0+255),c
  7205  005BE0  0E7C               	movlw	high _show4_3
  7206  005BE2  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7207  005BE4  50F3               	movf	prodl,w,c
  7208  005BE6  2659               	addwf	??_animation4,f,c
  7209  005BE8  50F4               	movf	prodh,w,c
  7210  005BEA  225A               	addwfc	??_animation4+1,f,c
  7211  005BEC  505D               	movf	animation4@j,w,c
  7212  005BEE  0D01               	mullw	1
  7213  005BF0  50F3               	movf	prodl,w,c
  7214  005BF2  2659               	addwf	??_animation4,f,c
  7215  005BF4  50F4               	movf	prodh,w,c
  7216  005BF6  225A               	addwfc	??_animation4+1,f,c
  7217  005BF8  C059  FFF6         	movff	??_animation4,tblptrl
  7218  005BFC  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7219  005C00                     	if	0	;tblptru may be non-zero
  7220  005C00                     	endif
  7221  005C00                     	if	0	;tblptru may be non-zero
  7222  005C00                     	endif
  7223  005C00  0008               	tblrd		*
  7224  005C02  50F5               	movf	tablat,w,c
  7225  005C04  ECD8  F024         	call	_set_led
  7226                           
  7227                           ;newmain.c: 961: else
  7228                           ;newmain.c: 962: break;
  7229  005C08  2A5D               	incf	animation4@j,f,c
  7230  005C0A  D7C9               	goto	l4226
  7231  005C0C                     u5290:
  7232                           
  7233                           ;newmain.c: 963: }
  7234                           ;newmain.c: 964: write_display();
  7235  005C0C  EC8A  F025         	call	_write_display	;wreg free
  7236                           
  7237                           ;newmain.c: 965: _delay((unsigned long)((5)*(4000000/4000.0)));
  7238  005C10  0E07               	movlw	7
  7239  005C12  6E59               	movwf	??_animation4& (0+255),c
  7240  005C14  0E7D               	movlw	125
  7241  005C16                     u7027:
  7242  005C16  2EE8               	decfsz	wreg,f,c
  7243  005C18  D7FE               	bra	u7027
  7244  005C1A  2E59               	decfsz	??_animation4& (0+255),f,c
  7245  005C1C  D7FC               	bra	u7027
  7246  005C1E  F000               	nop	
  7247                           
  7248                           ;newmain.c: 967: for (j = 0; j < 8; j++){
  7249  005C20  0E00               	movlw	0
  7250  005C22  6E5D               	movwf	animation4@j,c
  7251  005C24                     l4244:
  7252  005C24  0E07               	movlw	7
  7253  005C26  645D               	cpfsgt	animation4@j,c
  7254  005C28  D001               	goto	l441
  7255  005C2A  D033               	goto	u5320
  7256  005C2C                     l441:
  7257                           
  7258                           ;newmain.c: 968: if (show4_2[i][j] != 100)
  7259  005C2C  505C               	movf	animation4@i,w,c
  7260  005C2E  0D08               	mullw	8
  7261  005C30  0E09               	movlw	low _show4_2
  7262  005C32  6E59               	movwf	??_animation4& (0+255),c
  7263  005C34  0E7D               	movlw	high _show4_2
  7264  005C36  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7265  005C38  50F3               	movf	prodl,w,c
  7266  005C3A  2659               	addwf	??_animation4,f,c
  7267  005C3C  50F4               	movf	prodh,w,c
  7268  005C3E  225A               	addwfc	??_animation4+1,f,c
  7269  005C40  505D               	movf	animation4@j,w,c
  7270  005C42  0D01               	mullw	1
  7271  005C44  50F3               	movf	prodl,w,c
  7272  005C46  2659               	addwf	??_animation4,f,c
  7273  005C48  50F4               	movf	prodh,w,c
  7274  005C4A  225A               	addwfc	??_animation4+1,f,c
  7275  005C4C  C059  FFF6         	movff	??_animation4,tblptrl
  7276  005C50  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7277  005C54                     	if	0	;tblptru may be non-zero
  7278  005C54                     	endif
  7279  005C54                     	if	0	;tblptru may be non-zero
  7280  005C54                     	endif
  7281  005C54  0008               	tblrd		*
  7282  005C56  50F5               	movf	tablat,w,c
  7283  005C58  0A64               	xorlw	100
  7284  005C5A  B4D8               	btfsc	status,2,c
  7285  005C5C  D01A               	goto	u5320
  7286                           
  7287                           ;newmain.c: 969: clr_led(show4_3[i][j]);
  7288  005C5E  505C               	movf	animation4@i,w,c
  7289  005C60  0D08               	mullw	8
  7290  005C62  0EA9               	movlw	low _show4_3
  7291  005C64  6E59               	movwf	??_animation4& (0+255),c
  7292  005C66  0E7C               	movlw	high _show4_3
  7293  005C68  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7294  005C6A  50F3               	movf	prodl,w,c
  7295  005C6C  2659               	addwf	??_animation4,f,c
  7296  005C6E  50F4               	movf	prodh,w,c
  7297  005C70  225A               	addwfc	??_animation4+1,f,c
  7298  005C72  505D               	movf	animation4@j,w,c
  7299  005C74  0D01               	mullw	1
  7300  005C76  50F3               	movf	prodl,w,c
  7301  005C78  2659               	addwf	??_animation4,f,c
  7302  005C7A  50F4               	movf	prodh,w,c
  7303  005C7C  225A               	addwfc	??_animation4+1,f,c
  7304  005C7E  C059  FFF6         	movff	??_animation4,tblptrl
  7305  005C82  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7306  005C86                     	if	0	;tblptru may be non-zero
  7307  005C86                     	endif
  7308  005C86                     	if	0	;tblptru may be non-zero
  7309  005C86                     	endif
  7310  005C86  0008               	tblrd		*
  7311  005C88  50F5               	movf	tablat,w,c
  7312  005C8A  EC2F  F025         	call	_clr_led
  7313                           
  7314                           ;newmain.c: 970: else
  7315                           ;newmain.c: 971: break;
  7316  005C8E  2A5D               	incf	animation4@j,f,c
  7317  005C90  D7C9               	goto	l4244
  7318  005C92                     u5320:
  7319                           
  7320                           ;newmain.c: 972: }
  7321                           ;newmain.c: 973: write_display();
  7322  005C92  EC8A  F025         	call	_write_display	;wreg free
  7323  005C96  2A5C               	incf	animation4@i,f,c
  7324  005C98  D77C               	goto	l4220
  7325  005C9A                     l434:
  7326  005C9A  0E03               	movlw	3
  7327  005C9C  185B               	xorwf	animation4@m,w,c
  7328  005C9E  A4D8               	btfss	status,2,c
  7329  005CA0  D086               	goto	u5420
  7330                           
  7331                           ;newmain.c: 977: for (i = 0; i < 8; i++) {
  7332  005CA2  0E00               	movlw	0
  7333  005CA4  6E5C               	movwf	animation4@i,c
  7334  005CA6                     l4266:
  7335  005CA6  0E07               	movlw	7
  7336  005CA8  645C               	cpfsgt	animation4@i,c
  7337  005CAA  D001               	goto	l447
  7338  005CAC  D080               	goto	u5420
  7339  005CAE                     l447:
  7340                           
  7341                           ;newmain.c: 978: for (j = 0; j < 8; j++){
  7342  005CAE  0E00               	movlw	0
  7343  005CB0  6E5D               	movwf	animation4@j,c
  7344  005CB2                     l4272:
  7345  005CB2  0E07               	movlw	7
  7346  005CB4  645D               	cpfsgt	animation4@j,c
  7347  005CB6  D001               	goto	l449
  7348  005CB8  D033               	goto	u5380
  7349  005CBA                     l449:
  7350                           
  7351                           ;newmain.c: 979: if (show4_3[i][j] != 100)
  7352  005CBA  505C               	movf	animation4@i,w,c
  7353  005CBC  0D08               	mullw	8
  7354  005CBE  0EA9               	movlw	low _show4_3
  7355  005CC0  6E59               	movwf	??_animation4& (0+255),c
  7356  005CC2  0E7C               	movlw	high _show4_3
  7357  005CC4  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7358  005CC6  50F3               	movf	prodl,w,c
  7359  005CC8  2659               	addwf	??_animation4,f,c
  7360  005CCA  50F4               	movf	prodh,w,c
  7361  005CCC  225A               	addwfc	??_animation4+1,f,c
  7362  005CCE  505D               	movf	animation4@j,w,c
  7363  005CD0  0D01               	mullw	1
  7364  005CD2  50F3               	movf	prodl,w,c
  7365  005CD4  2659               	addwf	??_animation4,f,c
  7366  005CD6  50F4               	movf	prodh,w,c
  7367  005CD8  225A               	addwfc	??_animation4+1,f,c
  7368  005CDA  C059  FFF6         	movff	??_animation4,tblptrl
  7369  005CDE  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7370  005CE2                     	if	0	;tblptru may be non-zero
  7371  005CE2                     	endif
  7372  005CE2                     	if	0	;tblptru may be non-zero
  7373  005CE2                     	endif
  7374  005CE2  0008               	tblrd		*
  7375  005CE4  50F5               	movf	tablat,w,c
  7376  005CE6  0A64               	xorlw	100
  7377  005CE8  B4D8               	btfsc	status,2,c
  7378  005CEA  D01A               	goto	u5380
  7379                           
  7380                           ;newmain.c: 980: set_led(show4_4[i][j]);
  7381  005CEC  505C               	movf	animation4@i,w,c
  7382  005CEE  0D08               	mullw	8
  7383  005CF0  0E79               	movlw	low _show4_4
  7384  005CF2  6E59               	movwf	??_animation4& (0+255),c
  7385  005CF4  0E7E               	movlw	high _show4_4
  7386  005CF6  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7387  005CF8  50F3               	movf	prodl,w,c
  7388  005CFA  2659               	addwf	??_animation4,f,c
  7389  005CFC  50F4               	movf	prodh,w,c
  7390  005CFE  225A               	addwfc	??_animation4+1,f,c
  7391  005D00  505D               	movf	animation4@j,w,c
  7392  005D02  0D01               	mullw	1
  7393  005D04  50F3               	movf	prodl,w,c
  7394  005D06  2659               	addwf	??_animation4,f,c
  7395  005D08  50F4               	movf	prodh,w,c
  7396  005D0A  225A               	addwfc	??_animation4+1,f,c
  7397  005D0C  C059  FFF6         	movff	??_animation4,tblptrl
  7398  005D10  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7399  005D14                     	if	0	;tblptru may be non-zero
  7400  005D14                     	endif
  7401  005D14                     	if	0	;tblptru may be non-zero
  7402  005D14                     	endif
  7403  005D14  0008               	tblrd		*
  7404  005D16  50F5               	movf	tablat,w,c
  7405  005D18  ECD8  F024         	call	_set_led
  7406                           
  7407                           ;newmain.c: 981: else
  7408                           ;newmain.c: 982: break;
  7409  005D1C  2A5D               	incf	animation4@j,f,c
  7410  005D1E  D7C9               	goto	l4272
  7411  005D20                     u5380:
  7412                           
  7413                           ;newmain.c: 983: }
  7414                           ;newmain.c: 984: write_display();
  7415  005D20  EC8A  F025         	call	_write_display	;wreg free
  7416                           
  7417                           ;newmain.c: 985: _delay((unsigned long)((5)*(4000000/4000.0)));
  7418  005D24  0E07               	movlw	7
  7419  005D26  6E59               	movwf	??_animation4& (0+255),c
  7420  005D28  0E7D               	movlw	125
  7421  005D2A                     u7037:
  7422  005D2A  2EE8               	decfsz	wreg,f,c
  7423  005D2C  D7FE               	bra	u7037
  7424  005D2E  2E59               	decfsz	??_animation4& (0+255),f,c
  7425  005D30  D7FC               	bra	u7037
  7426  005D32  F000               	nop	
  7427                           
  7428                           ;newmain.c: 987: for (j = 0; j < 8; j++){
  7429  005D34  0E00               	movlw	0
  7430  005D36  6E5D               	movwf	animation4@j,c
  7431  005D38                     l4290:
  7432  005D38  0E07               	movlw	7
  7433  005D3A  645D               	cpfsgt	animation4@j,c
  7434  005D3C  D001               	goto	l453
  7435  005D3E  D033               	goto	u5410
  7436  005D40                     l453:
  7437                           
  7438                           ;newmain.c: 988: if (show4_3[i][j] != 100)
  7439  005D40  505C               	movf	animation4@i,w,c
  7440  005D42  0D08               	mullw	8
  7441  005D44  0EA9               	movlw	low _show4_3
  7442  005D46  6E59               	movwf	??_animation4& (0+255),c
  7443  005D48  0E7C               	movlw	high _show4_3
  7444  005D4A  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7445  005D4C  50F3               	movf	prodl,w,c
  7446  005D4E  2659               	addwf	??_animation4,f,c
  7447  005D50  50F4               	movf	prodh,w,c
  7448  005D52  225A               	addwfc	??_animation4+1,f,c
  7449  005D54  505D               	movf	animation4@j,w,c
  7450  005D56  0D01               	mullw	1
  7451  005D58  50F3               	movf	prodl,w,c
  7452  005D5A  2659               	addwf	??_animation4,f,c
  7453  005D5C  50F4               	movf	prodh,w,c
  7454  005D5E  225A               	addwfc	??_animation4+1,f,c
  7455  005D60  C059  FFF6         	movff	??_animation4,tblptrl
  7456  005D64  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7457  005D68                     	if	0	;tblptru may be non-zero
  7458  005D68                     	endif
  7459  005D68                     	if	0	;tblptru may be non-zero
  7460  005D68                     	endif
  7461  005D68  0008               	tblrd		*
  7462  005D6A  50F5               	movf	tablat,w,c
  7463  005D6C  0A64               	xorlw	100
  7464  005D6E  B4D8               	btfsc	status,2,c
  7465  005D70  D01A               	goto	u5410
  7466                           
  7467                           ;newmain.c: 989: clr_led(show4_4[i][j]);
  7468  005D72  505C               	movf	animation4@i,w,c
  7469  005D74  0D08               	mullw	8
  7470  005D76  0E79               	movlw	low _show4_4
  7471  005D78  6E59               	movwf	??_animation4& (0+255),c
  7472  005D7A  0E7E               	movlw	high _show4_4
  7473  005D7C  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7474  005D7E  50F3               	movf	prodl,w,c
  7475  005D80  2659               	addwf	??_animation4,f,c
  7476  005D82  50F4               	movf	prodh,w,c
  7477  005D84  225A               	addwfc	??_animation4+1,f,c
  7478  005D86  505D               	movf	animation4@j,w,c
  7479  005D88  0D01               	mullw	1
  7480  005D8A  50F3               	movf	prodl,w,c
  7481  005D8C  2659               	addwf	??_animation4,f,c
  7482  005D8E  50F4               	movf	prodh,w,c
  7483  005D90  225A               	addwfc	??_animation4+1,f,c
  7484  005D92  C059  FFF6         	movff	??_animation4,tblptrl
  7485  005D96  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7486  005D9A                     	if	0	;tblptru may be non-zero
  7487  005D9A                     	endif
  7488  005D9A                     	if	0	;tblptru may be non-zero
  7489  005D9A                     	endif
  7490  005D9A  0008               	tblrd		*
  7491  005D9C  50F5               	movf	tablat,w,c
  7492  005D9E  EC2F  F025         	call	_clr_led
  7493                           
  7494                           ;newmain.c: 990: else
  7495                           ;newmain.c: 991: break;
  7496  005DA2  2A5D               	incf	animation4@j,f,c
  7497  005DA4  D7C9               	goto	l4290
  7498  005DA6                     u5410:
  7499                           
  7500                           ;newmain.c: 992: }
  7501                           ;newmain.c: 993: write_display();
  7502  005DA6  EC8A  F025         	call	_write_display	;wreg free
  7503  005DAA  2A5C               	incf	animation4@i,f,c
  7504  005DAC  D77C               	goto	l4266
  7505  005DAE                     u5420:
  7506                           
  7507                           ;newmain.c: 994: }
  7508                           ;newmain.c: 995: }
  7509                           ;newmain.c: 996: clr_led(h);
  7510  005DAE  5058               	movf	animation4@h,w,c
  7511  005DB0  EC2F  F025         	call	_clr_led
  7512                           
  7513                           ;newmain.c: 997: write_display();
  7514  005DB4  EC8A  F025         	call	_write_display	;wreg free
  7515  005DB8  0012               	return		;funcret
  7516  005DBA                     __end_of_animation4:
  7517                           	opt stack 0
  7518                           tblptru	equ	0xFF8
  7519                           tblptrh	equ	0xFF7
  7520                           tblptrl	equ	0xFF6
  7521                           tablat	equ	0xFF5
  7522                           prodh	equ	0xFF4
  7523                           prodl	equ	0xFF3
  7524                           postinc0	equ	0xFEE
  7525                           wreg	equ	0xFE8
  7526                           postinc1	equ	0xFE6
  7527                           fsr1h	equ	0xFE2
  7528                           fsr1l	equ	0xFE1
  7529                           indf2	equ	0xFDF
  7530                           postinc2	equ	0xFDE
  7531                           postdec2	equ	0xFDD
  7532                           fsr2h	equ	0xFDA
  7533                           fsr2l	equ	0xFD9
  7534                           status	equ	0xFD8
  7535                           
  7536 ;; *************** function _animation3 *****************
  7537 ;; Defined at:
  7538 ;;		line 818 in file "newmain.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  m               1    wreg     unsigned char 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  m               1   25[COMRAM] unsigned char 
  7543 ;;  j               2   28[COMRAM] int 
  7544 ;;  i               2   26[COMRAM] int 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7554 ;;      Params:         0       0       0       0       0       0       0
  7555 ;;      Locals:         5       0       0       0       0       0       0
  7556 ;;      Temps:          4       0       0       0       0       0       0
  7557 ;;      Totals:         9       0       0       0       0       0       0
  7558 ;;Total ram usage:        9 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    4
  7561 ;; This function calls:
  7562 ;;		___wmul
  7563 ;;		_clr_led
  7564 ;;		_set_led
  7565 ;;		_write_display
  7566 ;; This function is called by:
  7567 ;;		_main
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text13
  7572  0069A8                     __ptext13:
  7573                           	opt stack 0
  7574  0069A8                     _animation3:
  7575                           	opt stack 26
  7576                           
  7577                           ;incstack = 0
  7578                           ;animation3@m stored from wreg
  7579  0069A8  6E5C               	movwf	animation3@m,c
  7580                           
  7581                           ;newmain.c: 819: int i = 0, j = 0;
  7582  0069AA  0E00               	movlw	0
  7583  0069AC  6E5E               	movwf	animation3@i+1,c
  7584  0069AE  0E00               	movlw	0
  7585  0069B0  6E5D               	movwf	animation3@i,c
  7586  0069B2  0E00               	movlw	0
  7587  0069B4  6E60               	movwf	animation3@j+1,c
  7588  0069B6  0E00               	movlw	0
  7589  0069B8  6E5F               	movwf	animation3@j,c
  7590                           
  7591                           ;newmain.c: 820: if (m == 0) {
  7592  0069BA  505C               	movf	animation3@m,w,c
  7593  0069BC  A4D8               	btfss	status,2,c
  7594  0069BE  D0C6               	goto	l350
  7595                           
  7596                           ;newmain.c: 821: for (i = 0; i < 10; i++) {
  7597  0069C0  0E00               	movlw	0
  7598  0069C2  6E5E               	movwf	animation3@i+1,c
  7599  0069C4  0E00               	movlw	0
  7600  0069C6  6E5D               	movwf	animation3@i,c
  7601  0069C8  BE5E               	btfsc	animation3@i+1,7,c
  7602  0069CA  D008               	goto	l351
  7603  0069CC  505E               	movf	animation3@i+1,w,c
  7604  0069CE  E105               	bnz	u4640
  7605  0069D0  0E0A               	movlw	10
  7606  0069D2  5C5D               	subwf	animation3@i,w,c
  7607  0069D4  B0D8               	btfsc	status,0,c
  7608  0069D6  0012               	return	
  7609  0069D8  D001               	goto	l351
  7610  0069DA                     u4640:
  7611  0069DA  0012               	return	
  7612  0069DC                     l351:
  7613                           
  7614                           ;newmain.c: 822: for (j = 0; j < 8; j++) {
  7615  0069DC  0E00               	movlw	0
  7616  0069DE  6E60               	movwf	animation3@j+1,c
  7617  0069E0  0E00               	movlw	0
  7618  0069E2  6E5F               	movwf	animation3@j,c
  7619  0069E4                     l3900:
  7620  0069E4  BE60               	btfsc	animation3@j+1,7,c
  7621  0069E6  D006               	goto	l353
  7622  0069E8  5060               	movf	animation3@j+1,w,c
  7623  0069EA  E14A               	bnz	l3912
  7624  0069EC  0E08               	movlw	8
  7625  0069EE  5C5F               	subwf	animation3@j,w,c
  7626  0069F0  B0D8               	btfsc	status,0,c
  7627  0069F2  D046               	goto	u4670
  7628  0069F4                     l353:
  7629                           
  7630                           ;newmain.c: 823: if (show3_1[i][j] != 100)
  7631  0069F4  C05D  F058         	movff	animation3@i,??_animation3
  7632  0069F8  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7633  0069FC  90D8               	bcf	status,0,c
  7634  0069FE  3658               	rlcf	??_animation3,f,c
  7635  006A00  3659               	rlcf	??_animation3+1,f,c
  7636  006A02  90D8               	bcf	status,0,c
  7637  006A04  3658               	rlcf	??_animation3,f,c
  7638  006A06  3659               	rlcf	??_animation3+1,f,c
  7639  006A08  90D8               	bcf	status,0,c
  7640  006A0A  3658               	rlcf	??_animation3,f,c
  7641  006A0C  3659               	rlcf	??_animation3+1,f,c
  7642  006A0E  0E69               	movlw	low _show3_1
  7643  006A10  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7644  006A12  0E7D               	movlw	high _show3_1
  7645  006A14  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7646  006A16  5058               	movf	??_animation3,w,c
  7647  006A18  265A               	addwf	??_animation3+2,f,c
  7648  006A1A  5059               	movf	??_animation3+1,w,c
  7649  006A1C  225B               	addwfc	??_animation3+3,f,c
  7650  006A1E  505F               	movf	animation3@j,w,c
  7651  006A20  265A               	addwf	??_animation3+2,f,c
  7652  006A22  5060               	movf	animation3@j+1,w,c
  7653  006A24  225B               	addwfc	??_animation3+3,f,c
  7654  006A26  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7655  006A2A  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7656  006A2E                     	if	0	;tblptru may be non-zero
  7657  006A2E                     	endif
  7658  006A2E                     	if	0	;tblptru may be non-zero
  7659  006A2E                     	endif
  7660  006A2E  0008               	tblrd		*
  7661  006A30  50F5               	movf	tablat,w,c
  7662  006A32  0A64               	xorlw	100
  7663  006A34  B4D8               	btfsc	status,2,c
  7664  006A36  D024               	goto	u4670
  7665                           
  7666                           ;newmain.c: 824: set_led(show3_1[i][j]);
  7667  006A38  C05D  F058         	movff	animation3@i,??_animation3
  7668  006A3C  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7669  006A40  90D8               	bcf	status,0,c
  7670  006A42  3658               	rlcf	??_animation3,f,c
  7671  006A44  3659               	rlcf	??_animation3+1,f,c
  7672  006A46  90D8               	bcf	status,0,c
  7673  006A48  3658               	rlcf	??_animation3,f,c
  7674  006A4A  3659               	rlcf	??_animation3+1,f,c
  7675  006A4C  90D8               	bcf	status,0,c
  7676  006A4E  3658               	rlcf	??_animation3,f,c
  7677  006A50  3659               	rlcf	??_animation3+1,f,c
  7678  006A52  0E69               	movlw	low _show3_1
  7679  006A54  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7680  006A56  0E7D               	movlw	high _show3_1
  7681  006A58  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7682  006A5A  5058               	movf	??_animation3,w,c
  7683  006A5C  265A               	addwf	??_animation3+2,f,c
  7684  006A5E  5059               	movf	??_animation3+1,w,c
  7685  006A60  225B               	addwfc	??_animation3+3,f,c
  7686  006A62  505F               	movf	animation3@j,w,c
  7687  006A64  265A               	addwf	??_animation3+2,f,c
  7688  006A66  5060               	movf	animation3@j+1,w,c
  7689  006A68  225B               	addwfc	??_animation3+3,f,c
  7690  006A6A  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7691  006A6E  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7692  006A72                     	if	0	;tblptru may be non-zero
  7693  006A72                     	endif
  7694  006A72                     	if	0	;tblptru may be non-zero
  7695  006A72                     	endif
  7696  006A72  0008               	tblrd		*
  7697  006A74  50F5               	movf	tablat,w,c
  7698  006A76  ECD8  F024         	call	_set_led
  7699                           
  7700                           ;newmain.c: 825: else
  7701                           ;newmain.c: 826: break;
  7702  006A7A  4A5F               	infsnz	animation3@j,f,c
  7703  006A7C  2A60               	incf	animation3@j+1,f,c
  7704  006A7E  D7B2               	goto	l3900
  7705  006A80                     u4670:
  7706  006A80                     l3912:
  7707                           
  7708                           ;newmain.c: 827: }
  7709                           ;newmain.c: 828: write_display();
  7710  006A80  EC8A  F025         	call	_write_display	;wreg free
  7711                           
  7712                           ;newmain.c: 829: _delay((unsigned long)((5)*(4000000/4000.0)));
  7713  006A84  0E07               	movlw	7
  7714  006A86  6E58               	movwf	??_animation3& (0+255),c
  7715  006A88  0E7D               	movlw	125
  7716  006A8A                     u7047:
  7717  006A8A  2EE8               	decfsz	wreg,f,c
  7718  006A8C  D7FE               	bra	u7047
  7719  006A8E  2E58               	decfsz	??_animation3& (0+255),f,c
  7720  006A90  D7FC               	bra	u7047
  7721  006A92  F000               	nop	
  7722                           
  7723                           ;newmain.c: 830: for (j = 0; j < 8; j++) {
  7724  006A94  0E00               	movlw	0
  7725  006A96  6E60               	movwf	animation3@j+1,c
  7726  006A98  0E00               	movlw	0
  7727  006A9A  6E5F               	movwf	animation3@j,c
  7728  006A9C                     l3918:
  7729  006A9C  BE60               	btfsc	animation3@j+1,7,c
  7730  006A9E  D006               	goto	l357
  7731  006AA0  5060               	movf	animation3@j+1,w,c
  7732  006AA2  E14A               	bnz	l3930
  7733  006AA4  0E08               	movlw	8
  7734  006AA6  5C5F               	subwf	animation3@j,w,c
  7735  006AA8  B0D8               	btfsc	status,0,c
  7736  006AAA  D046               	goto	u4700
  7737  006AAC                     l357:
  7738                           
  7739                           ;newmain.c: 831: if (show3_1[i][j] != 100)
  7740  006AAC  C05D  F058         	movff	animation3@i,??_animation3
  7741  006AB0  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7742  006AB4  90D8               	bcf	status,0,c
  7743  006AB6  3658               	rlcf	??_animation3,f,c
  7744  006AB8  3659               	rlcf	??_animation3+1,f,c
  7745  006ABA  90D8               	bcf	status,0,c
  7746  006ABC  3658               	rlcf	??_animation3,f,c
  7747  006ABE  3659               	rlcf	??_animation3+1,f,c
  7748  006AC0  90D8               	bcf	status,0,c
  7749  006AC2  3658               	rlcf	??_animation3,f,c
  7750  006AC4  3659               	rlcf	??_animation3+1,f,c
  7751  006AC6  0E69               	movlw	low _show3_1
  7752  006AC8  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7753  006ACA  0E7D               	movlw	high _show3_1
  7754  006ACC  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7755  006ACE  5058               	movf	??_animation3,w,c
  7756  006AD0  265A               	addwf	??_animation3+2,f,c
  7757  006AD2  5059               	movf	??_animation3+1,w,c
  7758  006AD4  225B               	addwfc	??_animation3+3,f,c
  7759  006AD6  505F               	movf	animation3@j,w,c
  7760  006AD8  265A               	addwf	??_animation3+2,f,c
  7761  006ADA  5060               	movf	animation3@j+1,w,c
  7762  006ADC  225B               	addwfc	??_animation3+3,f,c
  7763  006ADE  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7764  006AE2  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7765  006AE6                     	if	0	;tblptru may be non-zero
  7766  006AE6                     	endif
  7767  006AE6                     	if	0	;tblptru may be non-zero
  7768  006AE6                     	endif
  7769  006AE6  0008               	tblrd		*
  7770  006AE8  50F5               	movf	tablat,w,c
  7771  006AEA  0A64               	xorlw	100
  7772  006AEC  B4D8               	btfsc	status,2,c
  7773  006AEE  D024               	goto	u4700
  7774                           
  7775                           ;newmain.c: 832: clr_led(show3_1[i][j]);
  7776  006AF0  C05D  F058         	movff	animation3@i,??_animation3
  7777  006AF4  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7778  006AF8  90D8               	bcf	status,0,c
  7779  006AFA  3658               	rlcf	??_animation3,f,c
  7780  006AFC  3659               	rlcf	??_animation3+1,f,c
  7781  006AFE  90D8               	bcf	status,0,c
  7782  006B00  3658               	rlcf	??_animation3,f,c
  7783  006B02  3659               	rlcf	??_animation3+1,f,c
  7784  006B04  90D8               	bcf	status,0,c
  7785  006B06  3658               	rlcf	??_animation3,f,c
  7786  006B08  3659               	rlcf	??_animation3+1,f,c
  7787  006B0A  0E69               	movlw	low _show3_1
  7788  006B0C  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7789  006B0E  0E7D               	movlw	high _show3_1
  7790  006B10  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7791  006B12  5058               	movf	??_animation3,w,c
  7792  006B14  265A               	addwf	??_animation3+2,f,c
  7793  006B16  5059               	movf	??_animation3+1,w,c
  7794  006B18  225B               	addwfc	??_animation3+3,f,c
  7795  006B1A  505F               	movf	animation3@j,w,c
  7796  006B1C  265A               	addwf	??_animation3+2,f,c
  7797  006B1E  5060               	movf	animation3@j+1,w,c
  7798  006B20  225B               	addwfc	??_animation3+3,f,c
  7799  006B22  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7800  006B26  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7801  006B2A                     	if	0	;tblptru may be non-zero
  7802  006B2A                     	endif
  7803  006B2A                     	if	0	;tblptru may be non-zero
  7804  006B2A                     	endif
  7805  006B2A  0008               	tblrd		*
  7806  006B2C  50F5               	movf	tablat,w,c
  7807  006B2E  EC2F  F025         	call	_clr_led
  7808                           
  7809                           ;newmain.c: 833: else
  7810                           ;newmain.c: 834: break;
  7811  006B32  4A5F               	infsnz	animation3@j,f,c
  7812  006B34  2A60               	incf	animation3@j+1,f,c
  7813  006B36  D7B2               	goto	l3918
  7814  006B38                     u4700:
  7815  006B38                     l3930:
  7816                           
  7817                           ;newmain.c: 835: }
  7818                           ;newmain.c: 836: write_display();
  7819  006B38  EC8A  F025         	call	_write_display	;wreg free
  7820  006B3C  4A5D               	infsnz	animation3@i,f,c
  7821  006B3E  2A5E               	incf	animation3@i+1,f,c
  7822  006B40  BE5E               	btfsc	animation3@i+1,7,c
  7823  006B42  D74C               	goto	l351
  7824  006B44  505E               	movf	animation3@i+1,w,c
  7825  006B46  E101               	bnz	u4710
  7826  006B48  D743               	goto	L12
  7827  006B4A                     u4710:
  7828                           
  7829                           ;newmain.c: 837: }
  7830                           ;newmain.c: 838: } else if (m == 1) {
  7831  006B4A  0012               	return	
  7832  006B4C                     l350:
  7833  006B4C  045C               	decf	animation3@m,w,c
  7834  006B4E  A4D8               	btfss	status,2,c
  7835  006B50  D0BA               	goto	l362
  7836                           
  7837                           ;newmain.c: 839: for (i = 0; i < 7; i++) {
  7838  006B52  0E00               	movlw	0
  7839  006B54  6E5E               	movwf	animation3@i+1,c
  7840  006B56  0E00               	movlw	0
  7841  006B58  6E5D               	movwf	animation3@i,c
  7842  006B5A  BE5E               	btfsc	animation3@i+1,7,c
  7843  006B5C  D008               	goto	l363
  7844  006B5E  505E               	movf	animation3@i+1,w,c
  7845  006B60  E105               	bnz	u4730
  7846  006B62  0E07               	movlw	7
  7847  006B64  5C5D               	subwf	animation3@i,w,c
  7848  006B66  B0D8               	btfsc	status,0,c
  7849  006B68  0012               	return	
  7850  006B6A  D001               	goto	l363
  7851  006B6C                     u4730:
  7852  006B6C  0012               	return	
  7853  006B6E                     l363:
  7854                           
  7855                           ;newmain.c: 840: for (j = 0; j < 6; j++) {
  7856  006B6E  0E00               	movlw	0
  7857  006B70  6E60               	movwf	animation3@j+1,c
  7858  006B72  0E00               	movlw	0
  7859  006B74  6E5F               	movwf	animation3@j,c
  7860  006B76                     l3946:
  7861  006B76  BE60               	btfsc	animation3@j+1,7,c
  7862  006B78  D006               	goto	l365
  7863  006B7A  5060               	movf	animation3@j+1,w,c
  7864  006B7C  E144               	bnz	l3958
  7865  006B7E  0E06               	movlw	6
  7866  006B80  5C5F               	subwf	animation3@j,w,c
  7867  006B82  B0D8               	btfsc	status,0,c
  7868  006B84  D040               	goto	u4760
  7869  006B86                     l365:
  7870                           
  7871                           ;newmain.c: 841: if (show3_2[i][j] != 100)
  7872  006B86  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7873  006B8A  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7874  006B8E  0E00               	movlw	0
  7875  006B90  6E46               	movwf	___wmul@multiplicand+1,c
  7876  006B92  0E06               	movlw	6
  7877  006B94  6E45               	movwf	___wmul@multiplicand,c
  7878  006B96  EC71  F023         	call	___wmul	;wreg free
  7879  006B9A  0E39               	movlw	low _show3_2
  7880  006B9C  6E58               	movwf	??_animation3& (0+255),c
  7881  006B9E  0E7F               	movlw	high _show3_2
  7882  006BA0  6E59               	movwf	(??_animation3+1)& (0+255),c
  7883  006BA2  5043               	movf	?___wmul,w,c
  7884  006BA4  2658               	addwf	??_animation3,f,c
  7885  006BA6  5044               	movf	?___wmul+1,w,c
  7886  006BA8  2259               	addwfc	??_animation3+1,f,c
  7887  006BAA  505F               	movf	animation3@j,w,c
  7888  006BAC  2658               	addwf	??_animation3,f,c
  7889  006BAE  5060               	movf	animation3@j+1,w,c
  7890  006BB0  2259               	addwfc	??_animation3+1,f,c
  7891  006BB2  C058  FFF6         	movff	??_animation3,tblptrl
  7892  006BB6  C059  FFF7         	movff	??_animation3+1,tblptrh
  7893  006BBA                     	if	0	;tblptru may be non-zero
  7894  006BBA                     	endif
  7895  006BBA                     	if	0	;tblptru may be non-zero
  7896  006BBA                     	endif
  7897  006BBA  0008               	tblrd		*
  7898  006BBC  50F5               	movf	tablat,w,c
  7899  006BBE  0A64               	xorlw	100
  7900  006BC0  B4D8               	btfsc	status,2,c
  7901  006BC2  D021               	goto	u4760
  7902                           
  7903                           ;newmain.c: 842: set_led(show3_2[i][j]);
  7904  006BC4  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7905  006BC8  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7906  006BCC  0E00               	movlw	0
  7907  006BCE  6E46               	movwf	___wmul@multiplicand+1,c
  7908  006BD0  0E06               	movlw	6
  7909  006BD2  6E45               	movwf	___wmul@multiplicand,c
  7910  006BD4  EC71  F023         	call	___wmul	;wreg free
  7911  006BD8  0E39               	movlw	low _show3_2
  7912  006BDA  6E58               	movwf	??_animation3& (0+255),c
  7913  006BDC  0E7F               	movlw	high _show3_2
  7914  006BDE  6E59               	movwf	(??_animation3+1)& (0+255),c
  7915  006BE0  5043               	movf	?___wmul,w,c
  7916  006BE2  2658               	addwf	??_animation3,f,c
  7917  006BE4  5044               	movf	?___wmul+1,w,c
  7918  006BE6  2259               	addwfc	??_animation3+1,f,c
  7919  006BE8  505F               	movf	animation3@j,w,c
  7920  006BEA  2658               	addwf	??_animation3,f,c
  7921  006BEC  5060               	movf	animation3@j+1,w,c
  7922  006BEE  2259               	addwfc	??_animation3+1,f,c
  7923  006BF0  C058  FFF6         	movff	??_animation3,tblptrl
  7924  006BF4  C059  FFF7         	movff	??_animation3+1,tblptrh
  7925  006BF8                     	if	0	;tblptru may be non-zero
  7926  006BF8                     	endif
  7927  006BF8                     	if	0	;tblptru may be non-zero
  7928  006BF8                     	endif
  7929  006BF8  0008               	tblrd		*
  7930  006BFA  50F5               	movf	tablat,w,c
  7931  006BFC  ECD8  F024         	call	_set_led
  7932                           
  7933                           ;newmain.c: 843: else
  7934                           ;newmain.c: 844: break;
  7935  006C00  4A5F               	infsnz	animation3@j,f,c
  7936  006C02  2A60               	incf	animation3@j+1,f,c
  7937  006C04  D7B8               	goto	l3946
  7938  006C06                     u4760:
  7939  006C06                     l3958:
  7940                           
  7941                           ;newmain.c: 845: }
  7942                           ;newmain.c: 846: write_display();
  7943  006C06  EC8A  F025         	call	_write_display	;wreg free
  7944                           
  7945                           ;newmain.c: 847: _delay((unsigned long)((5)*(4000000/4000.0)));
  7946  006C0A  0E07               	movlw	7
  7947  006C0C  6E58               	movwf	??_animation3& (0+255),c
  7948  006C0E  0E7D               	movlw	125
  7949  006C10                     u7057:
  7950  006C10  2EE8               	decfsz	wreg,f,c
  7951  006C12  D7FE               	bra	u7057
  7952  006C14  2E58               	decfsz	??_animation3& (0+255),f,c
  7953  006C16  D7FC               	bra	u7057
  7954  006C18  F000               	nop	
  7955                           
  7956                           ;newmain.c: 848: for (j = 0; j < 6; j++) {
  7957  006C1A  0E00               	movlw	0
  7958  006C1C  6E60               	movwf	animation3@j+1,c
  7959  006C1E  0E00               	movlw	0
  7960  006C20  6E5F               	movwf	animation3@j,c
  7961  006C22                     l3964:
  7962  006C22  BE60               	btfsc	animation3@j+1,7,c
  7963  006C24  D006               	goto	l369
  7964  006C26  5060               	movf	animation3@j+1,w,c
  7965  006C28  E144               	bnz	l3976
  7966  006C2A  0E06               	movlw	6
  7967  006C2C  5C5F               	subwf	animation3@j,w,c
  7968  006C2E  B0D8               	btfsc	status,0,c
  7969  006C30  D040               	goto	u4790
  7970  006C32                     l369:
  7971                           
  7972                           ;newmain.c: 849: if (show3_2[i][j] != 100)
  7973  006C32  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7974  006C36  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7975  006C3A  0E00               	movlw	0
  7976  006C3C  6E46               	movwf	___wmul@multiplicand+1,c
  7977  006C3E  0E06               	movlw	6
  7978  006C40  6E45               	movwf	___wmul@multiplicand,c
  7979  006C42  EC71  F023         	call	___wmul	;wreg free
  7980  006C46  0E39               	movlw	low _show3_2
  7981  006C48  6E58               	movwf	??_animation3& (0+255),c
  7982  006C4A  0E7F               	movlw	high _show3_2
  7983  006C4C  6E59               	movwf	(??_animation3+1)& (0+255),c
  7984  006C4E  5043               	movf	?___wmul,w,c
  7985  006C50  2658               	addwf	??_animation3,f,c
  7986  006C52  5044               	movf	?___wmul+1,w,c
  7987  006C54  2259               	addwfc	??_animation3+1,f,c
  7988  006C56  505F               	movf	animation3@j,w,c
  7989  006C58  2658               	addwf	??_animation3,f,c
  7990  006C5A  5060               	movf	animation3@j+1,w,c
  7991  006C5C  2259               	addwfc	??_animation3+1,f,c
  7992  006C5E  C058  FFF6         	movff	??_animation3,tblptrl
  7993  006C62  C059  FFF7         	movff	??_animation3+1,tblptrh
  7994  006C66                     	if	0	;tblptru may be non-zero
  7995  006C66                     	endif
  7996  006C66                     	if	0	;tblptru may be non-zero
  7997  006C66                     	endif
  7998  006C66  0008               	tblrd		*
  7999  006C68  50F5               	movf	tablat,w,c
  8000  006C6A  0A64               	xorlw	100
  8001  006C6C  B4D8               	btfsc	status,2,c
  8002  006C6E  D021               	goto	u4790
  8003                           
  8004                           ;newmain.c: 850: clr_led(show3_2[i][j]);
  8005  006C70  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8006  006C74  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8007  006C78  0E00               	movlw	0
  8008  006C7A  6E46               	movwf	___wmul@multiplicand+1,c
  8009  006C7C  0E06               	movlw	6
  8010  006C7E  6E45               	movwf	___wmul@multiplicand,c
  8011  006C80  EC71  F023         	call	___wmul	;wreg free
  8012  006C84  0E39               	movlw	low _show3_2
  8013  006C86  6E58               	movwf	??_animation3& (0+255),c
  8014  006C88  0E7F               	movlw	high _show3_2
  8015  006C8A  6E59               	movwf	(??_animation3+1)& (0+255),c
  8016  006C8C  5043               	movf	?___wmul,w,c
  8017  006C8E  2658               	addwf	??_animation3,f,c
  8018  006C90  5044               	movf	?___wmul+1,w,c
  8019  006C92  2259               	addwfc	??_animation3+1,f,c
  8020  006C94  505F               	movf	animation3@j,w,c
  8021  006C96  2658               	addwf	??_animation3,f,c
  8022  006C98  5060               	movf	animation3@j+1,w,c
  8023  006C9A  2259               	addwfc	??_animation3+1,f,c
  8024  006C9C  C058  FFF6         	movff	??_animation3,tblptrl
  8025  006CA0  C059  FFF7         	movff	??_animation3+1,tblptrh
  8026  006CA4                     	if	0	;tblptru may be non-zero
  8027  006CA4                     	endif
  8028  006CA4                     	if	0	;tblptru may be non-zero
  8029  006CA4                     	endif
  8030  006CA4  0008               	tblrd		*
  8031  006CA6  50F5               	movf	tablat,w,c
  8032  006CA8  EC2F  F025         	call	_clr_led
  8033                           
  8034                           ;newmain.c: 851: else
  8035                           ;newmain.c: 852: break;
  8036  006CAC  4A5F               	infsnz	animation3@j,f,c
  8037  006CAE  2A60               	incf	animation3@j+1,f,c
  8038  006CB0  D7B8               	goto	l3964
  8039  006CB2                     u4790:
  8040  006CB2                     l3976:
  8041                           
  8042                           ;newmain.c: 853: }
  8043                           ;newmain.c: 854: write_display();
  8044  006CB2  EC8A  F025         	call	_write_display	;wreg free
  8045  006CB6  4A5D               	infsnz	animation3@i,f,c
  8046  006CB8  2A5E               	incf	animation3@i+1,f,c
  8047  006CBA  BE5E               	btfsc	animation3@i+1,7,c
  8048  006CBC  D758               	goto	l363
  8049  006CBE  505E               	movf	animation3@i+1,w,c
  8050  006CC0  E101               	bnz	u4800
  8051  006CC2  D74F               	goto	L13
  8052  006CC4                     u4800:
  8053                           
  8054                           ;newmain.c: 855: }
  8055                           ;newmain.c: 856: } else if (m == 2) {
  8056  006CC4  0012               	return	
  8057  006CC6                     l362:
  8058  006CC6  0E02               	movlw	2
  8059  006CC8  185C               	xorwf	animation3@m,w,c
  8060  006CCA  A4D8               	btfss	status,2,c
  8061  006CCC  D0B9               	goto	l374
  8062                           
  8063                           ;newmain.c: 857: for (i = 0; i < 5; i++) {
  8064  006CCE  0E00               	movlw	0
  8065  006CD0  6E5E               	movwf	animation3@i+1,c
  8066  006CD2  0E00               	movlw	0
  8067  006CD4  6E5D               	movwf	animation3@i,c
  8068  006CD6  BE5E               	btfsc	animation3@i+1,7,c
  8069  006CD8  D008               	goto	l375
  8070  006CDA  505E               	movf	animation3@i+1,w,c
  8071  006CDC  E105               	bnz	u4820
  8072  006CDE  0E05               	movlw	5
  8073  006CE0  5C5D               	subwf	animation3@i,w,c
  8074  006CE2  B0D8               	btfsc	status,0,c
  8075  006CE4  0012               	return	
  8076  006CE6  D001               	goto	l375
  8077  006CE8                     u4820:
  8078  006CE8  0012               	return	
  8079  006CEA                     l375:
  8080                           
  8081                           ;newmain.c: 858: for (j = 0; j < 4; j++) {
  8082  006CEA  0E00               	movlw	0
  8083  006CEC  6E60               	movwf	animation3@j+1,c
  8084  006CEE  0E00               	movlw	0
  8085  006CF0  6E5F               	movwf	animation3@j,c
  8086  006CF2                     l3992:
  8087  006CF2  BE60               	btfsc	animation3@j+1,7,c
  8088  006CF4  D006               	goto	l377
  8089  006CF6  5060               	movf	animation3@j+1,w,c
  8090  006CF8  E144               	bnz	l4004
  8091  006CFA  0E04               	movlw	4
  8092  006CFC  5C5F               	subwf	animation3@j,w,c
  8093  006CFE  B0D8               	btfsc	status,0,c
  8094  006D00  D040               	goto	u4850
  8095  006D02                     l377:
  8096                           
  8097                           ;newmain.c: 859: if (show3_3[i][j] != 100)
  8098  006D02  C05D  F058         	movff	animation3@i,??_animation3
  8099  006D06  C05E  F059         	movff	animation3@i+1,??_animation3+1
  8100  006D0A  90D8               	bcf	status,0,c
  8101  006D0C  3658               	rlcf	??_animation3,f,c
  8102  006D0E  3659               	rlcf	??_animation3+1,f,c
  8103  006D10  90D8               	bcf	status,0,c
  8104  006D12  3658               	rlcf	??_animation3,f,c
  8105  006D14  3659               	rlcf	??_animation3+1,f,c
  8106  006D16  0ECB               	movlw	low _show3_3
  8107  006D18  6E5A               	movwf	(??_animation3+2)& (0+255),c
  8108  006D1A  0E7F               	movlw	high _show3_3
  8109  006D1C  6E5B               	movwf	(??_animation3+3)& (0+255),c
  8110  006D1E  5058               	movf	??_animation3,w,c
  8111  006D20  265A               	addwf	??_animation3+2,f,c
  8112  006D22  5059               	movf	??_animation3+1,w,c
  8113  006D24  225B               	addwfc	??_animation3+3,f,c
  8114  006D26  505F               	movf	animation3@j,w,c
  8115  006D28  265A               	addwf	??_animation3+2,f,c
  8116  006D2A  5060               	movf	animation3@j+1,w,c
  8117  006D2C  225B               	addwfc	??_animation3+3,f,c
  8118  006D2E  C05A  FFF6         	movff	??_animation3+2,tblptrl
  8119  006D32  C05B  FFF7         	movff	??_animation3+3,tblptrh
  8120  006D36                     	if	0	;tblptru may be non-zero
  8121  006D36                     	endif
  8122  006D36                     	if	0	;tblptru may be non-zero
  8123  006D36                     	endif
  8124  006D36  0008               	tblrd		*
  8125  006D38  50F5               	movf	tablat,w,c
  8126  006D3A  0A64               	xorlw	100
  8127  006D3C  B4D8               	btfsc	status,2,c
  8128  006D3E  D021               	goto	u4850
  8129                           
  8130                           ;newmain.c: 860: set_led(show3_3[i][j]);
  8131  006D40  C05D  F058         	movff	animation3@i,??_animation3
  8132  006D44  C05E  F059         	movff	animation3@i+1,??_animation3+1
  8133  006D48  90D8               	bcf	status,0,c
  8134  006D4A  3658               	rlcf	??_animation3,f,c
  8135  006D4C  3659               	rlcf	??_animation3+1,f,c
  8136  006D4E  90D8               	bcf	status,0,c
  8137  006D50  3658               	rlcf	??_animation3,f,c
  8138  006D52  3659               	rlcf	??_animation3+1,f,c
  8139  006D54  0ECB               	movlw	low _show3_3
  8140  006D56  6E5A               	movwf	(??_animation3+2)& (0+255),c
  8141  006D58  0E7F               	movlw	high _show3_3
  8142  006D5A  6E5B               	movwf	(??_animation3+3)& (0+255),c
  8143  006D5C  5058               	movf	??_animation3,w,c
  8144  006D5E  265A               	addwf	??_animation3+2,f,c
  8145  006D60  5059               	movf	??_animation3+1,w,c
  8146  006D62  225B               	addwfc	??_animation3+3,f,c
  8147  006D64  505F               	movf	animation3@j,w,c
  8148  006D66  265A               	addwf	??_animation3+2,f,c
  8149  006D68  5060               	movf	animation3@j+1,w,c
  8150  006D6A  225B               	addwfc	??_animation3+3,f,c
  8151  006D6C  C05A  FFF6         	movff	??_animation3+2,tblptrl
  8152  006D70  C05B  FFF7         	movff	??_animation3+3,tblptrh
  8153  006D74                     	if	0	;tblptru may be non-zero
  8154  006D74                     	endif
  8155  006D74                     	if	0	;tblptru may be non-zero
  8156  006D74                     	endif
  8157  006D74  0008               	tblrd		*
  8158  006D76  50F5               	movf	tablat,w,c
  8159  006D78  ECD8  F024         	call	_set_led
  8160                           
  8161                           ;newmain.c: 861: else
  8162                           ;newmain.c: 862: break;
  8163  006D7C  4A5F               	infsnz	animation3@j,f,c
  8164  006D7E  2A60               	incf	animation3@j+1,f,c
  8165  006D80  D7B8               	goto	l3992
  8166  006D82                     u4850:
  8167  006D82                     l4004:
  8168                           
  8169                           ;newmain.c: 863: }
  8170                           ;newmain.c: 864: write_display();
  8171  006D82  EC8A  F025         	call	_write_display	;wreg free
  8172                           
  8173                           ;newmain.c: 865: _delay((unsigned long)((10)*(4000000/4000.0)));
  8174  006D86  0E0D               	movlw	13
  8175  006D88  6E58               	movwf	??_animation3& (0+255),c
  8176  006D8A  0EFC               	movlw	252
  8177  006D8C                     u7067:
  8178  006D8C  2EE8               	decfsz	wreg,f,c
  8179  006D8E  D7FE               	bra	u7067
  8180  006D90  2E58               	decfsz	??_animation3& (0+255),f,c
  8181  006D92  D7FC               	bra	u7067
  8182                           
  8183                           ;newmain.c: 866: for (j = 0; j < 4; j++) {
  8184  006D94  0E00               	movlw	0
  8185  006D96  6E60               	movwf	animation3@j+1,c
  8186  006D98  0E00               	movlw	0
  8187  006D9A  6E5F               	movwf	animation3@j,c
  8188  006D9C                     l4010:
  8189  006D9C  BE60               	btfsc	animation3@j+1,7,c
  8190  006D9E  D006               	goto	l381
  8191  006DA0  5060               	movf	animation3@j+1,w,c
  8192  006DA2  E144               	bnz	l4022
  8193  006DA4  0E04               	movlw	4
  8194  006DA6  5C5F               	subwf	animation3@j,w,c
  8195  006DA8  B0D8               	btfsc	status,0,c
  8196  006DAA  D040               	goto	u4880
  8197  006DAC                     l381:
  8198                           
  8199                           ;newmain.c: 867: if (show3_3[i][j] != 100)
  8200  006DAC  C05D  F058         	movff	animation3@i,??_animation3
  8201  006DB0  C05E  F059         	movff	animation3@i+1,??_animation3+1
  8202  006DB4  90D8               	bcf	status,0,c
  8203  006DB6  3658               	rlcf	??_animation3,f,c
  8204  006DB8  3659               	rlcf	??_animation3+1,f,c
  8205  006DBA  90D8               	bcf	status,0,c
  8206  006DBC  3658               	rlcf	??_animation3,f,c
  8207  006DBE  3659               	rlcf	??_animation3+1,f,c
  8208  006DC0  0ECB               	movlw	low _show3_3
  8209  006DC2  6E5A               	movwf	(??_animation3+2)& (0+255),c
  8210  006DC4  0E7F               	movlw	high _show3_3
  8211  006DC6  6E5B               	movwf	(??_animation3+3)& (0+255),c
  8212  006DC8  5058               	movf	??_animation3,w,c
  8213  006DCA  265A               	addwf	??_animation3+2,f,c
  8214  006DCC  5059               	movf	??_animation3+1,w,c
  8215  006DCE  225B               	addwfc	??_animation3+3,f,c
  8216  006DD0  505F               	movf	animation3@j,w,c
  8217  006DD2  265A               	addwf	??_animation3+2,f,c
  8218  006DD4  5060               	movf	animation3@j+1,w,c
  8219  006DD6  225B               	addwfc	??_animation3+3,f,c
  8220  006DD8  C05A  FFF6         	movff	??_animation3+2,tblptrl
  8221  006DDC  C05B  FFF7         	movff	??_animation3+3,tblptrh
  8222  006DE0                     	if	0	;tblptru may be non-zero
  8223  006DE0                     	endif
  8224  006DE0                     	if	0	;tblptru may be non-zero
  8225  006DE0                     	endif
  8226  006DE0  0008               	tblrd		*
  8227  006DE2  50F5               	movf	tablat,w,c
  8228  006DE4  0A64               	xorlw	100
  8229  006DE6  B4D8               	btfsc	status,2,c
  8230  006DE8  D021               	goto	u4880
  8231                           
  8232                           ;newmain.c: 868: clr_led(show3_3[i][j]);
  8233  006DEA  C05D  F058         	movff	animation3@i,??_animation3
  8234  006DEE  C05E  F059         	movff	animation3@i+1,??_animation3+1
  8235  006DF2  90D8               	bcf	status,0,c
  8236  006DF4  3658               	rlcf	??_animation3,f,c
  8237  006DF6  3659               	rlcf	??_animation3+1,f,c
  8238  006DF8  90D8               	bcf	status,0,c
  8239  006DFA  3658               	rlcf	??_animation3,f,c
  8240  006DFC  3659               	rlcf	??_animation3+1,f,c
  8241  006DFE  0ECB               	movlw	low _show3_3
  8242  006E00  6E5A               	movwf	(??_animation3+2)& (0+255),c
  8243  006E02  0E7F               	movlw	high _show3_3
  8244  006E04  6E5B               	movwf	(??_animation3+3)& (0+255),c
  8245  006E06  5058               	movf	??_animation3,w,c
  8246  006E08  265A               	addwf	??_animation3+2,f,c
  8247  006E0A  5059               	movf	??_animation3+1,w,c
  8248  006E0C  225B               	addwfc	??_animation3+3,f,c
  8249  006E0E  505F               	movf	animation3@j,w,c
  8250  006E10  265A               	addwf	??_animation3+2,f,c
  8251  006E12  5060               	movf	animation3@j+1,w,c
  8252  006E14  225B               	addwfc	??_animation3+3,f,c
  8253  006E16  C05A  FFF6         	movff	??_animation3+2,tblptrl
  8254  006E1A  C05B  FFF7         	movff	??_animation3+3,tblptrh
  8255  006E1E                     	if	0	;tblptru may be non-zero
  8256  006E1E                     	endif
  8257  006E1E                     	if	0	;tblptru may be non-zero
  8258  006E1E                     	endif
  8259  006E1E  0008               	tblrd		*
  8260  006E20  50F5               	movf	tablat,w,c
  8261  006E22  EC2F  F025         	call	_clr_led
  8262                           
  8263                           ;newmain.c: 869: else
  8264                           ;newmain.c: 870: break;
  8265  006E26  4A5F               	infsnz	animation3@j,f,c
  8266  006E28  2A60               	incf	animation3@j+1,f,c
  8267  006E2A  D7B8               	goto	l4010
  8268  006E2C                     u4880:
  8269  006E2C                     l4022:
  8270                           
  8271                           ;newmain.c: 871: }
  8272                           ;newmain.c: 872: write_display();
  8273  006E2C  EC8A  F025         	call	_write_display	;wreg free
  8274  006E30  4A5D               	infsnz	animation3@i,f,c
  8275  006E32  2A5E               	incf	animation3@i+1,f,c
  8276  006E34  BE5E               	btfsc	animation3@i+1,7,c
  8277  006E36  D759               	goto	l375
  8278  006E38  505E               	movf	animation3@i+1,w,c
  8279  006E3A  E101               	bnz	u4890
  8280  006E3C  D750               	goto	L14
  8281  006E3E                     u4890:
  8282                           
  8283                           ;newmain.c: 873: }
  8284                           ;newmain.c: 874: } else if (m == 3) {
  8285  006E3E  0012               	return	
  8286  006E40                     l374:
  8287  006E40  0E03               	movlw	3
  8288  006E42  185C               	xorwf	animation3@m,w,c
  8289  006E44  A4D8               	btfss	status,2,c
  8290  006E46  0012               	return	
  8291                           
  8292                           ;newmain.c: 876: for (i = 3; i >= 0; i--) {
  8293  006E48  0E00               	movlw	0
  8294  006E4A  6E5E               	movwf	animation3@i+1,c
  8295  006E4C  0E03               	movlw	3
  8296  006E4E  6E5D               	movwf	animation3@i,c
  8297  006E50                     l4032:
  8298  006E50  BE5E               	btfsc	animation3@i+1,7,c
  8299  006E52  D0A7               	goto	u4980
  8300                           
  8301                           ;newmain.c: 877: for (j = 0; j < 26; j++) {
  8302  006E54  0E00               	movlw	0
  8303  006E56  6E60               	movwf	animation3@j+1,c
  8304  006E58  0E00               	movlw	0
  8305  006E5A  6E5F               	movwf	animation3@j,c
  8306  006E5C                     l4038:
  8307  006E5C  BE60               	btfsc	animation3@j+1,7,c
  8308  006E5E  D006               	goto	l389
  8309  006E60  5060               	movf	animation3@j+1,w,c
  8310  006E62  E144               	bnz	l4050
  8311  006E64  0E1A               	movlw	26
  8312  006E66  5C5F               	subwf	animation3@j,w,c
  8313  006E68  B0D8               	btfsc	status,0,c
  8314  006E6A  D040               	goto	u4940
  8315  006E6C                     l389:
  8316                           
  8317                           ;newmain.c: 878: if (circle[i][j] != 100)
  8318  006E6C  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8319  006E70  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8320  006E74  0E00               	movlw	0
  8321  006E76  6E46               	movwf	___wmul@multiplicand+1,c
  8322  006E78  0E1A               	movlw	26
  8323  006E7A  6E45               	movwf	___wmul@multiplicand,c
  8324  006E7C  EC71  F023         	call	___wmul	;wreg free
  8325  006E80  0E41               	movlw	low _circle
  8326  006E82  6E58               	movwf	??_animation3& (0+255),c
  8327  006E84  0E7C               	movlw	high _circle
  8328  006E86  6E59               	movwf	(??_animation3+1)& (0+255),c
  8329  006E88  5043               	movf	?___wmul,w,c
  8330  006E8A  2658               	addwf	??_animation3,f,c
  8331  006E8C  5044               	movf	?___wmul+1,w,c
  8332  006E8E  2259               	addwfc	??_animation3+1,f,c
  8333  006E90  505F               	movf	animation3@j,w,c
  8334  006E92  2658               	addwf	??_animation3,f,c
  8335  006E94  5060               	movf	animation3@j+1,w,c
  8336  006E96  2259               	addwfc	??_animation3+1,f,c
  8337  006E98  C058  FFF6         	movff	??_animation3,tblptrl
  8338  006E9C  C059  FFF7         	movff	??_animation3+1,tblptrh
  8339  006EA0                     	if	0	;tblptru may be non-zero
  8340  006EA0                     	endif
  8341  006EA0                     	if	0	;tblptru may be non-zero
  8342  006EA0                     	endif
  8343  006EA0  0008               	tblrd		*
  8344  006EA2  50F5               	movf	tablat,w,c
  8345  006EA4  0A64               	xorlw	100
  8346  006EA6  B4D8               	btfsc	status,2,c
  8347  006EA8  D021               	goto	u4940
  8348                           
  8349                           ;newmain.c: 879: set_led(circle[i][j]);
  8350  006EAA  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8351  006EAE  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8352  006EB2  0E00               	movlw	0
  8353  006EB4  6E46               	movwf	___wmul@multiplicand+1,c
  8354  006EB6  0E1A               	movlw	26
  8355  006EB8  6E45               	movwf	___wmul@multiplicand,c
  8356  006EBA  EC71  F023         	call	___wmul	;wreg free
  8357  006EBE  0E41               	movlw	low _circle
  8358  006EC0  6E58               	movwf	??_animation3& (0+255),c
  8359  006EC2  0E7C               	movlw	high _circle
  8360  006EC4  6E59               	movwf	(??_animation3+1)& (0+255),c
  8361  006EC6  5043               	movf	?___wmul,w,c
  8362  006EC8  2658               	addwf	??_animation3,f,c
  8363  006ECA  5044               	movf	?___wmul+1,w,c
  8364  006ECC  2259               	addwfc	??_animation3+1,f,c
  8365  006ECE  505F               	movf	animation3@j,w,c
  8366  006ED0  2658               	addwf	??_animation3,f,c
  8367  006ED2  5060               	movf	animation3@j+1,w,c
  8368  006ED4  2259               	addwfc	??_animation3+1,f,c
  8369  006ED6  C058  FFF6         	movff	??_animation3,tblptrl
  8370  006EDA  C059  FFF7         	movff	??_animation3+1,tblptrh
  8371  006EDE                     	if	0	;tblptru may be non-zero
  8372  006EDE                     	endif
  8373  006EDE                     	if	0	;tblptru may be non-zero
  8374  006EDE                     	endif
  8375  006EDE  0008               	tblrd		*
  8376  006EE0  50F5               	movf	tablat,w,c
  8377  006EE2  ECD8  F024         	call	_set_led
  8378                           
  8379                           ;newmain.c: 880: else
  8380                           ;newmain.c: 881: break;
  8381  006EE6  4A5F               	infsnz	animation3@j,f,c
  8382  006EE8  2A60               	incf	animation3@j+1,f,c
  8383  006EEA  D7B8               	goto	l4038
  8384  006EEC                     u4940:
  8385  006EEC                     l4050:
  8386                           
  8387                           ;newmain.c: 882: }
  8388                           ;newmain.c: 883: write_display();
  8389  006EEC  EC8A  F025         	call	_write_display	;wreg free
  8390                           
  8391                           ;newmain.c: 884: _delay((unsigned long)((10)*(4000000/4000.0)));
  8392  006EF0  0E0D               	movlw	13
  8393  006EF2  6E58               	movwf	??_animation3& (0+255),c
  8394  006EF4  0EFC               	movlw	252
  8395  006EF6                     u7077:
  8396  006EF6  2EE8               	decfsz	wreg,f,c
  8397  006EF8  D7FE               	bra	u7077
  8398  006EFA  2E58               	decfsz	??_animation3& (0+255),f,c
  8399  006EFC  D7FC               	bra	u7077
  8400                           
  8401                           ;newmain.c: 885: for (j = 0; j < 26; j++) {
  8402  006EFE  0E00               	movlw	0
  8403  006F00  6E60               	movwf	animation3@j+1,c
  8404  006F02  0E00               	movlw	0
  8405  006F04  6E5F               	movwf	animation3@j,c
  8406  006F06                     l4056:
  8407  006F06  BE60               	btfsc	animation3@j+1,7,c
  8408  006F08  D006               	goto	l393
  8409  006F0A  5060               	movf	animation3@j+1,w,c
  8410  006F0C  E144               	bnz	l4068
  8411  006F0E  0E1A               	movlw	26
  8412  006F10  5C5F               	subwf	animation3@j,w,c
  8413  006F12  B0D8               	btfsc	status,0,c
  8414  006F14  D040               	goto	u4970
  8415  006F16                     l393:
  8416                           
  8417                           ;newmain.c: 886: if (circle[i][j] != 100)
  8418  006F16  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8419  006F1A  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8420  006F1E  0E00               	movlw	0
  8421  006F20  6E46               	movwf	___wmul@multiplicand+1,c
  8422  006F22  0E1A               	movlw	26
  8423  006F24  6E45               	movwf	___wmul@multiplicand,c
  8424  006F26  EC71  F023         	call	___wmul	;wreg free
  8425  006F2A  0E41               	movlw	low _circle
  8426  006F2C  6E58               	movwf	??_animation3& (0+255),c
  8427  006F2E  0E7C               	movlw	high _circle
  8428  006F30  6E59               	movwf	(??_animation3+1)& (0+255),c
  8429  006F32  5043               	movf	?___wmul,w,c
  8430  006F34  2658               	addwf	??_animation3,f,c
  8431  006F36  5044               	movf	?___wmul+1,w,c
  8432  006F38  2259               	addwfc	??_animation3+1,f,c
  8433  006F3A  505F               	movf	animation3@j,w,c
  8434  006F3C  2658               	addwf	??_animation3,f,c
  8435  006F3E  5060               	movf	animation3@j+1,w,c
  8436  006F40  2259               	addwfc	??_animation3+1,f,c
  8437  006F42  C058  FFF6         	movff	??_animation3,tblptrl
  8438  006F46  C059  FFF7         	movff	??_animation3+1,tblptrh
  8439  006F4A                     	if	0	;tblptru may be non-zero
  8440  006F4A                     	endif
  8441  006F4A                     	if	0	;tblptru may be non-zero
  8442  006F4A                     	endif
  8443  006F4A  0008               	tblrd		*
  8444  006F4C  50F5               	movf	tablat,w,c
  8445  006F4E  0A64               	xorlw	100
  8446  006F50  B4D8               	btfsc	status,2,c
  8447  006F52  D021               	goto	u4970
  8448                           
  8449                           ;newmain.c: 887: clr_led(circle[i][j]);
  8450  006F54  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8451  006F58  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8452  006F5C  0E00               	movlw	0
  8453  006F5E  6E46               	movwf	___wmul@multiplicand+1,c
  8454  006F60  0E1A               	movlw	26
  8455  006F62  6E45               	movwf	___wmul@multiplicand,c
  8456  006F64  EC71  F023         	call	___wmul	;wreg free
  8457  006F68  0E41               	movlw	low _circle
  8458  006F6A  6E58               	movwf	??_animation3& (0+255),c
  8459  006F6C  0E7C               	movlw	high _circle
  8460  006F6E  6E59               	movwf	(??_animation3+1)& (0+255),c
  8461  006F70  5043               	movf	?___wmul,w,c
  8462  006F72  2658               	addwf	??_animation3,f,c
  8463  006F74  5044               	movf	?___wmul+1,w,c
  8464  006F76  2259               	addwfc	??_animation3+1,f,c
  8465  006F78  505F               	movf	animation3@j,w,c
  8466  006F7A  2658               	addwf	??_animation3,f,c
  8467  006F7C  5060               	movf	animation3@j+1,w,c
  8468  006F7E  2259               	addwfc	??_animation3+1,f,c
  8469  006F80  C058  FFF6         	movff	??_animation3,tblptrl
  8470  006F84  C059  FFF7         	movff	??_animation3+1,tblptrh
  8471  006F88                     	if	0	;tblptru may be non-zero
  8472  006F88                     	endif
  8473  006F88                     	if	0	;tblptru may be non-zero
  8474  006F88                     	endif
  8475  006F88  0008               	tblrd		*
  8476  006F8A  50F5               	movf	tablat,w,c
  8477  006F8C  EC2F  F025         	call	_clr_led
  8478                           
  8479                           ;newmain.c: 888: else
  8480                           ;newmain.c: 889: break;
  8481  006F90  4A5F               	infsnz	animation3@j,f,c
  8482  006F92  2A60               	incf	animation3@j+1,f,c
  8483  006F94  D7B8               	goto	l4056
  8484  006F96                     u4970:
  8485  006F96                     l4068:
  8486                           
  8487                           ;newmain.c: 890: }
  8488                           ;newmain.c: 891: write_display();
  8489  006F96  EC8A  F025         	call	_write_display	;wreg free
  8490  006F9A  065D               	decf	animation3@i,f,c
  8491  006F9C  A0D8               	btfss	status,0,c
  8492  006F9E  065E               	decf	animation3@i+1,f,c
  8493  006FA0  D757               	goto	l4032
  8494  006FA2                     u4980:
  8495                           
  8496                           ;newmain.c: 892: }
  8497                           ;newmain.c: 894: for (i = 0; i < 3; i++) {
  8498  006FA2  0E00               	movlw	0
  8499  006FA4  6E5E               	movwf	animation3@i+1,c
  8500  006FA6  0E00               	movlw	0
  8501  006FA8  6E5D               	movwf	animation3@i,c
  8502  006FAA  BE5E               	btfsc	animation3@i+1,7,c
  8503  006FAC  D008               	goto	l397
  8504  006FAE  505E               	movf	animation3@i+1,w,c
  8505  006FB0  E105               	bnz	u4990
  8506  006FB2  0E03               	movlw	3
  8507  006FB4  5C5D               	subwf	animation3@i,w,c
  8508  006FB6  B0D8               	btfsc	status,0,c
  8509  006FB8  0012               	return	
  8510  006FBA  D001               	goto	l397
  8511  006FBC                     u4990:
  8512  006FBC  0012               	return	
  8513  006FBE                     l397:
  8514                           
  8515                           ;newmain.c: 895: for (j = 0; j < 26; j++) {
  8516  006FBE  0E00               	movlw	0
  8517  006FC0  6E60               	movwf	animation3@j+1,c
  8518  006FC2  0E00               	movlw	0
  8519  006FC4  6E5F               	movwf	animation3@j,c
  8520  006FC6                     l4082:
  8521  006FC6  BE60               	btfsc	animation3@j+1,7,c
  8522  006FC8  D006               	goto	l399
  8523  006FCA  5060               	movf	animation3@j+1,w,c
  8524  006FCC  E144               	bnz	l4094
  8525  006FCE  0E1A               	movlw	26
  8526  006FD0  5C5F               	subwf	animation3@j,w,c
  8527  006FD2  B0D8               	btfsc	status,0,c
  8528  006FD4  D040               	goto	u5020
  8529  006FD6                     l399:
  8530                           
  8531                           ;newmain.c: 896: if (circle[i][j] != 100)
  8532  006FD6  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8533  006FDA  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8534  006FDE  0E00               	movlw	0
  8535  006FE0  6E46               	movwf	___wmul@multiplicand+1,c
  8536  006FE2  0E1A               	movlw	26
  8537  006FE4  6E45               	movwf	___wmul@multiplicand,c
  8538  006FE6  EC71  F023         	call	___wmul	;wreg free
  8539  006FEA  0E41               	movlw	low _circle
  8540  006FEC  6E58               	movwf	??_animation3& (0+255),c
  8541  006FEE  0E7C               	movlw	high _circle
  8542  006FF0  6E59               	movwf	(??_animation3+1)& (0+255),c
  8543  006FF2  5043               	movf	?___wmul,w,c
  8544  006FF4  2658               	addwf	??_animation3,f,c
  8545  006FF6  5044               	movf	?___wmul+1,w,c
  8546  006FF8  2259               	addwfc	??_animation3+1,f,c
  8547  006FFA  505F               	movf	animation3@j,w,c
  8548  006FFC  2658               	addwf	??_animation3,f,c
  8549  006FFE  5060               	movf	animation3@j+1,w,c
  8550  007000  2259               	addwfc	??_animation3+1,f,c
  8551  007002  C058  FFF6         	movff	??_animation3,tblptrl
  8552  007006  C059  FFF7         	movff	??_animation3+1,tblptrh
  8553  00700A                     	if	0	;tblptru may be non-zero
  8554  00700A                     	endif
  8555  00700A                     	if	0	;tblptru may be non-zero
  8556  00700A                     	endif
  8557  00700A  0008               	tblrd		*
  8558  00700C  50F5               	movf	tablat,w,c
  8559  00700E  0A64               	xorlw	100
  8560  007010  B4D8               	btfsc	status,2,c
  8561  007012  D021               	goto	u5020
  8562                           
  8563                           ;newmain.c: 897: set_led(circle[i][j]);
  8564  007014  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8565  007018  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8566  00701C  0E00               	movlw	0
  8567  00701E  6E46               	movwf	___wmul@multiplicand+1,c
  8568  007020  0E1A               	movlw	26
  8569  007022  6E45               	movwf	___wmul@multiplicand,c
  8570  007024  EC71  F023         	call	___wmul	;wreg free
  8571  007028  0E41               	movlw	low _circle
  8572  00702A  6E58               	movwf	??_animation3& (0+255),c
  8573  00702C  0E7C               	movlw	high _circle
  8574  00702E  6E59               	movwf	(??_animation3+1)& (0+255),c
  8575  007030  5043               	movf	?___wmul,w,c
  8576  007032  2658               	addwf	??_animation3,f,c
  8577  007034  5044               	movf	?___wmul+1,w,c
  8578  007036  2259               	addwfc	??_animation3+1,f,c
  8579  007038  505F               	movf	animation3@j,w,c
  8580  00703A  2658               	addwf	??_animation3,f,c
  8581  00703C  5060               	movf	animation3@j+1,w,c
  8582  00703E  2259               	addwfc	??_animation3+1,f,c
  8583  007040  C058  FFF6         	movff	??_animation3,tblptrl
  8584  007044  C059  FFF7         	movff	??_animation3+1,tblptrh
  8585  007048                     	if	0	;tblptru may be non-zero
  8586  007048                     	endif
  8587  007048                     	if	0	;tblptru may be non-zero
  8588  007048                     	endif
  8589  007048  0008               	tblrd		*
  8590  00704A  50F5               	movf	tablat,w,c
  8591  00704C  ECD8  F024         	call	_set_led
  8592                           
  8593                           ;newmain.c: 898: else
  8594                           ;newmain.c: 899: break;
  8595  007050  4A5F               	infsnz	animation3@j,f,c
  8596  007052  2A60               	incf	animation3@j+1,f,c
  8597  007054  D7B8               	goto	l4082
  8598  007056                     u5020:
  8599  007056                     l4094:
  8600                           
  8601                           ;newmain.c: 900: }
  8602                           ;newmain.c: 901: write_display();
  8603  007056  EC8A  F025         	call	_write_display	;wreg free
  8604                           
  8605                           ;newmain.c: 902: _delay((unsigned long)((10)*(4000000/4000.0)));
  8606  00705A  0E0D               	movlw	13
  8607  00705C  6E58               	movwf	??_animation3& (0+255),c
  8608  00705E  0EFC               	movlw	252
  8609  007060                     u7087:
  8610  007060  2EE8               	decfsz	wreg,f,c
  8611  007062  D7FE               	bra	u7087
  8612  007064  2E58               	decfsz	??_animation3& (0+255),f,c
  8613  007066  D7FC               	bra	u7087
  8614                           
  8615                           ;newmain.c: 903: for (j = 0; j < 26; j++) {
  8616  007068  0E00               	movlw	0
  8617  00706A  6E60               	movwf	animation3@j+1,c
  8618  00706C  0E00               	movlw	0
  8619  00706E  6E5F               	movwf	animation3@j,c
  8620  007070                     l4100:
  8621  007070  BE60               	btfsc	animation3@j+1,7,c
  8622  007072  D006               	goto	l403
  8623  007074  5060               	movf	animation3@j+1,w,c
  8624  007076  E144               	bnz	l4112
  8625  007078  0E1A               	movlw	26
  8626  00707A  5C5F               	subwf	animation3@j,w,c
  8627  00707C  B0D8               	btfsc	status,0,c
  8628  00707E  D040               	goto	u5050
  8629  007080                     l403:
  8630                           
  8631                           ;newmain.c: 904: if (circle[i][j] != 100)
  8632  007080  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8633  007084  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8634  007088  0E00               	movlw	0
  8635  00708A  6E46               	movwf	___wmul@multiplicand+1,c
  8636  00708C  0E1A               	movlw	26
  8637  00708E  6E45               	movwf	___wmul@multiplicand,c
  8638  007090  EC71  F023         	call	___wmul	;wreg free
  8639  007094  0E41               	movlw	low _circle
  8640  007096  6E58               	movwf	??_animation3& (0+255),c
  8641  007098  0E7C               	movlw	high _circle
  8642  00709A  6E59               	movwf	(??_animation3+1)& (0+255),c
  8643  00709C  5043               	movf	?___wmul,w,c
  8644  00709E  2658               	addwf	??_animation3,f,c
  8645  0070A0  5044               	movf	?___wmul+1,w,c
  8646  0070A2  2259               	addwfc	??_animation3+1,f,c
  8647  0070A4  505F               	movf	animation3@j,w,c
  8648  0070A6  2658               	addwf	??_animation3,f,c
  8649  0070A8  5060               	movf	animation3@j+1,w,c
  8650  0070AA  2259               	addwfc	??_animation3+1,f,c
  8651  0070AC  C058  FFF6         	movff	??_animation3,tblptrl
  8652  0070B0  C059  FFF7         	movff	??_animation3+1,tblptrh
  8653  0070B4                     	if	0	;tblptru may be non-zero
  8654  0070B4                     	endif
  8655  0070B4                     	if	0	;tblptru may be non-zero
  8656  0070B4                     	endif
  8657  0070B4  0008               	tblrd		*
  8658  0070B6  50F5               	movf	tablat,w,c
  8659  0070B8  0A64               	xorlw	100
  8660  0070BA  B4D8               	btfsc	status,2,c
  8661  0070BC  D021               	goto	u5050
  8662                           
  8663                           ;newmain.c: 905: clr_led(circle[i][j]);
  8664  0070BE  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8665  0070C2  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8666  0070C6  0E00               	movlw	0
  8667  0070C8  6E46               	movwf	___wmul@multiplicand+1,c
  8668  0070CA  0E1A               	movlw	26
  8669  0070CC  6E45               	movwf	___wmul@multiplicand,c
  8670  0070CE  EC71  F023         	call	___wmul	;wreg free
  8671  0070D2  0E41               	movlw	low _circle
  8672  0070D4  6E58               	movwf	??_animation3& (0+255),c
  8673  0070D6  0E7C               	movlw	high _circle
  8674  0070D8  6E59               	movwf	(??_animation3+1)& (0+255),c
  8675  0070DA  5043               	movf	?___wmul,w,c
  8676  0070DC  2658               	addwf	??_animation3,f,c
  8677  0070DE  5044               	movf	?___wmul+1,w,c
  8678  0070E0  2259               	addwfc	??_animation3+1,f,c
  8679  0070E2  505F               	movf	animation3@j,w,c
  8680  0070E4  2658               	addwf	??_animation3,f,c
  8681  0070E6  5060               	movf	animation3@j+1,w,c
  8682  0070E8  2259               	addwfc	??_animation3+1,f,c
  8683  0070EA  C058  FFF6         	movff	??_animation3,tblptrl
  8684  0070EE  C059  FFF7         	movff	??_animation3+1,tblptrh
  8685  0070F2                     	if	0	;tblptru may be non-zero
  8686  0070F2                     	endif
  8687  0070F2                     	if	0	;tblptru may be non-zero
  8688  0070F2                     	endif
  8689  0070F2  0008               	tblrd		*
  8690  0070F4  50F5               	movf	tablat,w,c
  8691  0070F6  EC2F  F025         	call	_clr_led
  8692                           
  8693                           ;newmain.c: 906: else
  8694                           ;newmain.c: 907: break;
  8695  0070FA  4A5F               	infsnz	animation3@j,f,c
  8696  0070FC  2A60               	incf	animation3@j+1,f,c
  8697  0070FE  D7B8               	goto	l4100
  8698  007100                     u5050:
  8699  007100                     l4112:
  8700                           
  8701                           ;newmain.c: 908: }
  8702                           ;newmain.c: 909: write_display();
  8703  007100  EC8A  F025         	call	_write_display	;wreg free
  8704  007104  4A5D               	infsnz	animation3@i,f,c
  8705  007106  2A5E               	incf	animation3@i+1,f,c
  8706  007108  BE5E               	btfsc	animation3@i+1,7,c
  8707  00710A  D759               	goto	l397
  8708  00710C  505E               	movf	animation3@i+1,w,c
  8709  00710E  E101               	bnz	l407
  8710  007110  D750               	goto	L15
  8711  007112                     l407:
  8712  007112  0012               	return		;funcret
  8713  007114                     __end_of_animation3:
  8714                           	opt stack 0
  8715                           tblptru	equ	0xFF8
  8716                           tblptrh	equ	0xFF7
  8717                           tblptrl	equ	0xFF6
  8718                           tablat	equ	0xFF5
  8719                           prodh	equ	0xFF4
  8720                           prodl	equ	0xFF3
  8721                           postinc0	equ	0xFEE
  8722                           wreg	equ	0xFE8
  8723                           postinc1	equ	0xFE6
  8724                           fsr1h	equ	0xFE2
  8725                           fsr1l	equ	0xFE1
  8726                           indf2	equ	0xFDF
  8727                           postinc2	equ	0xFDE
  8728                           postdec2	equ	0xFDD
  8729                           fsr2h	equ	0xFDA
  8730                           fsr2l	equ	0xFD9
  8731                           status	equ	0xFD8
  8732                           
  8733 ;; *************** function _animation2 *****************
  8734 ;; Defined at:
  8735 ;;		line 723 in file "newmain.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  m               1    wreg     unsigned char 
  8738 ;;  n               1   21[COMRAM] unsigned char 
  8739 ;;  h               1   22[COMRAM] unsigned char 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  m               1   29[COMRAM] unsigned char 
  8742 ;;  j               2   36[COMRAM] int 
  8743 ;;  i               2   34[COMRAM] int 
  8744 ;;  x               2   32[COMRAM] int 
  8745 ;;  row             2   30[COMRAM] int 
  8746 ;;  col             2   27[COMRAM] int 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8756 ;;      Params:         2       0       0       0       0       0       0
  8757 ;;      Locals:        11       0       0       0       0       0       0
  8758 ;;      Temps:          4       0       0       0       0       0       0
  8759 ;;      Totals:        17       0       0       0       0       0       0
  8760 ;;Total ram usage:       17 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    4
  8763 ;; This function calls:
  8764 ;;		___wmul
  8765 ;;		_clr_led
  8766 ;;		_set_led
  8767 ;;		_write_display
  8768 ;; This function is called by:
  8769 ;;		_main
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text14
  8774  0062AC                     __ptext14:
  8775                           	opt stack 0
  8776  0062AC                     _animation2:
  8777                           	opt stack 26
  8778                           
  8779                           ;incstack = 0
  8780                           ;animation2@m stored from wreg
  8781  0062AC  6E60               	movwf	animation2@m,c
  8782                           
  8783                           ;newmain.c: 724: int i = 0, j = 0, x = 0;
  8784  0062AE  0E00               	movlw	0
  8785  0062B0  6E66               	movwf	animation2@i+1,c
  8786  0062B2  0E00               	movlw	0
  8787  0062B4  6E65               	movwf	animation2@i,c
  8788  0062B6  0E00               	movlw	0
  8789  0062B8  6E68               	movwf	animation2@j+1,c
  8790  0062BA  0E00               	movlw	0
  8791  0062BC  6E67               	movwf	animation2@j,c
  8792  0062BE  0E00               	movlw	0
  8793  0062C0  6E64               	movwf	animation2@x+1,c
  8794  0062C2  0E00               	movlw	0
  8795  0062C4  6E63               	movwf	animation2@x,c
  8796                           
  8797                           ;newmain.c: 725: int row = 0, col = n % 4;
  8798  0062C6  0E00               	movlw	0
  8799  0062C8  6E62               	movwf	animation2@row+1,c
  8800  0062CA  0E00               	movlw	0
  8801  0062CC  6E61               	movwf	animation2@row,c
  8802  0062CE  C058  F05A         	movff	animation2@n,??_animation2
  8803  0062D2  0E03               	movlw	3
  8804  0062D4  165A               	andwf	??_animation2,f,c
  8805  0062D6  505A               	movf	??_animation2,w,c
  8806  0062D8  6E5E               	movwf	animation2@col,c
  8807  0062DA  6A5F               	clrf	animation2@col+1,c
  8808                           
  8809                           ;newmain.c: 726: for (i = 0; i < 8; i++) {
  8810  0062DC  0E00               	movlw	0
  8811  0062DE  6E66               	movwf	animation2@i+1,c
  8812  0062E0  0E00               	movlw	0
  8813  0062E2  6E65               	movwf	animation2@i,c
  8814  0062E4                     l3670:
  8815  0062E4  BE66               	btfsc	animation2@i+1,7,c
  8816  0062E6  D006               	goto	l295
  8817  0062E8  5066               	movf	animation2@i+1,w,c
  8818  0062EA  E150               	bnz	l3692
  8819  0062EC  0E08               	movlw	8
  8820  0062EE  5C65               	subwf	animation2@i,w,c
  8821  0062F0  B0D8               	btfsc	status,0,c
  8822  0062F2  D04C               	goto	u4260
  8823  0062F4                     l295:
  8824                           
  8825                           ;newmain.c: 727: for (j = 0; j < 8; j++) {
  8826  0062F4  0E00               	movlw	0
  8827  0062F6  6E68               	movwf	animation2@j+1,c
  8828  0062F8  0E00               	movlw	0
  8829  0062FA  6E67               	movwf	animation2@j,c
  8830  0062FC                     l3676:
  8831  0062FC  BE68               	btfsc	animation2@j+1,7,c
  8832  0062FE  D006               	goto	l297
  8833  006300  5068               	movf	animation2@j+1,w,c
  8834  006302  E141               	bnz	l3688
  8835  006304  0E08               	movlw	8
  8836  006306  5C67               	subwf	animation2@j,w,c
  8837  006308  B0D8               	btfsc	status,0,c
  8838  00630A  D03D               	goto	u4250
  8839  00630C                     l297:
  8840                           
  8841                           ;newmain.c: 728: if (h == Buttons[i][j]) {
  8842  00630C  C065  F05A         	movff	animation2@i,??_animation2
  8843  006310  C066  F05B         	movff	animation2@i+1,??_animation2+1
  8844  006314  90D8               	bcf	status,0,c
  8845  006316  365A               	rlcf	??_animation2,f,c
  8846  006318  365B               	rlcf	??_animation2+1,f,c
  8847  00631A  90D8               	bcf	status,0,c
  8848  00631C  365A               	rlcf	??_animation2,f,c
  8849  00631E  365B               	rlcf	??_animation2+1,f,c
  8850  006320  90D8               	bcf	status,0,c
  8851  006322  365A               	rlcf	??_animation2,f,c
  8852  006324  365B               	rlcf	??_animation2+1,f,c
  8853  006326  0EF9               	movlw	low _Buttons
  8854  006328  6E5C               	movwf	(??_animation2+2)& (0+255),c
  8855  00632A  0E7E               	movlw	high _Buttons
  8856  00632C  6E5D               	movwf	(??_animation2+3)& (0+255),c
  8857  00632E  505A               	movf	??_animation2,w,c
  8858  006330  265C               	addwf	??_animation2+2,f,c
  8859  006332  505B               	movf	??_animation2+1,w,c
  8860  006334  225D               	addwfc	??_animation2+3,f,c
  8861  006336  5067               	movf	animation2@j,w,c
  8862  006338  265C               	addwf	??_animation2+2,f,c
  8863  00633A  5068               	movf	animation2@j+1,w,c
  8864  00633C  225D               	addwfc	??_animation2+3,f,c
  8865  00633E  C05C  FFF6         	movff	??_animation2+2,tblptrl
  8866  006342  C05D  FFF7         	movff	??_animation2+3,tblptrh
  8867  006346                     	if	0	;tblptru may be non-zero
  8868  006346                     	endif
  8869  006346                     	if	0	;tblptru may be non-zero
  8870  006346                     	endif
  8871  006346  0008               	tblrd		*
  8872  006348  50F5               	movf	tablat,w,c
  8873  00634A  1859               	xorwf	animation2@h,w,c
  8874  00634C  A4D8               	btfss	status,2,c
  8875  00634E  D018               	goto	l299
  8876                           
  8877                           ;newmain.c: 729: row = Buttons[i][0];
  8878  006350  C065  F05A         	movff	animation2@i,??_animation2
  8879  006354  C066  F05B         	movff	animation2@i+1,??_animation2+1
  8880  006358  90D8               	bcf	status,0,c
  8881  00635A  365A               	rlcf	??_animation2,f,c
  8882  00635C  365B               	rlcf	??_animation2+1,f,c
  8883  00635E  90D8               	bcf	status,0,c
  8884  006360  365A               	rlcf	??_animation2,f,c
  8885  006362  365B               	rlcf	??_animation2+1,f,c
  8886  006364  90D8               	bcf	status,0,c
  8887  006366  365A               	rlcf	??_animation2,f,c
  8888  006368  365B               	rlcf	??_animation2+1,f,c
  8889  00636A  0EF9               	movlw	low _Buttons
  8890  00636C  245A               	addwf	??_animation2,w,c
  8891  00636E  6EF6               	movwf	tblptrl,c
  8892  006370  0E7E               	movlw	high _Buttons
  8893  006372  205B               	addwfc	??_animation2+1,w,c
  8894  006374  6EF7               	movwf	tblptrh,c
  8895  006376                     	if	0	;There are less than 3 active tblptr bytes
  8896  006376                     	endif
  8897  006376  0008               	tblrd		*
  8898  006378  50F5               	movf	tablat,w,c
  8899  00637A  6E61               	movwf	animation2@row,c
  8900  00637C  6A62               	clrf	animation2@row+1,c
  8901                           
  8902                           ;newmain.c: 730: break;
  8903  00637E  D003               	goto	u4250
  8904  006380                     l299:
  8905  006380  4A67               	infsnz	animation2@j,f,c
  8906  006382  2A68               	incf	animation2@j+1,f,c
  8907  006384  D7BB               	goto	l3676
  8908  006386                     u4250:
  8909  006386                     l3688:
  8910  006386  4A65               	infsnz	animation2@i,f,c
  8911  006388  2A66               	incf	animation2@i+1,f,c
  8912  00638A  D7AC               	goto	l3670
  8913  00638C                     u4260:
  8914  00638C                     l3692:
  8915                           
  8916                           ;newmain.c: 731: }
  8917                           ;newmain.c: 732: }
  8918                           ;newmain.c: 733: }
  8919                           ;newmain.c: 735: if (m == 0) {
  8920  00638C  5060               	movf	animation2@m,w,c
  8921  00638E  A4D8               	btfss	status,2,c
  8922  006390  D0C5               	goto	l300
  8923                           
  8924                           ;newmain.c: 736: for (i = col; i < 8; i++) {
  8925  006392  C05E  F065         	movff	animation2@col,animation2@i
  8926  006396  C05F  F066         	movff	animation2@col+1,animation2@i+1
  8927  00639A  BE66               	btfsc	animation2@i+1,7,c
  8928  00639C  D008               	goto	l301
  8929  00639E  5066               	movf	animation2@i+1,w,c
  8930  0063A0  E105               	bnz	u4280
  8931  0063A2  0E08               	movlw	8
  8932  0063A4  5C65               	subwf	animation2@i,w,c
  8933  0063A6  B0D8               	btfsc	status,0,c
  8934  0063A8  0012               	return	
  8935  0063AA  D001               	goto	l301
  8936  0063AC                     u4280:
  8937  0063AC  0012               	return	
  8938  0063AE                     l301:
  8939                           
  8940                           ;newmain.c: 737: for (j = 0; j < 3; j++){
  8941  0063AE  0E00               	movlw	0
  8942  0063B0  6E68               	movwf	animation2@j+1,c
  8943  0063B2  0E00               	movlw	0
  8944  0063B4  6E67               	movwf	animation2@j,c
  8945  0063B6                     l3702:
  8946  0063B6  BE68               	btfsc	animation2@j+1,7,c
  8947  0063B8  D006               	goto	l303
  8948  0063BA  5068               	movf	animation2@j+1,w,c
  8949  0063BC  E14A               	bnz	l3716
  8950  0063BE  0E03               	movlw	3
  8951  0063C0  5C67               	subwf	animation2@j,w,c
  8952  0063C2  B0D8               	btfsc	status,0,c
  8953  0063C4  D046               	goto	u4310
  8954  0063C6                     l303:
  8955                           
  8956                           ;newmain.c: 738: if (horizental_flash[i][j] != 100) {
  8957  0063C6  C065  F043         	movff	animation2@i,___wmul@multiplier
  8958  0063CA  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8959  0063CE  0E00               	movlw	0
  8960  0063D0  6E46               	movwf	___wmul@multiplicand+1,c
  8961  0063D2  0E03               	movlw	3
  8962  0063D4  6E45               	movwf	___wmul@multiplicand,c
  8963  0063D6  EC71  F023         	call	___wmul	;wreg free
  8964  0063DA  0EB3               	movlw	low _horizental_flash
  8965  0063DC  6E5A               	movwf	??_animation2& (0+255),c
  8966  0063DE  0E7F               	movlw	high _horizental_flash
  8967  0063E0  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8968  0063E2  5043               	movf	?___wmul,w,c
  8969  0063E4  265A               	addwf	??_animation2,f,c
  8970  0063E6  5044               	movf	?___wmul+1,w,c
  8971  0063E8  225B               	addwfc	??_animation2+1,f,c
  8972  0063EA  5067               	movf	animation2@j,w,c
  8973  0063EC  265A               	addwf	??_animation2,f,c
  8974  0063EE  5068               	movf	animation2@j+1,w,c
  8975  0063F0  225B               	addwfc	??_animation2+1,f,c
  8976  0063F2  C05A  FFF6         	movff	??_animation2,tblptrl
  8977  0063F6  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8978  0063FA                     	if	0	;tblptru may be non-zero
  8979  0063FA                     	endif
  8980  0063FA                     	if	0	;tblptru may be non-zero
  8981  0063FA                     	endif
  8982  0063FA  0008               	tblrd		*
  8983  0063FC  50F5               	movf	tablat,w,c
  8984  0063FE  0A64               	xorlw	100
  8985  006400  B4D8               	btfsc	status,2,c
  8986  006402  D027               	goto	u4310
  8987                           
  8988                           ;newmain.c: 739: x = horizental_flash[i][j] + row;
  8989  006404  C065  F043         	movff	animation2@i,___wmul@multiplier
  8990  006408  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8991  00640C  0E00               	movlw	0
  8992  00640E  6E46               	movwf	___wmul@multiplicand+1,c
  8993  006410  0E03               	movlw	3
  8994  006412  6E45               	movwf	___wmul@multiplicand,c
  8995  006414  EC71  F023         	call	___wmul	;wreg free
  8996  006418  0EB3               	movlw	low _horizental_flash
  8997  00641A  6E5A               	movwf	??_animation2& (0+255),c
  8998  00641C  0E7F               	movlw	high _horizental_flash
  8999  00641E  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9000  006420  5043               	movf	?___wmul,w,c
  9001  006422  265A               	addwf	??_animation2,f,c
  9002  006424  5044               	movf	?___wmul+1,w,c
  9003  006426  225B               	addwfc	??_animation2+1,f,c
  9004  006428  5067               	movf	animation2@j,w,c
  9005  00642A  265A               	addwf	??_animation2,f,c
  9006  00642C  5068               	movf	animation2@j+1,w,c
  9007  00642E  225B               	addwfc	??_animation2+1,f,c
  9008  006430  C05A  FFF6         	movff	??_animation2,tblptrl
  9009  006434  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9010  006438                     	if	0	;tblptru may be non-zero
  9011  006438                     	endif
  9012  006438                     	if	0	;tblptru may be non-zero
  9013  006438                     	endif
  9014  006438  0008               	tblrd		*
  9015  00643A  50F5               	movf	tablat,w,c
  9016  00643C  2461               	addwf	animation2@row,w,c
  9017  00643E  6E63               	movwf	animation2@x,c
  9018  006440  0E00               	movlw	0
  9019  006442  2062               	addwfc	animation2@row+1,w,c
  9020  006444  6E64               	movwf	animation2@x+1,c
  9021                           
  9022                           ;newmain.c: 740: set_led(x);
  9023  006446  5063               	movf	animation2@x,w,c
  9024  006448  ECD8  F024         	call	_set_led
  9025                           
  9026                           ;newmain.c: 742: break;
  9027                           
  9028                           ;newmain.c: 741: }else
  9029  00644C  4A67               	infsnz	animation2@j,f,c
  9030  00644E  2A68               	incf	animation2@j+1,f,c
  9031  006450  D7B2               	goto	l3702
  9032  006452                     u4310:
  9033  006452                     l3716:
  9034                           
  9035                           ;newmain.c: 743: }
  9036                           ;newmain.c: 744: write_display();
  9037  006452  EC8A  F025         	call	_write_display	;wreg free
  9038                           
  9039                           ;newmain.c: 745: _delay((unsigned long)((10)*(4000000/4000.0)));
  9040  006456  0E0D               	movlw	13
  9041  006458  6E5A               	movwf	??_animation2& (0+255),c
  9042  00645A  0EFC               	movlw	252
  9043  00645C                     u7097:
  9044  00645C  2EE8               	decfsz	wreg,f,c
  9045  00645E  D7FE               	bra	u7097
  9046  006460  2E5A               	decfsz	??_animation2& (0+255),f,c
  9047  006462  D7FC               	bra	u7097
  9048                           
  9049                           ;newmain.c: 746: for (j = 0; j < 3; j++){
  9050  006464  0E00               	movlw	0
  9051  006466  6E68               	movwf	animation2@j+1,c
  9052  006468  0E00               	movlw	0
  9053  00646A  6E67               	movwf	animation2@j,c
  9054  00646C                     l3722:
  9055  00646C  BE68               	btfsc	animation2@j+1,7,c
  9056  00646E  D006               	goto	l307
  9057  006470  5068               	movf	animation2@j+1,w,c
  9058  006472  E14A               	bnz	l3736
  9059  006474  0E03               	movlw	3
  9060  006476  5C67               	subwf	animation2@j,w,c
  9061  006478  B0D8               	btfsc	status,0,c
  9062  00647A  D046               	goto	u4340
  9063  00647C                     l307:
  9064                           
  9065                           ;newmain.c: 747: if (horizental_flash[i][j] != 100) {
  9066  00647C  C065  F043         	movff	animation2@i,___wmul@multiplier
  9067  006480  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9068  006484  0E00               	movlw	0
  9069  006486  6E46               	movwf	___wmul@multiplicand+1,c
  9070  006488  0E03               	movlw	3
  9071  00648A  6E45               	movwf	___wmul@multiplicand,c
  9072  00648C  EC71  F023         	call	___wmul	;wreg free
  9073  006490  0EB3               	movlw	low _horizental_flash
  9074  006492  6E5A               	movwf	??_animation2& (0+255),c
  9075  006494  0E7F               	movlw	high _horizental_flash
  9076  006496  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9077  006498  5043               	movf	?___wmul,w,c
  9078  00649A  265A               	addwf	??_animation2,f,c
  9079  00649C  5044               	movf	?___wmul+1,w,c
  9080  00649E  225B               	addwfc	??_animation2+1,f,c
  9081  0064A0  5067               	movf	animation2@j,w,c
  9082  0064A2  265A               	addwf	??_animation2,f,c
  9083  0064A4  5068               	movf	animation2@j+1,w,c
  9084  0064A6  225B               	addwfc	??_animation2+1,f,c
  9085  0064A8  C05A  FFF6         	movff	??_animation2,tblptrl
  9086  0064AC  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9087  0064B0                     	if	0	;tblptru may be non-zero
  9088  0064B0                     	endif
  9089  0064B0                     	if	0	;tblptru may be non-zero
  9090  0064B0                     	endif
  9091  0064B0  0008               	tblrd		*
  9092  0064B2  50F5               	movf	tablat,w,c
  9093  0064B4  0A64               	xorlw	100
  9094  0064B6  B4D8               	btfsc	status,2,c
  9095  0064B8  D027               	goto	u4340
  9096                           
  9097                           ;newmain.c: 748: x = horizental_flash[i][j] + row;
  9098  0064BA  C065  F043         	movff	animation2@i,___wmul@multiplier
  9099  0064BE  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9100  0064C2  0E00               	movlw	0
  9101  0064C4  6E46               	movwf	___wmul@multiplicand+1,c
  9102  0064C6  0E03               	movlw	3
  9103  0064C8  6E45               	movwf	___wmul@multiplicand,c
  9104  0064CA  EC71  F023         	call	___wmul	;wreg free
  9105  0064CE  0EB3               	movlw	low _horizental_flash
  9106  0064D0  6E5A               	movwf	??_animation2& (0+255),c
  9107  0064D2  0E7F               	movlw	high _horizental_flash
  9108  0064D4  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9109  0064D6  5043               	movf	?___wmul,w,c
  9110  0064D8  265A               	addwf	??_animation2,f,c
  9111  0064DA  5044               	movf	?___wmul+1,w,c
  9112  0064DC  225B               	addwfc	??_animation2+1,f,c
  9113  0064DE  5067               	movf	animation2@j,w,c
  9114  0064E0  265A               	addwf	??_animation2,f,c
  9115  0064E2  5068               	movf	animation2@j+1,w,c
  9116  0064E4  225B               	addwfc	??_animation2+1,f,c
  9117  0064E6  C05A  FFF6         	movff	??_animation2,tblptrl
  9118  0064EA  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9119  0064EE                     	if	0	;tblptru may be non-zero
  9120  0064EE                     	endif
  9121  0064EE                     	if	0	;tblptru may be non-zero
  9122  0064EE                     	endif
  9123  0064EE  0008               	tblrd		*
  9124  0064F0  50F5               	movf	tablat,w,c
  9125  0064F2  2461               	addwf	animation2@row,w,c
  9126  0064F4  6E63               	movwf	animation2@x,c
  9127  0064F6  0E00               	movlw	0
  9128  0064F8  2062               	addwfc	animation2@row+1,w,c
  9129  0064FA  6E64               	movwf	animation2@x+1,c
  9130                           
  9131                           ;newmain.c: 749: clr_led(x);
  9132  0064FC  5063               	movf	animation2@x,w,c
  9133  0064FE  EC2F  F025         	call	_clr_led
  9134                           
  9135                           ;newmain.c: 751: break;
  9136                           
  9137                           ;newmain.c: 750: }else
  9138  006502  4A67               	infsnz	animation2@j,f,c
  9139  006504  2A68               	incf	animation2@j+1,f,c
  9140  006506  D7B2               	goto	l3722
  9141  006508                     u4340:
  9142  006508                     l3736:
  9143                           
  9144                           ;newmain.c: 752: }
  9145                           ;newmain.c: 753: write_display();
  9146  006508  EC8A  F025         	call	_write_display	;wreg free
  9147  00650C  4A65               	infsnz	animation2@i,f,c
  9148  00650E  2A66               	incf	animation2@i+1,f,c
  9149  006510  BE66               	btfsc	animation2@i+1,7,c
  9150  006512  D74D               	goto	l301
  9151  006514  5066               	movf	animation2@i+1,w,c
  9152  006516  E101               	bnz	u4350
  9153  006518  D744               	goto	L16
  9154  00651A                     u4350:
  9155                           
  9156                           ;newmain.c: 754: }
  9157                           ;newmain.c: 755: } else if (m == 1) {
  9158  00651A  0012               	return	
  9159  00651C                     l300:
  9160  00651C  0460               	decf	animation2@m,w,c
  9161  00651E  A4D8               	btfss	status,2,c
  9162  006520  D0BB               	goto	l312
  9163                           
  9164                           ;newmain.c: 756: for (i = col + 2; i >= 0; i--) {
  9165  006522  0E02               	movlw	2
  9166  006524  245E               	addwf	animation2@col,w,c
  9167  006526  6E65               	movwf	animation2@i,c
  9168  006528  0E00               	movlw	0
  9169  00652A  205F               	addwfc	animation2@col+1,w,c
  9170  00652C  6E66               	movwf	animation2@i+1,c
  9171  00652E  BE66               	btfsc	animation2@i+1,7,c
  9172  006530  0012               	return	
  9173                           
  9174                           ;newmain.c: 757: for (j = 0; j < 3; j++) {
  9175  006532  0E00               	movlw	0
  9176  006534  6E68               	movwf	animation2@j+1,c
  9177  006536  0E00               	movlw	0
  9178  006538  6E67               	movwf	animation2@j,c
  9179  00653A                     l3750:
  9180  00653A  BE68               	btfsc	animation2@j+1,7,c
  9181  00653C  D006               	goto	l315
  9182  00653E  5068               	movf	animation2@j+1,w,c
  9183  006540  E14A               	bnz	l3764
  9184  006542  0E03               	movlw	3
  9185  006544  5C67               	subwf	animation2@j,w,c
  9186  006546  B0D8               	btfsc	status,0,c
  9187  006548  D046               	goto	u4400
  9188  00654A                     l315:
  9189                           
  9190                           ;newmain.c: 758: if (horizental_flash[i][j] != 100) {
  9191  00654A  C065  F043         	movff	animation2@i,___wmul@multiplier
  9192  00654E  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9193  006552  0E00               	movlw	0
  9194  006554  6E46               	movwf	___wmul@multiplicand+1,c
  9195  006556  0E03               	movlw	3
  9196  006558  6E45               	movwf	___wmul@multiplicand,c
  9197  00655A  EC71  F023         	call	___wmul	;wreg free
  9198  00655E  0EB3               	movlw	low _horizental_flash
  9199  006560  6E5A               	movwf	??_animation2& (0+255),c
  9200  006562  0E7F               	movlw	high _horizental_flash
  9201  006564  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9202  006566  5043               	movf	?___wmul,w,c
  9203  006568  265A               	addwf	??_animation2,f,c
  9204  00656A  5044               	movf	?___wmul+1,w,c
  9205  00656C  225B               	addwfc	??_animation2+1,f,c
  9206  00656E  5067               	movf	animation2@j,w,c
  9207  006570  265A               	addwf	??_animation2,f,c
  9208  006572  5068               	movf	animation2@j+1,w,c
  9209  006574  225B               	addwfc	??_animation2+1,f,c
  9210  006576  C05A  FFF6         	movff	??_animation2,tblptrl
  9211  00657A  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9212  00657E                     	if	0	;tblptru may be non-zero
  9213  00657E                     	endif
  9214  00657E                     	if	0	;tblptru may be non-zero
  9215  00657E                     	endif
  9216  00657E  0008               	tblrd		*
  9217  006580  50F5               	movf	tablat,w,c
  9218  006582  0A64               	xorlw	100
  9219  006584  B4D8               	btfsc	status,2,c
  9220  006586  D027               	goto	u4400
  9221                           
  9222                           ;newmain.c: 759: x = horizental_flash[i][j] + row;
  9223  006588  C065  F043         	movff	animation2@i,___wmul@multiplier
  9224  00658C  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9225  006590  0E00               	movlw	0
  9226  006592  6E46               	movwf	___wmul@multiplicand+1,c
  9227  006594  0E03               	movlw	3
  9228  006596  6E45               	movwf	___wmul@multiplicand,c
  9229  006598  EC71  F023         	call	___wmul	;wreg free
  9230  00659C  0EB3               	movlw	low _horizental_flash
  9231  00659E  6E5A               	movwf	??_animation2& (0+255),c
  9232  0065A0  0E7F               	movlw	high _horizental_flash
  9233  0065A2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9234  0065A4  5043               	movf	?___wmul,w,c
  9235  0065A6  265A               	addwf	??_animation2,f,c
  9236  0065A8  5044               	movf	?___wmul+1,w,c
  9237  0065AA  225B               	addwfc	??_animation2+1,f,c
  9238  0065AC  5067               	movf	animation2@j,w,c
  9239  0065AE  265A               	addwf	??_animation2,f,c
  9240  0065B0  5068               	movf	animation2@j+1,w,c
  9241  0065B2  225B               	addwfc	??_animation2+1,f,c
  9242  0065B4  C05A  FFF6         	movff	??_animation2,tblptrl
  9243  0065B8  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9244  0065BC                     	if	0	;tblptru may be non-zero
  9245  0065BC                     	endif
  9246  0065BC                     	if	0	;tblptru may be non-zero
  9247  0065BC                     	endif
  9248  0065BC  0008               	tblrd		*
  9249  0065BE  50F5               	movf	tablat,w,c
  9250  0065C0  2461               	addwf	animation2@row,w,c
  9251  0065C2  6E63               	movwf	animation2@x,c
  9252  0065C4  0E00               	movlw	0
  9253  0065C6  2062               	addwfc	animation2@row+1,w,c
  9254  0065C8  6E64               	movwf	animation2@x+1,c
  9255                           
  9256                           ;newmain.c: 760: set_led(x);
  9257  0065CA  5063               	movf	animation2@x,w,c
  9258  0065CC  ECD8  F024         	call	_set_led
  9259                           
  9260                           ;newmain.c: 762: break;
  9261                           
  9262                           ;newmain.c: 761: }else
  9263  0065D0  4A67               	infsnz	animation2@j,f,c
  9264  0065D2  2A68               	incf	animation2@j+1,f,c
  9265  0065D4  D7B2               	goto	l3750
  9266  0065D6                     u4400:
  9267  0065D6                     l3764:
  9268                           
  9269                           ;newmain.c: 763: }
  9270                           ;newmain.c: 764: write_display();
  9271  0065D6  EC8A  F025         	call	_write_display	;wreg free
  9272                           
  9273                           ;newmain.c: 765: _delay((unsigned long)((10)*(4000000/4000.0)));
  9274  0065DA  0E0D               	movlw	13
  9275  0065DC  6E5A               	movwf	??_animation2& (0+255),c
  9276  0065DE  0EFC               	movlw	252
  9277  0065E0                     u7107:
  9278  0065E0  2EE8               	decfsz	wreg,f,c
  9279  0065E2  D7FE               	bra	u7107
  9280  0065E4  2E5A               	decfsz	??_animation2& (0+255),f,c
  9281  0065E6  D7FC               	bra	u7107
  9282                           
  9283                           ;newmain.c: 766: for (j = 0; j < 3; j++){
  9284  0065E8  0E00               	movlw	0
  9285  0065EA  6E68               	movwf	animation2@j+1,c
  9286  0065EC  0E00               	movlw	0
  9287  0065EE  6E67               	movwf	animation2@j,c
  9288  0065F0                     l3770:
  9289  0065F0  BE68               	btfsc	animation2@j+1,7,c
  9290  0065F2  D006               	goto	l319
  9291  0065F4  5068               	movf	animation2@j+1,w,c
  9292  0065F6  E14A               	bnz	l3784
  9293  0065F8  0E03               	movlw	3
  9294  0065FA  5C67               	subwf	animation2@j,w,c
  9295  0065FC  B0D8               	btfsc	status,0,c
  9296  0065FE  D046               	goto	u4430
  9297  006600                     l319:
  9298                           
  9299                           ;newmain.c: 767: if (horizental_flash[i][j] != 100) {
  9300  006600  C065  F043         	movff	animation2@i,___wmul@multiplier
  9301  006604  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9302  006608  0E00               	movlw	0
  9303  00660A  6E46               	movwf	___wmul@multiplicand+1,c
  9304  00660C  0E03               	movlw	3
  9305  00660E  6E45               	movwf	___wmul@multiplicand,c
  9306  006610  EC71  F023         	call	___wmul	;wreg free
  9307  006614  0EB3               	movlw	low _horizental_flash
  9308  006616  6E5A               	movwf	??_animation2& (0+255),c
  9309  006618  0E7F               	movlw	high _horizental_flash
  9310  00661A  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9311  00661C  5043               	movf	?___wmul,w,c
  9312  00661E  265A               	addwf	??_animation2,f,c
  9313  006620  5044               	movf	?___wmul+1,w,c
  9314  006622  225B               	addwfc	??_animation2+1,f,c
  9315  006624  5067               	movf	animation2@j,w,c
  9316  006626  265A               	addwf	??_animation2,f,c
  9317  006628  5068               	movf	animation2@j+1,w,c
  9318  00662A  225B               	addwfc	??_animation2+1,f,c
  9319  00662C  C05A  FFF6         	movff	??_animation2,tblptrl
  9320  006630  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9321  006634                     	if	0	;tblptru may be non-zero
  9322  006634                     	endif
  9323  006634                     	if	0	;tblptru may be non-zero
  9324  006634                     	endif
  9325  006634  0008               	tblrd		*
  9326  006636  50F5               	movf	tablat,w,c
  9327  006638  0A64               	xorlw	100
  9328  00663A  B4D8               	btfsc	status,2,c
  9329  00663C  D027               	goto	u4430
  9330                           
  9331                           ;newmain.c: 768: x = horizental_flash[i][j] + row;
  9332  00663E  C065  F043         	movff	animation2@i,___wmul@multiplier
  9333  006642  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9334  006646  0E00               	movlw	0
  9335  006648  6E46               	movwf	___wmul@multiplicand+1,c
  9336  00664A  0E03               	movlw	3
  9337  00664C  6E45               	movwf	___wmul@multiplicand,c
  9338  00664E  EC71  F023         	call	___wmul	;wreg free
  9339  006652  0EB3               	movlw	low _horizental_flash
  9340  006654  6E5A               	movwf	??_animation2& (0+255),c
  9341  006656  0E7F               	movlw	high _horizental_flash
  9342  006658  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9343  00665A  5043               	movf	?___wmul,w,c
  9344  00665C  265A               	addwf	??_animation2,f,c
  9345  00665E  5044               	movf	?___wmul+1,w,c
  9346  006660  225B               	addwfc	??_animation2+1,f,c
  9347  006662  5067               	movf	animation2@j,w,c
  9348  006664  265A               	addwf	??_animation2,f,c
  9349  006666  5068               	movf	animation2@j+1,w,c
  9350  006668  225B               	addwfc	??_animation2+1,f,c
  9351  00666A  C05A  FFF6         	movff	??_animation2,tblptrl
  9352  00666E  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9353  006672                     	if	0	;tblptru may be non-zero
  9354  006672                     	endif
  9355  006672                     	if	0	;tblptru may be non-zero
  9356  006672                     	endif
  9357  006672  0008               	tblrd		*
  9358  006674  50F5               	movf	tablat,w,c
  9359  006676  2461               	addwf	animation2@row,w,c
  9360  006678  6E63               	movwf	animation2@x,c
  9361  00667A  0E00               	movlw	0
  9362  00667C  2062               	addwfc	animation2@row+1,w,c
  9363  00667E  6E64               	movwf	animation2@x+1,c
  9364                           
  9365                           ;newmain.c: 769: clr_led(x);
  9366  006680  5063               	movf	animation2@x,w,c
  9367  006682  EC2F  F025         	call	_clr_led
  9368                           
  9369                           ;newmain.c: 771: break;
  9370                           
  9371                           ;newmain.c: 770: }else
  9372  006686  4A67               	infsnz	animation2@j,f,c
  9373  006688  2A68               	incf	animation2@j+1,f,c
  9374  00668A  D7B2               	goto	l3770
  9375  00668C                     u4430:
  9376  00668C                     l3784:
  9377                           
  9378                           ;newmain.c: 772: }
  9379                           ;newmain.c: 773: write_display();
  9380  00668C  EC8A  F025         	call	_write_display	;wreg free
  9381  006690  0665               	decf	animation2@i,f,c
  9382  006692  A0D8               	btfss	status,0,c
  9383  006694  0666               	decf	animation2@i+1,f,c
  9384  006696  D74B               	goto	L17
  9385  006698                     l312:
  9386  006698  0E02               	movlw	2
  9387  00669A  1860               	xorwf	animation2@m,w,c
  9388  00669C  A4D8               	btfss	status,2,c
  9389  00669E  D0C5               	goto	l324
  9390                           
  9391                           ;newmain.c: 776: for (i = col; i < 7; i++) {
  9392  0066A0  C05E  F065         	movff	animation2@col,animation2@i
  9393  0066A4  C05F  F066         	movff	animation2@col+1,animation2@i+1
  9394  0066A8  BE66               	btfsc	animation2@i+1,7,c
  9395  0066AA  D008               	goto	l325
  9396  0066AC  5066               	movf	animation2@i+1,w,c
  9397  0066AE  E105               	bnz	u4460
  9398  0066B0  0E07               	movlw	7
  9399  0066B2  5C65               	subwf	animation2@i,w,c
  9400  0066B4  B0D8               	btfsc	status,0,c
  9401  0066B6  0012               	return	
  9402  0066B8  D001               	goto	l325
  9403  0066BA                     u4460:
  9404  0066BA  0012               	return	
  9405  0066BC                     l325:
  9406                           
  9407                           ;newmain.c: 777: for (j = 0; j < 3; j++){
  9408  0066BC  0E00               	movlw	0
  9409  0066BE  6E68               	movwf	animation2@j+1,c
  9410  0066C0  0E00               	movlw	0
  9411  0066C2  6E67               	movwf	animation2@j,c
  9412  0066C4                     l3800:
  9413  0066C4  BE68               	btfsc	animation2@j+1,7,c
  9414  0066C6  D006               	goto	l327
  9415  0066C8  5068               	movf	animation2@j+1,w,c
  9416  0066CA  E14A               	bnz	l3814
  9417  0066CC  0E03               	movlw	3
  9418  0066CE  5C67               	subwf	animation2@j,w,c
  9419  0066D0  B0D8               	btfsc	status,0,c
  9420  0066D2  D046               	goto	u4490
  9421  0066D4                     l327:
  9422                           
  9423                           ;newmain.c: 778: if (horizental_flash[i][j] != 100) {
  9424  0066D4  C065  F043         	movff	animation2@i,___wmul@multiplier
  9425  0066D8  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9426  0066DC  0E00               	movlw	0
  9427  0066DE  6E46               	movwf	___wmul@multiplicand+1,c
  9428  0066E0  0E03               	movlw	3
  9429  0066E2  6E45               	movwf	___wmul@multiplicand,c
  9430  0066E4  EC71  F023         	call	___wmul	;wreg free
  9431  0066E8  0EB3               	movlw	low _horizental_flash
  9432  0066EA  6E5A               	movwf	??_animation2& (0+255),c
  9433  0066EC  0E7F               	movlw	high _horizental_flash
  9434  0066EE  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9435  0066F0  5043               	movf	?___wmul,w,c
  9436  0066F2  265A               	addwf	??_animation2,f,c
  9437  0066F4  5044               	movf	?___wmul+1,w,c
  9438  0066F6  225B               	addwfc	??_animation2+1,f,c
  9439  0066F8  5067               	movf	animation2@j,w,c
  9440  0066FA  265A               	addwf	??_animation2,f,c
  9441  0066FC  5068               	movf	animation2@j+1,w,c
  9442  0066FE  225B               	addwfc	??_animation2+1,f,c
  9443  006700  C05A  FFF6         	movff	??_animation2,tblptrl
  9444  006704  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9445  006708                     	if	0	;tblptru may be non-zero
  9446  006708                     	endif
  9447  006708                     	if	0	;tblptru may be non-zero
  9448  006708                     	endif
  9449  006708  0008               	tblrd		*
  9450  00670A  50F5               	movf	tablat,w,c
  9451  00670C  0A64               	xorlw	100
  9452  00670E  B4D8               	btfsc	status,2,c
  9453  006710  D027               	goto	u4490
  9454                           
  9455                           ;newmain.c: 779: x = horizental_flash[i][j] + row;
  9456  006712  C065  F043         	movff	animation2@i,___wmul@multiplier
  9457  006716  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9458  00671A  0E00               	movlw	0
  9459  00671C  6E46               	movwf	___wmul@multiplicand+1,c
  9460  00671E  0E03               	movlw	3
  9461  006720  6E45               	movwf	___wmul@multiplicand,c
  9462  006722  EC71  F023         	call	___wmul	;wreg free
  9463  006726  0EB3               	movlw	low _horizental_flash
  9464  006728  6E5A               	movwf	??_animation2& (0+255),c
  9465  00672A  0E7F               	movlw	high _horizental_flash
  9466  00672C  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9467  00672E  5043               	movf	?___wmul,w,c
  9468  006730  265A               	addwf	??_animation2,f,c
  9469  006732  5044               	movf	?___wmul+1,w,c
  9470  006734  225B               	addwfc	??_animation2+1,f,c
  9471  006736  5067               	movf	animation2@j,w,c
  9472  006738  265A               	addwf	??_animation2,f,c
  9473  00673A  5068               	movf	animation2@j+1,w,c
  9474  00673C  225B               	addwfc	??_animation2+1,f,c
  9475  00673E  C05A  FFF6         	movff	??_animation2,tblptrl
  9476  006742  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9477  006746                     	if	0	;tblptru may be non-zero
  9478  006746                     	endif
  9479  006746                     	if	0	;tblptru may be non-zero
  9480  006746                     	endif
  9481  006746  0008               	tblrd		*
  9482  006748  50F5               	movf	tablat,w,c
  9483  00674A  2461               	addwf	animation2@row,w,c
  9484  00674C  6E63               	movwf	animation2@x,c
  9485  00674E  0E00               	movlw	0
  9486  006750  2062               	addwfc	animation2@row+1,w,c
  9487  006752  6E64               	movwf	animation2@x+1,c
  9488                           
  9489                           ;newmain.c: 780: set_led(x);
  9490  006754  5063               	movf	animation2@x,w,c
  9491  006756  ECD8  F024         	call	_set_led
  9492                           
  9493                           ;newmain.c: 782: break;
  9494                           
  9495                           ;newmain.c: 781: }else
  9496  00675A  4A67               	infsnz	animation2@j,f,c
  9497  00675C  2A68               	incf	animation2@j+1,f,c
  9498  00675E  D7B2               	goto	l3800
  9499  006760                     u4490:
  9500  006760                     l3814:
  9501                           
  9502                           ;newmain.c: 783: }
  9503                           ;newmain.c: 784: write_display();
  9504  006760  EC8A  F025         	call	_write_display	;wreg free
  9505                           
  9506                           ;newmain.c: 785: _delay((unsigned long)((10)*(4000000/4000.0)));
  9507  006764  0E0D               	movlw	13
  9508  006766  6E5A               	movwf	??_animation2& (0+255),c
  9509  006768  0EFC               	movlw	252
  9510  00676A                     u7117:
  9511  00676A  2EE8               	decfsz	wreg,f,c
  9512  00676C  D7FE               	bra	u7117
  9513  00676E  2E5A               	decfsz	??_animation2& (0+255),f,c
  9514  006770  D7FC               	bra	u7117
  9515                           
  9516                           ;newmain.c: 786: for (j = 0; j < 3; j++){
  9517  006772  0E00               	movlw	0
  9518  006774  6E68               	movwf	animation2@j+1,c
  9519  006776  0E00               	movlw	0
  9520  006778  6E67               	movwf	animation2@j,c
  9521  00677A                     l3820:
  9522  00677A  BE68               	btfsc	animation2@j+1,7,c
  9523  00677C  D006               	goto	l331
  9524  00677E  5068               	movf	animation2@j+1,w,c
  9525  006780  E14A               	bnz	l3834
  9526  006782  0E03               	movlw	3
  9527  006784  5C67               	subwf	animation2@j,w,c
  9528  006786  B0D8               	btfsc	status,0,c
  9529  006788  D046               	goto	u4520
  9530  00678A                     l331:
  9531                           
  9532                           ;newmain.c: 787: if (horizental_flash[i][j] != 100) {
  9533  00678A  C065  F043         	movff	animation2@i,___wmul@multiplier
  9534  00678E  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9535  006792  0E00               	movlw	0
  9536  006794  6E46               	movwf	___wmul@multiplicand+1,c
  9537  006796  0E03               	movlw	3
  9538  006798  6E45               	movwf	___wmul@multiplicand,c
  9539  00679A  EC71  F023         	call	___wmul	;wreg free
  9540  00679E  0EB3               	movlw	low _horizental_flash
  9541  0067A0  6E5A               	movwf	??_animation2& (0+255),c
  9542  0067A2  0E7F               	movlw	high _horizental_flash
  9543  0067A4  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9544  0067A6  5043               	movf	?___wmul,w,c
  9545  0067A8  265A               	addwf	??_animation2,f,c
  9546  0067AA  5044               	movf	?___wmul+1,w,c
  9547  0067AC  225B               	addwfc	??_animation2+1,f,c
  9548  0067AE  5067               	movf	animation2@j,w,c
  9549  0067B0  265A               	addwf	??_animation2,f,c
  9550  0067B2  5068               	movf	animation2@j+1,w,c
  9551  0067B4  225B               	addwfc	??_animation2+1,f,c
  9552  0067B6  C05A  FFF6         	movff	??_animation2,tblptrl
  9553  0067BA  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9554  0067BE                     	if	0	;tblptru may be non-zero
  9555  0067BE                     	endif
  9556  0067BE                     	if	0	;tblptru may be non-zero
  9557  0067BE                     	endif
  9558  0067BE  0008               	tblrd		*
  9559  0067C0  50F5               	movf	tablat,w,c
  9560  0067C2  0A64               	xorlw	100
  9561  0067C4  B4D8               	btfsc	status,2,c
  9562  0067C6  D027               	goto	u4520
  9563                           
  9564                           ;newmain.c: 788: x = horizental_flash[i][j] + row;
  9565  0067C8  C065  F043         	movff	animation2@i,___wmul@multiplier
  9566  0067CC  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9567  0067D0  0E00               	movlw	0
  9568  0067D2  6E46               	movwf	___wmul@multiplicand+1,c
  9569  0067D4  0E03               	movlw	3
  9570  0067D6  6E45               	movwf	___wmul@multiplicand,c
  9571  0067D8  EC71  F023         	call	___wmul	;wreg free
  9572  0067DC  0EB3               	movlw	low _horizental_flash
  9573  0067DE  6E5A               	movwf	??_animation2& (0+255),c
  9574  0067E0  0E7F               	movlw	high _horizental_flash
  9575  0067E2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9576  0067E4  5043               	movf	?___wmul,w,c
  9577  0067E6  265A               	addwf	??_animation2,f,c
  9578  0067E8  5044               	movf	?___wmul+1,w,c
  9579  0067EA  225B               	addwfc	??_animation2+1,f,c
  9580  0067EC  5067               	movf	animation2@j,w,c
  9581  0067EE  265A               	addwf	??_animation2,f,c
  9582  0067F0  5068               	movf	animation2@j+1,w,c
  9583  0067F2  225B               	addwfc	??_animation2+1,f,c
  9584  0067F4  C05A  FFF6         	movff	??_animation2,tblptrl
  9585  0067F8  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9586  0067FC                     	if	0	;tblptru may be non-zero
  9587  0067FC                     	endif
  9588  0067FC                     	if	0	;tblptru may be non-zero
  9589  0067FC                     	endif
  9590  0067FC  0008               	tblrd		*
  9591  0067FE  50F5               	movf	tablat,w,c
  9592  006800  2461               	addwf	animation2@row,w,c
  9593  006802  6E63               	movwf	animation2@x,c
  9594  006804  0E00               	movlw	0
  9595  006806  2062               	addwfc	animation2@row+1,w,c
  9596  006808  6E64               	movwf	animation2@x+1,c
  9597                           
  9598                           ;newmain.c: 789: clr_led(x);
  9599  00680A  5063               	movf	animation2@x,w,c
  9600  00680C  EC2F  F025         	call	_clr_led
  9601                           
  9602                           ;newmain.c: 791: break;
  9603                           
  9604                           ;newmain.c: 790: }else
  9605  006810  4A67               	infsnz	animation2@j,f,c
  9606  006812  2A68               	incf	animation2@j+1,f,c
  9607  006814  D7B2               	goto	l3820
  9608  006816                     u4520:
  9609  006816                     l3834:
  9610                           
  9611                           ;newmain.c: 792: }
  9612                           ;newmain.c: 793: write_display();
  9613  006816  EC8A  F025         	call	_write_display	;wreg free
  9614  00681A  4A65               	infsnz	animation2@i,f,c
  9615  00681C  2A66               	incf	animation2@i+1,f,c
  9616  00681E  BE66               	btfsc	animation2@i+1,7,c
  9617  006820  D74D               	goto	l325
  9618  006822  5066               	movf	animation2@i+1,w,c
  9619  006824  E101               	bnz	u4530
  9620  006826  D744               	goto	L18
  9621  006828                     u4530:
  9622                           
  9623                           ;newmain.c: 794: }
  9624                           ;newmain.c: 795: } else if (m == 3) {
  9625  006828  0012               	return	
  9626  00682A                     l324:
  9627  00682A  0E03               	movlw	3
  9628  00682C  1860               	xorwf	animation2@m,w,c
  9629  00682E  A4D8               	btfss	status,2,c
  9630  006830  0012               	return	
  9631                           
  9632                           ;newmain.c: 796: for (i = col + 2; i >= 0; i--) {
  9633  006832  0E02               	movlw	2
  9634  006834  245E               	addwf	animation2@col,w,c
  9635  006836  6E65               	movwf	animation2@i,c
  9636  006838  0E00               	movlw	0
  9637  00683A  205F               	addwfc	animation2@col+1,w,c
  9638  00683C  6E66               	movwf	animation2@i+1,c
  9639  00683E  BE66               	btfsc	animation2@i+1,7,c
  9640  006840  0012               	return	
  9641                           
  9642                           ;newmain.c: 797: for (j = 0; j < 3; j++){
  9643  006842  0E00               	movlw	0
  9644  006844  6E68               	movwf	animation2@j+1,c
  9645  006846  0E00               	movlw	0
  9646  006848  6E67               	movwf	animation2@j,c
  9647  00684A                     l3848:
  9648  00684A  BE68               	btfsc	animation2@j+1,7,c
  9649  00684C  D006               	goto	l339
  9650  00684E  5068               	movf	animation2@j+1,w,c
  9651  006850  E14A               	bnz	l3862
  9652  006852  0E03               	movlw	3
  9653  006854  5C67               	subwf	animation2@j,w,c
  9654  006856  B0D8               	btfsc	status,0,c
  9655  006858  D046               	goto	u4580
  9656  00685A                     l339:
  9657                           
  9658                           ;newmain.c: 798: if (horizental_flash[i][j] != 100) {
  9659  00685A  C065  F043         	movff	animation2@i,___wmul@multiplier
  9660  00685E  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9661  006862  0E00               	movlw	0
  9662  006864  6E46               	movwf	___wmul@multiplicand+1,c
  9663  006866  0E03               	movlw	3
  9664  006868  6E45               	movwf	___wmul@multiplicand,c
  9665  00686A  EC71  F023         	call	___wmul	;wreg free
  9666  00686E  0EB3               	movlw	low _horizental_flash
  9667  006870  6E5A               	movwf	??_animation2& (0+255),c
  9668  006872  0E7F               	movlw	high _horizental_flash
  9669  006874  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9670  006876  5043               	movf	?___wmul,w,c
  9671  006878  265A               	addwf	??_animation2,f,c
  9672  00687A  5044               	movf	?___wmul+1,w,c
  9673  00687C  225B               	addwfc	??_animation2+1,f,c
  9674  00687E  5067               	movf	animation2@j,w,c
  9675  006880  265A               	addwf	??_animation2,f,c
  9676  006882  5068               	movf	animation2@j+1,w,c
  9677  006884  225B               	addwfc	??_animation2+1,f,c
  9678  006886  C05A  FFF6         	movff	??_animation2,tblptrl
  9679  00688A  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9680  00688E                     	if	0	;tblptru may be non-zero
  9681  00688E                     	endif
  9682  00688E                     	if	0	;tblptru may be non-zero
  9683  00688E                     	endif
  9684  00688E  0008               	tblrd		*
  9685  006890  50F5               	movf	tablat,w,c
  9686  006892  0A64               	xorlw	100
  9687  006894  B4D8               	btfsc	status,2,c
  9688  006896  D027               	goto	u4580
  9689                           
  9690                           ;newmain.c: 799: x = horizental_flash[i][j] + row;
  9691  006898  C065  F043         	movff	animation2@i,___wmul@multiplier
  9692  00689C  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9693  0068A0  0E00               	movlw	0
  9694  0068A2  6E46               	movwf	___wmul@multiplicand+1,c
  9695  0068A4  0E03               	movlw	3
  9696  0068A6  6E45               	movwf	___wmul@multiplicand,c
  9697  0068A8  EC71  F023         	call	___wmul	;wreg free
  9698  0068AC  0EB3               	movlw	low _horizental_flash
  9699  0068AE  6E5A               	movwf	??_animation2& (0+255),c
  9700  0068B0  0E7F               	movlw	high _horizental_flash
  9701  0068B2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9702  0068B4  5043               	movf	?___wmul,w,c
  9703  0068B6  265A               	addwf	??_animation2,f,c
  9704  0068B8  5044               	movf	?___wmul+1,w,c
  9705  0068BA  225B               	addwfc	??_animation2+1,f,c
  9706  0068BC  5067               	movf	animation2@j,w,c
  9707  0068BE  265A               	addwf	??_animation2,f,c
  9708  0068C0  5068               	movf	animation2@j+1,w,c
  9709  0068C2  225B               	addwfc	??_animation2+1,f,c
  9710  0068C4  C05A  FFF6         	movff	??_animation2,tblptrl
  9711  0068C8  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9712  0068CC                     	if	0	;tblptru may be non-zero
  9713  0068CC                     	endif
  9714  0068CC                     	if	0	;tblptru may be non-zero
  9715  0068CC                     	endif
  9716  0068CC  0008               	tblrd		*
  9717  0068CE  50F5               	movf	tablat,w,c
  9718  0068D0  2461               	addwf	animation2@row,w,c
  9719  0068D2  6E63               	movwf	animation2@x,c
  9720  0068D4  0E00               	movlw	0
  9721  0068D6  2062               	addwfc	animation2@row+1,w,c
  9722  0068D8  6E64               	movwf	animation2@x+1,c
  9723                           
  9724                           ;newmain.c: 800: set_led(x);
  9725  0068DA  5063               	movf	animation2@x,w,c
  9726  0068DC  ECD8  F024         	call	_set_led
  9727                           
  9728                           ;newmain.c: 802: break;
  9729                           
  9730                           ;newmain.c: 801: }else
  9731  0068E0  4A67               	infsnz	animation2@j,f,c
  9732  0068E2  2A68               	incf	animation2@j+1,f,c
  9733  0068E4  D7B2               	goto	l3848
  9734  0068E6                     u4580:
  9735  0068E6                     l3862:
  9736                           
  9737                           ;newmain.c: 803: }
  9738                           ;newmain.c: 804: write_display();
  9739  0068E6  EC8A  F025         	call	_write_display	;wreg free
  9740                           
  9741                           ;newmain.c: 805: _delay((unsigned long)((10)*(4000000/4000.0)));
  9742  0068EA  0E0D               	movlw	13
  9743  0068EC  6E5A               	movwf	??_animation2& (0+255),c
  9744  0068EE  0EFC               	movlw	252
  9745  0068F0                     u7127:
  9746  0068F0  2EE8               	decfsz	wreg,f,c
  9747  0068F2  D7FE               	bra	u7127
  9748  0068F4  2E5A               	decfsz	??_animation2& (0+255),f,c
  9749  0068F6  D7FC               	bra	u7127
  9750                           
  9751                           ;newmain.c: 806: for (j = 0; j < 3; j++){
  9752  0068F8  0E00               	movlw	0
  9753  0068FA  6E68               	movwf	animation2@j+1,c
  9754  0068FC  0E00               	movlw	0
  9755  0068FE  6E67               	movwf	animation2@j,c
  9756  006900                     l3868:
  9757  006900  BE68               	btfsc	animation2@j+1,7,c
  9758  006902  D006               	goto	l343
  9759  006904  5068               	movf	animation2@j+1,w,c
  9760  006906  E14A               	bnz	l3882
  9761  006908  0E03               	movlw	3
  9762  00690A  5C67               	subwf	animation2@j,w,c
  9763  00690C  B0D8               	btfsc	status,0,c
  9764  00690E  D046               	goto	u4610
  9765  006910                     l343:
  9766                           
  9767                           ;newmain.c: 807: if (horizental_flash[i][j] != 100) {
  9768  006910  C065  F043         	movff	animation2@i,___wmul@multiplier
  9769  006914  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9770  006918  0E00               	movlw	0
  9771  00691A  6E46               	movwf	___wmul@multiplicand+1,c
  9772  00691C  0E03               	movlw	3
  9773  00691E  6E45               	movwf	___wmul@multiplicand,c
  9774  006920  EC71  F023         	call	___wmul	;wreg free
  9775  006924  0EB3               	movlw	low _horizental_flash
  9776  006926  6E5A               	movwf	??_animation2& (0+255),c
  9777  006928  0E7F               	movlw	high _horizental_flash
  9778  00692A  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9779  00692C  5043               	movf	?___wmul,w,c
  9780  00692E  265A               	addwf	??_animation2,f,c
  9781  006930  5044               	movf	?___wmul+1,w,c
  9782  006932  225B               	addwfc	??_animation2+1,f,c
  9783  006934  5067               	movf	animation2@j,w,c
  9784  006936  265A               	addwf	??_animation2,f,c
  9785  006938  5068               	movf	animation2@j+1,w,c
  9786  00693A  225B               	addwfc	??_animation2+1,f,c
  9787  00693C  C05A  FFF6         	movff	??_animation2,tblptrl
  9788  006940  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9789  006944                     	if	0	;tblptru may be non-zero
  9790  006944                     	endif
  9791  006944                     	if	0	;tblptru may be non-zero
  9792  006944                     	endif
  9793  006944  0008               	tblrd		*
  9794  006946  50F5               	movf	tablat,w,c
  9795  006948  0A64               	xorlw	100
  9796  00694A  B4D8               	btfsc	status,2,c
  9797  00694C  D027               	goto	u4610
  9798                           
  9799                           ;newmain.c: 808: x = horizental_flash[i][j] + row;
  9800  00694E  C065  F043         	movff	animation2@i,___wmul@multiplier
  9801  006952  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9802  006956  0E00               	movlw	0
  9803  006958  6E46               	movwf	___wmul@multiplicand+1,c
  9804  00695A  0E03               	movlw	3
  9805  00695C  6E45               	movwf	___wmul@multiplicand,c
  9806  00695E  EC71  F023         	call	___wmul	;wreg free
  9807  006962  0EB3               	movlw	low _horizental_flash
  9808  006964  6E5A               	movwf	??_animation2& (0+255),c
  9809  006966  0E7F               	movlw	high _horizental_flash
  9810  006968  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9811  00696A  5043               	movf	?___wmul,w,c
  9812  00696C  265A               	addwf	??_animation2,f,c
  9813  00696E  5044               	movf	?___wmul+1,w,c
  9814  006970  225B               	addwfc	??_animation2+1,f,c
  9815  006972  5067               	movf	animation2@j,w,c
  9816  006974  265A               	addwf	??_animation2,f,c
  9817  006976  5068               	movf	animation2@j+1,w,c
  9818  006978  225B               	addwfc	??_animation2+1,f,c
  9819  00697A  C05A  FFF6         	movff	??_animation2,tblptrl
  9820  00697E  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9821  006982                     	if	0	;tblptru may be non-zero
  9822  006982                     	endif
  9823  006982                     	if	0	;tblptru may be non-zero
  9824  006982                     	endif
  9825  006982  0008               	tblrd		*
  9826  006984  50F5               	movf	tablat,w,c
  9827  006986  2461               	addwf	animation2@row,w,c
  9828  006988  6E63               	movwf	animation2@x,c
  9829  00698A  0E00               	movlw	0
  9830  00698C  2062               	addwfc	animation2@row+1,w,c
  9831  00698E  6E64               	movwf	animation2@x+1,c
  9832                           
  9833                           ;newmain.c: 809: clr_led(x);
  9834  006990  5063               	movf	animation2@x,w,c
  9835  006992  EC2F  F025         	call	_clr_led
  9836                           
  9837                           ;newmain.c: 811: break;
  9838                           
  9839                           ;newmain.c: 810: }else
  9840  006996  4A67               	infsnz	animation2@j,f,c
  9841  006998  2A68               	incf	animation2@j+1,f,c
  9842  00699A  D7B2               	goto	l3868
  9843  00699C                     u4610:
  9844  00699C                     l3882:
  9845                           
  9846                           ;newmain.c: 812: }
  9847                           ;newmain.c: 813: write_display();
  9848  00699C  EC8A  F025         	call	_write_display	;wreg free
  9849  0069A0  0665               	decf	animation2@i,f,c
  9850  0069A2  A0D8               	btfss	status,0,c
  9851  0069A4  0666               	decf	animation2@i+1,f,c
  9852  0069A6  D74B               	goto	L19
  9853  0069A8                     __end_of_animation2:
  9854                           	opt stack 0
  9855                           tblptru	equ	0xFF8
  9856                           tblptrh	equ	0xFF7
  9857                           tblptrl	equ	0xFF6
  9858                           tablat	equ	0xFF5
  9859                           prodh	equ	0xFF4
  9860                           prodl	equ	0xFF3
  9861                           postinc0	equ	0xFEE
  9862                           wreg	equ	0xFE8
  9863                           postinc1	equ	0xFE6
  9864                           fsr1h	equ	0xFE2
  9865                           fsr1l	equ	0xFE1
  9866                           indf2	equ	0xFDF
  9867                           postinc2	equ	0xFDE
  9868                           postdec2	equ	0xFDD
  9869                           fsr2h	equ	0xFDA
  9870                           fsr2l	equ	0xFD9
  9871                           status	equ	0xFD8
  9872                           
  9873 ;; *************** function _animation1 *****************
  9874 ;; Defined at:
  9875 ;;		line 700 in file "newmain.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  m               1    wreg     unsigned char 
  9878 ;;  n               1   21[COMRAM] unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  m               1   25[COMRAM] unsigned char 
  9881 ;;  j               1   28[COMRAM] unsigned char 
  9882 ;;  i               1   27[COMRAM] unsigned char 
  9883 ;;  x               1   26[COMRAM] unsigned char 
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  1    wreg      void 
  9886 ;; Registers used:
  9887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9893 ;;      Params:         1       0       0       0       0       0       0
  9894 ;;      Locals:         4       0       0       0       0       0       0
  9895 ;;      Temps:          3       0       0       0       0       0       0
  9896 ;;      Totals:         8       0       0       0       0       0       0
  9897 ;;Total ram usage:        8 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; Hardware stack levels required when called:    4
  9900 ;; This function calls:
  9901 ;;		_clr_led
  9902 ;;		_set_led
  9903 ;;		_write_display
  9904 ;; This function is called by:
  9905 ;;		_main
  9906 ;; This function uses a non-reentrant model
  9907 ;;
  9908                           
  9909                           	psect	text15
  9910  004C48                     __ptext15:
  9911                           	opt stack 0
  9912  004C48                     _animation1:
  9913                           	opt stack 26
  9914                           
  9915                           ;incstack = 0
  9916                           ;animation1@m stored from wreg
  9917  004C48  6E5C               	movwf	animation1@m,c
  9918                           
  9919                           ;newmain.c: 701: uint8_t i = 0, j = 0, x = 0;
  9920  004C4A  0E00               	movlw	0
  9921  004C4C  6E5E               	movwf	animation1@i,c
  9922  004C4E  0E00               	movlw	0
  9923  004C50  6E5F               	movwf	animation1@j,c
  9924  004C52  0E00               	movlw	0
  9925  004C54  6E5D               	movwf	animation1@x,c
  9926                           
  9927                           ;newmain.c: 702: for (i = 0; i < 4; i++) {
  9928  004C56  0E00               	movlw	0
  9929  004C58  6E5E               	movwf	animation1@i,c
  9930  004C5A                     l3618:
  9931  004C5A  0E03               	movlw	3
  9932  004C5C  645E               	cpfsgt	animation1@i,c
  9933  004C5E  D001               	goto	l282
  9934  004C60  0012               	return	
  9935  004C62                     l282:
  9936                           
  9937                           ;newmain.c: 703: for (j = 0; j < 4; j++) {
  9938  004C62  0E00               	movlw	0
  9939  004C64  6E5F               	movwf	animation1@j,c
  9940  004C66                     l3624:
  9941  004C66  0E03               	movlw	3
  9942  004C68  645F               	cpfsgt	animation1@j,c
  9943  004C6A  D001               	goto	l284
  9944  004C6C  D046               	goto	u4170
  9945  004C6E                     l284:
  9946                           
  9947                           ;newmain.c: 704: if (arrow[n][i][j] != 100) {
  9948  004C6E  5058               	movf	animation1@n,w,c
  9949  004C70  0D10               	mullw	16
  9950  004C72  0EAD               	movlw	low _arrow
  9951  004C74  6E59               	movwf	??_animation1& (0+255),c
  9952  004C76  0E79               	movlw	high _arrow
  9953  004C78  6E5A               	movwf	(??_animation1+1)& (0+255),c
  9954  004C7A  50F3               	movf	prodl,w,c
  9955  004C7C  2659               	addwf	??_animation1,f,c
  9956  004C7E  50F4               	movf	prodh,w,c
  9957  004C80  225A               	addwfc	??_animation1+1,f,c
  9958  004C82  505E               	movf	animation1@i,w,c
  9959  004C84  0D04               	mullw	4
  9960  004C86  50F3               	movf	prodl,w,c
  9961  004C88  2659               	addwf	??_animation1,f,c
  9962  004C8A  50F4               	movf	prodh,w,c
  9963  004C8C  225A               	addwfc	??_animation1+1,f,c
  9964  004C8E  505F               	movf	animation1@j,w,c
  9965  004C90  0D01               	mullw	1
  9966  004C92  50F3               	movf	prodl,w,c
  9967  004C94  2659               	addwf	??_animation1,f,c
  9968  004C96  50F4               	movf	prodh,w,c
  9969  004C98  225A               	addwfc	??_animation1+1,f,c
  9970  004C9A  C059  FFF6         	movff	??_animation1,tblptrl
  9971  004C9E  C05A  FFF7         	movff	??_animation1+1,tblptrh
  9972  004CA2                     	if	0	;tblptru may be non-zero
  9973  004CA2                     	endif
  9974  004CA2                     	if	0	;tblptru may be non-zero
  9975  004CA2                     	endif
  9976  004CA2  0008               	tblrd		*
  9977  004CA4  50F5               	movf	tablat,w,c
  9978  004CA6  0A64               	xorlw	100
  9979  004CA8  B4D8               	btfsc	status,2,c
  9980  004CAA  D027               	goto	u4170
  9981                           
  9982                           ;newmain.c: 705: x = arrow[n][i][j] + 16 * m;
  9983  004CAC  5058               	movf	animation1@n,w,c
  9984  004CAE  0D10               	mullw	16
  9985  004CB0  0EAD               	movlw	low _arrow
  9986  004CB2  6E59               	movwf	??_animation1& (0+255),c
  9987  004CB4  0E79               	movlw	high _arrow
  9988  004CB6  6E5A               	movwf	(??_animation1+1)& (0+255),c
  9989  004CB8  50F3               	movf	prodl,w,c
  9990  004CBA  2659               	addwf	??_animation1,f,c
  9991  004CBC  50F4               	movf	prodh,w,c
  9992  004CBE  225A               	addwfc	??_animation1+1,f,c
  9993  004CC0  505E               	movf	animation1@i,w,c
  9994  004CC2  0D04               	mullw	4
  9995  004CC4  50F3               	movf	prodl,w,c
  9996  004CC6  2659               	addwf	??_animation1,f,c
  9997  004CC8  50F4               	movf	prodh,w,c
  9998  004CCA  225A               	addwfc	??_animation1+1,f,c
  9999  004CCC  505F               	movf	animation1@j,w,c
 10000  004CCE  0D01               	mullw	1
 10001  004CD0  50F3               	movf	prodl,w,c
 10002  004CD2  2659               	addwf	??_animation1,f,c
 10003  004CD4  50F4               	movf	prodh,w,c
 10004  004CD6  225A               	addwfc	??_animation1+1,f,c
 10005  004CD8  C059  FFF6         	movff	??_animation1,tblptrl
 10006  004CDC  C05A  FFF7         	movff	??_animation1+1,tblptrh
 10007  004CE0                     	if	0	;tblptru may be non-zero
 10008  004CE0                     	endif
 10009  004CE0                     	if	0	;tblptru may be non-zero
 10010  004CE0                     	endif
 10011  004CE0  0008               	tblrd		*
 10012  004CE2  CFF5 F05B          	movff	tablat,??_animation1+2
 10013  004CE6  505C               	movf	animation1@m,w,c
 10014  004CE8  0D10               	mullw	16
 10015  004CEA  50F3               	movf	prodl,w,c
 10016  004CEC  245B               	addwf	??_animation1+2,w,c
 10017  004CEE  6E5D               	movwf	animation1@x,c
 10018                           
 10019                           ;newmain.c: 706: set_led(x);
 10020  004CF0  505D               	movf	animation1@x,w,c
 10021  004CF2  ECD8  F024         	call	_set_led
 10022                           
 10023                           ;newmain.c: 708: break;
 10024                           
 10025                           ;newmain.c: 707: }else
 10026  004CF6  2A5F               	incf	animation1@j,f,c
 10027  004CF8  D7B6               	goto	l3624
 10028  004CFA                     u4170:
 10029                           
 10030                           ;newmain.c: 709: }
 10031                           ;newmain.c: 710: write_display();
 10032  004CFA  EC8A  F025         	call	_write_display	;wreg free
 10033                           
 10034                           ;newmain.c: 711: _delay((unsigned long)((10)*(4000000/4000.0)));
 10035  004CFE  0E0D               	movlw	13
 10036  004D00  6E59               	movwf	??_animation1& (0+255),c
 10037  004D02  0EFC               	movlw	252
 10038  004D04                     u7137:
 10039  004D04  2EE8               	decfsz	wreg,f,c
 10040  004D06  D7FE               	bra	u7137
 10041  004D08  2E59               	decfsz	??_animation1& (0+255),f,c
 10042  004D0A  D7FC               	bra	u7137
 10043                           
 10044                           ;newmain.c: 712: for (j = 0; j < 4; j++) {
 10045  004D0C  0E00               	movlw	0
 10046  004D0E  6E5F               	movwf	animation1@j,c
 10047  004D10                     l3644:
 10048  004D10  0E03               	movlw	3
 10049  004D12  645F               	cpfsgt	animation1@j,c
 10050  004D14  D001               	goto	l288
 10051  004D16  D046               	goto	u4200
 10052  004D18                     l288:
 10053                           
 10054                           ;newmain.c: 713: if (arrow[n][i][j] != 100) {
 10055  004D18  5058               	movf	animation1@n,w,c
 10056  004D1A  0D10               	mullw	16
 10057  004D1C  0EAD               	movlw	low _arrow
 10058  004D1E  6E59               	movwf	??_animation1& (0+255),c
 10059  004D20  0E79               	movlw	high _arrow
 10060  004D22  6E5A               	movwf	(??_animation1+1)& (0+255),c
 10061  004D24  50F3               	movf	prodl,w,c
 10062  004D26  2659               	addwf	??_animation1,f,c
 10063  004D28  50F4               	movf	prodh,w,c
 10064  004D2A  225A               	addwfc	??_animation1+1,f,c
 10065  004D2C  505E               	movf	animation1@i,w,c
 10066  004D2E  0D04               	mullw	4
 10067  004D30  50F3               	movf	prodl,w,c
 10068  004D32  2659               	addwf	??_animation1,f,c
 10069  004D34  50F4               	movf	prodh,w,c
 10070  004D36  225A               	addwfc	??_animation1+1,f,c
 10071  004D38  505F               	movf	animation1@j,w,c
 10072  004D3A  0D01               	mullw	1
 10073  004D3C  50F3               	movf	prodl,w,c
 10074  004D3E  2659               	addwf	??_animation1,f,c
 10075  004D40  50F4               	movf	prodh,w,c
 10076  004D42  225A               	addwfc	??_animation1+1,f,c
 10077  004D44  C059  FFF6         	movff	??_animation1,tblptrl
 10078  004D48  C05A  FFF7         	movff	??_animation1+1,tblptrh
 10079  004D4C                     	if	0	;tblptru may be non-zero
 10080  004D4C                     	endif
 10081  004D4C                     	if	0	;tblptru may be non-zero
 10082  004D4C                     	endif
 10083  004D4C  0008               	tblrd		*
 10084  004D4E  50F5               	movf	tablat,w,c
 10085  004D50  0A64               	xorlw	100
 10086  004D52  B4D8               	btfsc	status,2,c
 10087  004D54  D027               	goto	u4200
 10088                           
 10089                           ;newmain.c: 714: x = arrow[n][i][j] + 16 * m;
 10090  004D56  5058               	movf	animation1@n,w,c
 10091  004D58  0D10               	mullw	16
 10092  004D5A  0EAD               	movlw	low _arrow
 10093  004D5C  6E59               	movwf	??_animation1& (0+255),c
 10094  004D5E  0E79               	movlw	high _arrow
 10095  004D60  6E5A               	movwf	(??_animation1+1)& (0+255),c
 10096  004D62  50F3               	movf	prodl,w,c
 10097  004D64  2659               	addwf	??_animation1,f,c
 10098  004D66  50F4               	movf	prodh,w,c
 10099  004D68  225A               	addwfc	??_animation1+1,f,c
 10100  004D6A  505E               	movf	animation1@i,w,c
 10101  004D6C  0D04               	mullw	4
 10102  004D6E  50F3               	movf	prodl,w,c
 10103  004D70  2659               	addwf	??_animation1,f,c
 10104  004D72  50F4               	movf	prodh,w,c
 10105  004D74  225A               	addwfc	??_animation1+1,f,c
 10106  004D76  505F               	movf	animation1@j,w,c
 10107  004D78  0D01               	mullw	1
 10108  004D7A  50F3               	movf	prodl,w,c
 10109  004D7C  2659               	addwf	??_animation1,f,c
 10110  004D7E  50F4               	movf	prodh,w,c
 10111  004D80  225A               	addwfc	??_animation1+1,f,c
 10112  004D82  C059  FFF6         	movff	??_animation1,tblptrl
 10113  004D86  C05A  FFF7         	movff	??_animation1+1,tblptrh
 10114  004D8A                     	if	0	;tblptru may be non-zero
 10115  004D8A                     	endif
 10116  004D8A                     	if	0	;tblptru may be non-zero
 10117  004D8A                     	endif
 10118  004D8A  0008               	tblrd		*
 10119  004D8C  CFF5 F05B          	movff	tablat,??_animation1+2
 10120  004D90  505C               	movf	animation1@m,w,c
 10121  004D92  0D10               	mullw	16
 10122  004D94  50F3               	movf	prodl,w,c
 10123  004D96  245B               	addwf	??_animation1+2,w,c
 10124  004D98  6E5D               	movwf	animation1@x,c
 10125                           
 10126                           ;newmain.c: 715: clr_led(x);
 10127  004D9A  505D               	movf	animation1@x,w,c
 10128  004D9C  EC2F  F025         	call	_clr_led
 10129                           
 10130                           ;newmain.c: 717: break;
 10131                           
 10132                           ;newmain.c: 716: }else
 10133  004DA0  2A5F               	incf	animation1@j,f,c
 10134  004DA2  D7B6               	goto	l3644
 10135  004DA4                     u4200:
 10136                           
 10137                           ;newmain.c: 718: }
 10138                           ;newmain.c: 719: write_display();
 10139  004DA4  EC8A  F025         	call	_write_display	;wreg free
 10140  004DA8  2A5E               	incf	animation1@i,f,c
 10141  004DAA  D757               	goto	l3618
 10142  004DAC                     __end_of_animation1:
 10143                           	opt stack 0
 10144                           tblptru	equ	0xFF8
 10145                           tblptrh	equ	0xFF7
 10146                           tblptrl	equ	0xFF6
 10147                           tablat	equ	0xFF5
 10148                           prodh	equ	0xFF4
 10149                           prodl	equ	0xFF3
 10150                           postinc0	equ	0xFEE
 10151                           wreg	equ	0xFE8
 10152                           postinc1	equ	0xFE6
 10153                           fsr1h	equ	0xFE2
 10154                           fsr1l	equ	0xFE1
 10155                           indf2	equ	0xFDF
 10156                           postinc2	equ	0xFDE
 10157                           postdec2	equ	0xFDD
 10158                           fsr2h	equ	0xFDA
 10159                           fsr2l	equ	0xFD9
 10160                           status	equ	0xFD8
 10161                           
 10162 ;; *************** function _animation0 *****************
 10163 ;; Defined at:
 10164 ;;		line 633 in file "newmain.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  m               1    wreg     unsigned char 
 10167 ;;  n               1   21[COMRAM] unsigned char 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  m               1   26[COMRAM] unsigned char 
 10170 ;;  x               2   24[COMRAM] int 
 10171 ;;  i               1   28[COMRAM] unsigned char 
 10172 ;;  j               1   27[COMRAM] unsigned char 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10182 ;;      Params:         1       0       0       0       0       0       0
 10183 ;;      Locals:         5       0       0       0       0       0       0
 10184 ;;      Temps:          2       0       0       0       0       0       0
 10185 ;;      Totals:         8       0       0       0       0       0       0
 10186 ;;Total ram usage:        8 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:    4
 10189 ;; This function calls:
 10190 ;;		_clr_led
 10191 ;;		_set_led
 10192 ;;		_write_display
 10193 ;; This function is called by:
 10194 ;;		_main
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           	psect	text16
 10199  005574                     __ptext16:
 10200                           	opt stack 0
 10201  005574                     _animation0:
 10202                           	opt stack 26
 10203                           
 10204                           ;incstack = 0
 10205                           ;animation0@m stored from wreg
 10206  005574  6E5D               	movwf	animation0@m,c
 10207                           
 10208                           ;newmain.c: 634: uint8_t i = 0, j = 0;
 10209  005576  0E00               	movlw	0
 10210  005578  6E5F               	movwf	animation0@i,c
 10211  00557A  0E00               	movlw	0
 10212  00557C  6E5E               	movwf	animation0@j,c
 10213                           
 10214                           ;newmain.c: 635: if (m == 1) {
 10215  00557E  045D               	decf	animation0@m,w,c
 10216  005580  A4D8               	btfss	status,2,c
 10217  005582  D04E               	goto	l251
 10218                           
 10219                           ;newmain.c: 636: for (i = 0; i < 19; i += 2) {
 10220  005584  0E00               	movlw	0
 10221  005586  6E5F               	movwf	animation0@i,c
 10222  005588                     l3470:
 10223  005588  0E12               	movlw	18
 10224  00558A  645F               	cpfsgt	animation0@i,c
 10225  00558C  D001               	goto	l252
 10226  00558E  0012               	return	
 10227  005590                     l252:
 10228                           
 10229                           ;newmain.c: 637: set_led(show0_1[i]);
 10230  005590  505F               	movf	animation0@i,w,c
 10231  005592  0D01               	mullw	1
 10232  005594  0E8B               	movlw	low _show0_1
 10233  005596  24F3               	addwf	prodl,w,c
 10234  005598  6EF6               	movwf	tblptrl,c
 10235  00559A  0E7F               	movlw	high _show0_1
 10236  00559C  20F4               	addwfc	prodh,w,c
 10237  00559E  6EF7               	movwf	tblptrh,c
 10238  0055A0                     	if	0	;There are less than 3 active tblptr bytes
 10239  0055A0                     	endif
 10240  0055A0  0008               	tblrd		*
 10241  0055A2  50F5               	movf	tablat,w,c
 10242  0055A4  ECD8  F024         	call	_set_led
 10243                           
 10244                           ;newmain.c: 638: set_led(show0_1[i + 1]);
 10245  0055A8  505F               	movf	animation0@i,w,c
 10246  0055AA  6E59               	movwf	??_animation0& (0+255),c
 10247  0055AC  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10248  0055AE  0E01               	movlw	1
 10249  0055B0  2659               	addwf	??_animation0,f,c
 10250  0055B2  0E00               	movlw	0
 10251  0055B4  225A               	addwfc	??_animation0+1,f,c
 10252  0055B6  0E8B               	movlw	low _show0_1
 10253  0055B8  2459               	addwf	??_animation0,w,c
 10254  0055BA  6EF6               	movwf	tblptrl,c
 10255  0055BC  0E7F               	movlw	high _show0_1
 10256  0055BE  205A               	addwfc	??_animation0+1,w,c
 10257  0055C0  6EF7               	movwf	tblptrh,c
 10258  0055C2                     	if	0	;There are less than 3 active tblptr bytes
 10259  0055C2                     	endif
 10260  0055C2  0008               	tblrd		*
 10261  0055C4  50F5               	movf	tablat,w,c
 10262  0055C6  ECD8  F024         	call	_set_led
 10263                           
 10264                           ;newmain.c: 639: write_display();
 10265  0055CA  EC8A  F025         	call	_write_display	;wreg free
 10266                           
 10267                           ;newmain.c: 640: _delay((unsigned long)((10)*(4000000/4000.0)));
 10268  0055CE  0E0D               	movlw	13
 10269  0055D0  6E59               	movwf	??_animation0& (0+255),c
 10270  0055D2  0EFC               	movlw	252
 10271  0055D4                     u7147:
 10272  0055D4  2EE8               	decfsz	wreg,f,c
 10273  0055D6  D7FE               	bra	u7147
 10274  0055D8  2E59               	decfsz	??_animation0& (0+255),f,c
 10275  0055DA  D7FC               	bra	u7147
 10276                           
 10277                           ;newmain.c: 641: clr_led(show0_1[i]);
 10278  0055DC  505F               	movf	animation0@i,w,c
 10279  0055DE  0D01               	mullw	1
 10280  0055E0  0E8B               	movlw	low _show0_1
 10281  0055E2  24F3               	addwf	prodl,w,c
 10282  0055E4  6EF6               	movwf	tblptrl,c
 10283  0055E6  0E7F               	movlw	high _show0_1
 10284  0055E8  20F4               	addwfc	prodh,w,c
 10285  0055EA  6EF7               	movwf	tblptrh,c
 10286  0055EC                     	if	0	;There are less than 3 active tblptr bytes
 10287  0055EC                     	endif
 10288  0055EC  0008               	tblrd		*
 10289  0055EE  50F5               	movf	tablat,w,c
 10290  0055F0  EC2F  F025         	call	_clr_led
 10291                           
 10292                           ;newmain.c: 642: clr_led(show0_1[i + 1]);
 10293  0055F4  505F               	movf	animation0@i,w,c
 10294  0055F6  6E59               	movwf	??_animation0& (0+255),c
 10295  0055F8  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10296  0055FA  0E01               	movlw	1
 10297  0055FC  2659               	addwf	??_animation0,f,c
 10298  0055FE  0E00               	movlw	0
 10299  005600  225A               	addwfc	??_animation0+1,f,c
 10300  005602  0E8B               	movlw	low _show0_1
 10301  005604  2459               	addwf	??_animation0,w,c
 10302  005606  6EF6               	movwf	tblptrl,c
 10303  005608  0E7F               	movlw	high _show0_1
 10304  00560A  205A               	addwfc	??_animation0+1,w,c
 10305  00560C  6EF7               	movwf	tblptrh,c
 10306  00560E                     	if	0	;There are less than 3 active tblptr bytes
 10307  00560E                     	endif
 10308  00560E  0008               	tblrd		*
 10309  005610  50F5               	movf	tablat,w,c
 10310  005612  EC2F  F025         	call	_clr_led
 10311                           
 10312                           ;newmain.c: 643: write_display();
 10313  005616  EC8A  F025         	call	_write_display	;wreg free
 10314  00561A  0E02               	movlw	2
 10315  00561C  265F               	addwf	animation0@i,f,c
 10316  00561E  D7B4               	goto	l3470
 10317  005620                     l251:
 10318  005620  0E02               	movlw	2
 10319  005622  185D               	xorwf	animation0@m,w,c
 10320  005624  A4D8               	btfss	status,2,c
 10321  005626  D04E               	goto	l255
 10322                           
 10323                           ;newmain.c: 646: for (i = 39; i > 20; i -= 2) {
 10324  005628  0E27               	movlw	39
 10325  00562A  6E5F               	movwf	animation0@i,c
 10326  00562C                     l3494:
 10327  00562C  0E15               	movlw	21
 10328  00562E  605F               	cpfslt	animation0@i,c
 10329  005630  D001               	goto	l256
 10330  005632  0012               	return	
 10331  005634                     l256:
 10332                           
 10333                           ;newmain.c: 647: set_led(show0_1[i]);
 10334  005634  505F               	movf	animation0@i,w,c
 10335  005636  0D01               	mullw	1
 10336  005638  0E8B               	movlw	low _show0_1
 10337  00563A  24F3               	addwf	prodl,w,c
 10338  00563C  6EF6               	movwf	tblptrl,c
 10339  00563E  0E7F               	movlw	high _show0_1
 10340  005640  20F4               	addwfc	prodh,w,c
 10341  005642  6EF7               	movwf	tblptrh,c
 10342  005644                     	if	0	;There are less than 3 active tblptr bytes
 10343  005644                     	endif
 10344  005644  0008               	tblrd		*
 10345  005646  50F5               	movf	tablat,w,c
 10346  005648  ECD8  F024         	call	_set_led
 10347                           
 10348                           ;newmain.c: 648: set_led(show0_1[i + 1]);
 10349  00564C  505F               	movf	animation0@i,w,c
 10350  00564E  6E59               	movwf	??_animation0& (0+255),c
 10351  005650  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10352  005652  0E01               	movlw	1
 10353  005654  2659               	addwf	??_animation0,f,c
 10354  005656  0E00               	movlw	0
 10355  005658  225A               	addwfc	??_animation0+1,f,c
 10356  00565A  0E8B               	movlw	low _show0_1
 10357  00565C  2459               	addwf	??_animation0,w,c
 10358  00565E  6EF6               	movwf	tblptrl,c
 10359  005660  0E7F               	movlw	high _show0_1
 10360  005662  205A               	addwfc	??_animation0+1,w,c
 10361  005664  6EF7               	movwf	tblptrh,c
 10362  005666                     	if	0	;There are less than 3 active tblptr bytes
 10363  005666                     	endif
 10364  005666  0008               	tblrd		*
 10365  005668  50F5               	movf	tablat,w,c
 10366  00566A  ECD8  F024         	call	_set_led
 10367                           
 10368                           ;newmain.c: 649: write_display();
 10369  00566E  EC8A  F025         	call	_write_display	;wreg free
 10370                           
 10371                           ;newmain.c: 650: _delay((unsigned long)((10)*(4000000/4000.0)));
 10372  005672  0E0D               	movlw	13
 10373  005674  6E59               	movwf	??_animation0& (0+255),c
 10374  005676  0EFC               	movlw	252
 10375  005678                     u7157:
 10376  005678  2EE8               	decfsz	wreg,f,c
 10377  00567A  D7FE               	bra	u7157
 10378  00567C  2E59               	decfsz	??_animation0& (0+255),f,c
 10379  00567E  D7FC               	bra	u7157
 10380                           
 10381                           ;newmain.c: 651: clr_led(show0_1[i]);
 10382  005680  505F               	movf	animation0@i,w,c
 10383  005682  0D01               	mullw	1
 10384  005684  0E8B               	movlw	low _show0_1
 10385  005686  24F3               	addwf	prodl,w,c
 10386  005688  6EF6               	movwf	tblptrl,c
 10387  00568A  0E7F               	movlw	high _show0_1
 10388  00568C  20F4               	addwfc	prodh,w,c
 10389  00568E  6EF7               	movwf	tblptrh,c
 10390  005690                     	if	0	;There are less than 3 active tblptr bytes
 10391  005690                     	endif
 10392  005690  0008               	tblrd		*
 10393  005692  50F5               	movf	tablat,w,c
 10394  005694  EC2F  F025         	call	_clr_led
 10395                           
 10396                           ;newmain.c: 652: clr_led(show0_1[i + 1]);
 10397  005698  505F               	movf	animation0@i,w,c
 10398  00569A  6E59               	movwf	??_animation0& (0+255),c
 10399  00569C  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10400  00569E  0E01               	movlw	1
 10401  0056A0  2659               	addwf	??_animation0,f,c
 10402  0056A2  0E00               	movlw	0
 10403  0056A4  225A               	addwfc	??_animation0+1,f,c
 10404  0056A6  0E8B               	movlw	low _show0_1
 10405  0056A8  2459               	addwf	??_animation0,w,c
 10406  0056AA  6EF6               	movwf	tblptrl,c
 10407  0056AC  0E7F               	movlw	high _show0_1
 10408  0056AE  205A               	addwfc	??_animation0+1,w,c
 10409  0056B0  6EF7               	movwf	tblptrh,c
 10410  0056B2                     	if	0	;There are less than 3 active tblptr bytes
 10411  0056B2                     	endif
 10412  0056B2  0008               	tblrd		*
 10413  0056B4  50F5               	movf	tablat,w,c
 10414  0056B6  EC2F  F025         	call	_clr_led
 10415                           
 10416                           ;newmain.c: 653: write_display();
 10417  0056BA  EC8A  F025         	call	_write_display	;wreg free
 10418  0056BE  0E02               	movlw	2
 10419  0056C0  5E5F               	subwf	animation0@i,f,c
 10420  0056C2  D7B4               	goto	l3494
 10421  0056C4                     l255:
 10422  0056C4  0E03               	movlw	3
 10423  0056C6  185D               	xorwf	animation0@m,w,c
 10424  0056C8  A4D8               	btfss	status,2,c
 10425  0056CA  D04E               	goto	l259
 10426                           
 10427                           ;newmain.c: 656: for (i = 0; i < 19; i += 2) {
 10428  0056CC  0E00               	movlw	0
 10429  0056CE  6E5F               	movwf	animation0@i,c
 10430  0056D0                     l3518:
 10431  0056D0  0E12               	movlw	18
 10432  0056D2  645F               	cpfsgt	animation0@i,c
 10433  0056D4  D001               	goto	l260
 10434  0056D6  0012               	return	
 10435  0056D8                     l260:
 10436                           
 10437                           ;newmain.c: 657: set_led(show0_2[i]);
 10438  0056D8  505F               	movf	animation0@i,w,c
 10439  0056DA  0D01               	mullw	1
 10440  0056DC  0E63               	movlw	low _show0_2
 10441  0056DE  24F3               	addwf	prodl,w,c
 10442  0056E0  6EF6               	movwf	tblptrl,c
 10443  0056E2  0E7F               	movlw	high _show0_2
 10444  0056E4  20F4               	addwfc	prodh,w,c
 10445  0056E6  6EF7               	movwf	tblptrh,c
 10446  0056E8                     	if	0	;There are less than 3 active tblptr bytes
 10447  0056E8                     	endif
 10448  0056E8  0008               	tblrd		*
 10449  0056EA  50F5               	movf	tablat,w,c
 10450  0056EC  ECD8  F024         	call	_set_led
 10451                           
 10452                           ;newmain.c: 658: set_led(show0_2[i + 1]);
 10453  0056F0  505F               	movf	animation0@i,w,c
 10454  0056F2  6E59               	movwf	??_animation0& (0+255),c
 10455  0056F4  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10456  0056F6  0E01               	movlw	1
 10457  0056F8  2659               	addwf	??_animation0,f,c
 10458  0056FA  0E00               	movlw	0
 10459  0056FC  225A               	addwfc	??_animation0+1,f,c
 10460  0056FE  0E63               	movlw	low _show0_2
 10461  005700  2459               	addwf	??_animation0,w,c
 10462  005702  6EF6               	movwf	tblptrl,c
 10463  005704  0E7F               	movlw	high _show0_2
 10464  005706  205A               	addwfc	??_animation0+1,w,c
 10465  005708  6EF7               	movwf	tblptrh,c
 10466  00570A                     	if	0	;There are less than 3 active tblptr bytes
 10467  00570A                     	endif
 10468  00570A  0008               	tblrd		*
 10469  00570C  50F5               	movf	tablat,w,c
 10470  00570E  ECD8  F024         	call	_set_led
 10471                           
 10472                           ;newmain.c: 659: write_display();
 10473  005712  EC8A  F025         	call	_write_display	;wreg free
 10474                           
 10475                           ;newmain.c: 660: _delay((unsigned long)((10)*(4000000/4000.0)));
 10476  005716  0E0D               	movlw	13
 10477  005718  6E59               	movwf	??_animation0& (0+255),c
 10478  00571A  0EFC               	movlw	252
 10479  00571C                     u7167:
 10480  00571C  2EE8               	decfsz	wreg,f,c
 10481  00571E  D7FE               	bra	u7167
 10482  005720  2E59               	decfsz	??_animation0& (0+255),f,c
 10483  005722  D7FC               	bra	u7167
 10484                           
 10485                           ;newmain.c: 661: clr_led(show0_2[i]);
 10486  005724  505F               	movf	animation0@i,w,c
 10487  005726  0D01               	mullw	1
 10488  005728  0E63               	movlw	low _show0_2
 10489  00572A  24F3               	addwf	prodl,w,c
 10490  00572C  6EF6               	movwf	tblptrl,c
 10491  00572E  0E7F               	movlw	high _show0_2
 10492  005730  20F4               	addwfc	prodh,w,c
 10493  005732  6EF7               	movwf	tblptrh,c
 10494  005734                     	if	0	;There are less than 3 active tblptr bytes
 10495  005734                     	endif
 10496  005734  0008               	tblrd		*
 10497  005736  50F5               	movf	tablat,w,c
 10498  005738  EC2F  F025         	call	_clr_led
 10499                           
 10500                           ;newmain.c: 662: clr_led(show0_2[i + 1]);
 10501  00573C  505F               	movf	animation0@i,w,c
 10502  00573E  6E59               	movwf	??_animation0& (0+255),c
 10503  005740  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10504  005742  0E01               	movlw	1
 10505  005744  2659               	addwf	??_animation0,f,c
 10506  005746  0E00               	movlw	0
 10507  005748  225A               	addwfc	??_animation0+1,f,c
 10508  00574A  0E63               	movlw	low _show0_2
 10509  00574C  2459               	addwf	??_animation0,w,c
 10510  00574E  6EF6               	movwf	tblptrl,c
 10511  005750  0E7F               	movlw	high _show0_2
 10512  005752  205A               	addwfc	??_animation0+1,w,c
 10513  005754  6EF7               	movwf	tblptrh,c
 10514  005756                     	if	0	;There are less than 3 active tblptr bytes
 10515  005756                     	endif
 10516  005756  0008               	tblrd		*
 10517  005758  50F5               	movf	tablat,w,c
 10518  00575A  EC2F  F025         	call	_clr_led
 10519                           
 10520                           ;newmain.c: 663: write_display();
 10521  00575E  EC8A  F025         	call	_write_display	;wreg free
 10522  005762  0E02               	movlw	2
 10523  005764  265F               	addwf	animation0@i,f,c
 10524  005766  D7B4               	goto	l3518
 10525  005768                     l259:
 10526  005768  0E04               	movlw	4
 10527  00576A  185D               	xorwf	animation0@m,w,c
 10528  00576C  A4D8               	btfss	status,2,c
 10529  00576E  D04E               	goto	l263
 10530                           
 10531                           ;newmain.c: 666: for (i = 39; i > 20; i -= 2) {
 10532  005770  0E27               	movlw	39
 10533  005772  6E5F               	movwf	animation0@i,c
 10534  005774                     l3542:
 10535  005774  0E15               	movlw	21
 10536  005776  605F               	cpfslt	animation0@i,c
 10537  005778  D001               	goto	l264
 10538  00577A  0012               	return	
 10539  00577C                     l264:
 10540                           
 10541                           ;newmain.c: 667: set_led(show0_2[i]);
 10542  00577C  505F               	movf	animation0@i,w,c
 10543  00577E  0D01               	mullw	1
 10544  005780  0E63               	movlw	low _show0_2
 10545  005782  24F3               	addwf	prodl,w,c
 10546  005784  6EF6               	movwf	tblptrl,c
 10547  005786  0E7F               	movlw	high _show0_2
 10548  005788  20F4               	addwfc	prodh,w,c
 10549  00578A  6EF7               	movwf	tblptrh,c
 10550  00578C                     	if	0	;There are less than 3 active tblptr bytes
 10551  00578C                     	endif
 10552  00578C  0008               	tblrd		*
 10553  00578E  50F5               	movf	tablat,w,c
 10554  005790  ECD8  F024         	call	_set_led
 10555                           
 10556                           ;newmain.c: 668: set_led(show0_2[i + 1]);
 10557  005794  505F               	movf	animation0@i,w,c
 10558  005796  6E59               	movwf	??_animation0& (0+255),c
 10559  005798  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10560  00579A  0E01               	movlw	1
 10561  00579C  2659               	addwf	??_animation0,f,c
 10562  00579E  0E00               	movlw	0
 10563  0057A0  225A               	addwfc	??_animation0+1,f,c
 10564  0057A2  0E63               	movlw	low _show0_2
 10565  0057A4  2459               	addwf	??_animation0,w,c
 10566  0057A6  6EF6               	movwf	tblptrl,c
 10567  0057A8  0E7F               	movlw	high _show0_2
 10568  0057AA  205A               	addwfc	??_animation0+1,w,c
 10569  0057AC  6EF7               	movwf	tblptrh,c
 10570  0057AE                     	if	0	;There are less than 3 active tblptr bytes
 10571  0057AE                     	endif
 10572  0057AE  0008               	tblrd		*
 10573  0057B0  50F5               	movf	tablat,w,c
 10574  0057B2  ECD8  F024         	call	_set_led
 10575                           
 10576                           ;newmain.c: 669: write_display();
 10577  0057B6  EC8A  F025         	call	_write_display	;wreg free
 10578                           
 10579                           ;newmain.c: 670: _delay((unsigned long)((10)*(4000000/4000.0)));
 10580  0057BA  0E0D               	movlw	13
 10581  0057BC  6E59               	movwf	??_animation0& (0+255),c
 10582  0057BE  0EFC               	movlw	252
 10583  0057C0                     u7177:
 10584  0057C0  2EE8               	decfsz	wreg,f,c
 10585  0057C2  D7FE               	bra	u7177
 10586  0057C4  2E59               	decfsz	??_animation0& (0+255),f,c
 10587  0057C6  D7FC               	bra	u7177
 10588                           
 10589                           ;newmain.c: 671: clr_led(show0_2[i]);
 10590  0057C8  505F               	movf	animation0@i,w,c
 10591  0057CA  0D01               	mullw	1
 10592  0057CC  0E63               	movlw	low _show0_2
 10593  0057CE  24F3               	addwf	prodl,w,c
 10594  0057D0  6EF6               	movwf	tblptrl,c
 10595  0057D2  0E7F               	movlw	high _show0_2
 10596  0057D4  20F4               	addwfc	prodh,w,c
 10597  0057D6  6EF7               	movwf	tblptrh,c
 10598  0057D8                     	if	0	;There are less than 3 active tblptr bytes
 10599  0057D8                     	endif
 10600  0057D8  0008               	tblrd		*
 10601  0057DA  50F5               	movf	tablat,w,c
 10602  0057DC  EC2F  F025         	call	_clr_led
 10603                           
 10604                           ;newmain.c: 672: clr_led(show0_2[i + 1]);
 10605  0057E0  505F               	movf	animation0@i,w,c
 10606  0057E2  6E59               	movwf	??_animation0& (0+255),c
 10607  0057E4  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10608  0057E6  0E01               	movlw	1
 10609  0057E8  2659               	addwf	??_animation0,f,c
 10610  0057EA  0E00               	movlw	0
 10611  0057EC  225A               	addwfc	??_animation0+1,f,c
 10612  0057EE  0E63               	movlw	low _show0_2
 10613  0057F0  2459               	addwf	??_animation0,w,c
 10614  0057F2  6EF6               	movwf	tblptrl,c
 10615  0057F4  0E7F               	movlw	high _show0_2
 10616  0057F6  205A               	addwfc	??_animation0+1,w,c
 10617  0057F8  6EF7               	movwf	tblptrh,c
 10618  0057FA                     	if	0	;There are less than 3 active tblptr bytes
 10619  0057FA                     	endif
 10620  0057FA  0008               	tblrd		*
 10621  0057FC  50F5               	movf	tablat,w,c
 10622  0057FE  EC2F  F025         	call	_clr_led
 10623                           
 10624                           ;newmain.c: 673: write_display();
 10625  005802  EC8A  F025         	call	_write_display	;wreg free
 10626  005806  0E02               	movlw	2
 10627  005808  5E5F               	subwf	animation0@i,f,c
 10628  00580A  D7B4               	goto	l3542
 10629  00580C                     l263:
 10630  00580C  0E05               	movlw	5
 10631  00580E  185D               	xorwf	animation0@m,w,c
 10632  005810  A4D8               	btfss	status,2,c
 10633  005812  0012               	return	
 10634                           
 10635                           ;newmain.c: 676: int x = 0;
 10636  005814  0E00               	movlw	0
 10637  005816  6E5C               	movwf	animation0@x+1,c
 10638  005818  0E00               	movlw	0
 10639  00581A  6E5B               	movwf	animation0@x,c
 10640                           
 10641                           ;newmain.c: 677: for (i = n; i < 6; i++) {
 10642  00581C  C058  F05F         	movff	animation0@n,animation0@i
 10643  005820                     l3568:
 10644  005820  0E05               	movlw	5
 10645  005822  645F               	cpfsgt	animation0@i,c
 10646  005824  D001               	goto	l268
 10647  005826  D081               	goto	u4120
 10648  005828                     l268:
 10649                           
 10650                           ;newmain.c: 678: for (j = 0; j < 20; j++) {
 10651  005828  0E00               	movlw	0
 10652  00582A  6E5E               	movwf	animation0@j,c
 10653  00582C                     l3574:
 10654  00582C  0E13               	movlw	19
 10655  00582E  645E               	cpfsgt	animation0@j,c
 10656  005830  D001               	goto	l270
 10657  005832  D033               	goto	u4080
 10658  005834                     l270:
 10659                           
 10660                           ;newmain.c: 679: if (show0_3[i][j] != 100)
 10661  005834  505F               	movf	animation0@i,w,c
 10662  005836  0D14               	mullw	20
 10663  005838  0E55               	movlw	low _show0_3
 10664  00583A  6E59               	movwf	??_animation0& (0+255),c
 10665  00583C  0E7B               	movlw	high _show0_3
 10666  00583E  6E5A               	movwf	(??_animation0+1)& (0+255),c
 10667  005840  50F3               	movf	prodl,w,c
 10668  005842  2659               	addwf	??_animation0,f,c
 10669  005844  50F4               	movf	prodh,w,c
 10670  005846  225A               	addwfc	??_animation0+1,f,c
 10671  005848  505E               	movf	animation0@j,w,c
 10672  00584A  0D01               	mullw	1
 10673  00584C  50F3               	movf	prodl,w,c
 10674  00584E  2659               	addwf	??_animation0,f,c
 10675  005850  50F4               	movf	prodh,w,c
 10676  005852  225A               	addwfc	??_animation0+1,f,c
 10677  005854  C059  FFF6         	movff	??_animation0,tblptrl
 10678  005858  C05A  FFF7         	movff	??_animation0+1,tblptrh
 10679  00585C                     	if	0	;tblptru may be non-zero
 10680  00585C                     	endif
 10681  00585C                     	if	0	;tblptru may be non-zero
 10682  00585C                     	endif
 10683  00585C  0008               	tblrd		*
 10684  00585E  50F5               	movf	tablat,w,c
 10685  005860  0A64               	xorlw	100
 10686  005862  B4D8               	btfsc	status,2,c
 10687  005864  D01A               	goto	u4080
 10688                           
 10689                           ;newmain.c: 680: set_led(show0_3[i][j]);
 10690  005866  505F               	movf	animation0@i,w,c
 10691  005868  0D14               	mullw	20
 10692  00586A  0E55               	movlw	low _show0_3
 10693  00586C  6E59               	movwf	??_animation0& (0+255),c
 10694  00586E  0E7B               	movlw	high _show0_3
 10695  005870  6E5A               	movwf	(??_animation0+1)& (0+255),c
 10696  005872  50F3               	movf	prodl,w,c
 10697  005874  2659               	addwf	??_animation0,f,c
 10698  005876  50F4               	movf	prodh,w,c
 10699  005878  225A               	addwfc	??_animation0+1,f,c
 10700  00587A  505E               	movf	animation0@j,w,c
 10701  00587C  0D01               	mullw	1
 10702  00587E  50F3               	movf	prodl,w,c
 10703  005880  2659               	addwf	??_animation0,f,c
 10704  005882  50F4               	movf	prodh,w,c
 10705  005884  225A               	addwfc	??_animation0+1,f,c
 10706  005886  C059  FFF6         	movff	??_animation0,tblptrl
 10707  00588A  C05A  FFF7         	movff	??_animation0+1,tblptrh
 10708  00588E                     	if	0	;tblptru may be non-zero
 10709  00588E                     	endif
 10710  00588E                     	if	0	;tblptru may be non-zero
 10711  00588E                     	endif
 10712  00588E  0008               	tblrd		*
 10713  005890  50F5               	movf	tablat,w,c
 10714  005892  ECD8  F024         	call	_set_led
 10715                           
 10716                           ;newmain.c: 681: else
 10717                           ;newmain.c: 682: break;
 10718  005896  2A5E               	incf	animation0@j,f,c
 10719  005898  D7C9               	goto	l3574
 10720  00589A                     u4080:
 10721                           
 10722                           ;newmain.c: 683: }
 10723                           ;newmain.c: 684: write_display();
 10724  00589A  EC8A  F025         	call	_write_display	;wreg free
 10725                           
 10726                           ;newmain.c: 685: _delay((unsigned long)((10)*(4000000/4000.0)));
 10727  00589E  0E0D               	movlw	13
 10728  0058A0  6E59               	movwf	??_animation0& (0+255),c
 10729  0058A2  0EFC               	movlw	252
 10730  0058A4                     u7187:
 10731  0058A4  2EE8               	decfsz	wreg,f,c
 10732  0058A6  D7FE               	bra	u7187
 10733  0058A8  2E59               	decfsz	??_animation0& (0+255),f,c
 10734  0058AA  D7FC               	bra	u7187
 10735                           
 10736                           ;newmain.c: 686: x++;
 10737  0058AC  4A5B               	infsnz	animation0@x,f,c
 10738  0058AE  2A5C               	incf	animation0@x+1,f,c
 10739                           
 10740                           ;newmain.c: 687: for (j = 0; j < 20; j++) {
 10741  0058B0  0E00               	movlw	0
 10742  0058B2  6E5E               	movwf	animation0@j,c
 10743  0058B4                     l3594:
 10744  0058B4  0E13               	movlw	19
 10745  0058B6  645E               	cpfsgt	animation0@j,c
 10746  0058B8  D001               	goto	l274
 10747  0058BA  D033               	goto	u4110
 10748  0058BC                     l274:
 10749                           
 10750                           ;newmain.c: 688: if (show0_3[i][j] != 100)
 10751  0058BC  505F               	movf	animation0@i,w,c
 10752  0058BE  0D14               	mullw	20
 10753  0058C0  0E55               	movlw	low _show0_3
 10754  0058C2  6E59               	movwf	??_animation0& (0+255),c
 10755  0058C4  0E7B               	movlw	high _show0_3
 10756  0058C6  6E5A               	movwf	(??_animation0+1)& (0+255),c
 10757  0058C8  50F3               	movf	prodl,w,c
 10758  0058CA  2659               	addwf	??_animation0,f,c
 10759  0058CC  50F4               	movf	prodh,w,c
 10760  0058CE  225A               	addwfc	??_animation0+1,f,c
 10761  0058D0  505E               	movf	animation0@j,w,c
 10762  0058D2  0D01               	mullw	1
 10763  0058D4  50F3               	movf	prodl,w,c
 10764  0058D6  2659               	addwf	??_animation0,f,c
 10765  0058D8  50F4               	movf	prodh,w,c
 10766  0058DA  225A               	addwfc	??_animation0+1,f,c
 10767  0058DC  C059  FFF6         	movff	??_animation0,tblptrl
 10768  0058E0  C05A  FFF7         	movff	??_animation0+1,tblptrh
 10769  0058E4                     	if	0	;tblptru may be non-zero
 10770  0058E4                     	endif
 10771  0058E4                     	if	0	;tblptru may be non-zero
 10772  0058E4                     	endif
 10773  0058E4  0008               	tblrd		*
 10774  0058E6  50F5               	movf	tablat,w,c
 10775  0058E8  0A64               	xorlw	100
 10776  0058EA  B4D8               	btfsc	status,2,c
 10777  0058EC  D01A               	goto	u4110
 10778                           
 10779                           ;newmain.c: 689: clr_led(show0_3[i][j]);
 10780  0058EE  505F               	movf	animation0@i,w,c
 10781  0058F0  0D14               	mullw	20
 10782  0058F2  0E55               	movlw	low _show0_3
 10783  0058F4  6E59               	movwf	??_animation0& (0+255),c
 10784  0058F6  0E7B               	movlw	high _show0_3
 10785  0058F8  6E5A               	movwf	(??_animation0+1)& (0+255),c
 10786  0058FA  50F3               	movf	prodl,w,c
 10787  0058FC  2659               	addwf	??_animation0,f,c
 10788  0058FE  50F4               	movf	prodh,w,c
 10789  005900  225A               	addwfc	??_animation0+1,f,c
 10790  005902  505E               	movf	animation0@j,w,c
 10791  005904  0D01               	mullw	1
 10792  005906  50F3               	movf	prodl,w,c
 10793  005908  2659               	addwf	??_animation0,f,c
 10794  00590A  50F4               	movf	prodh,w,c
 10795  00590C  225A               	addwfc	??_animation0+1,f,c
 10796  00590E  C059  FFF6         	movff	??_animation0,tblptrl
 10797  005912  C05A  FFF7         	movff	??_animation0+1,tblptrh
 10798  005916                     	if	0	;tblptru may be non-zero
 10799  005916                     	endif
 10800  005916                     	if	0	;tblptru may be non-zero
 10801  005916                     	endif
 10802  005916  0008               	tblrd		*
 10803  005918  50F5               	movf	tablat,w,c
 10804  00591A  EC2F  F025         	call	_clr_led
 10805                           
 10806                           ;newmain.c: 690: else
 10807                           ;newmain.c: 691: break;
 10808  00591E  2A5E               	incf	animation0@j,f,c
 10809  005920  D7C9               	goto	l3594
 10810  005922                     u4110:
 10811                           
 10812                           ;newmain.c: 692: }
 10813                           ;newmain.c: 693: write_display();
 10814  005922  EC8A  F025         	call	_write_display	;wreg free
 10815  005926  2A5F               	incf	animation0@i,f,c
 10816  005928  D77B               	goto	l3568
 10817  00592A                     u4120:
 10818                           
 10819                           ;newmain.c: 694: }
 10820                           ;newmain.c: 695: if (x < 3)
 10821  00592A  BE5C               	btfsc	animation0@x+1,7,c
 10822  00592C  D006               	goto	u4130
 10823  00592E  505C               	movf	animation0@x+1,w,c
 10824  005930  E10D               	bnz	l279
 10825  005932  0E03               	movlw	3
 10826  005934  5C5B               	subwf	animation0@x,w,c
 10827  005936  B0D8               	btfsc	status,0,c
 10828  005938  0012               	return	
 10829  00593A                     u4130:
 10830                           
 10831                           ;newmain.c: 696: _delay((unsigned long)((20)*(4000000/4000.0)));
 10832  00593A  0E1A               	movlw	26
 10833  00593C  6E59               	movwf	??_animation0& (0+255),c
 10834  00593E  0EF8               	movlw	248
 10835  005940                     u7197:
 10836  005940  2EE8               	decfsz	wreg,f,c
 10837  005942  D7FE               	bra	u7197
 10838  005944  2E59               	decfsz	??_animation0& (0+255),f,c
 10839  005946  D7FC               	bra	u7197
 10840  005948  D000               	nop2	
 10841  00594A  0012               	return	
 10842  00594C                     l279:
 10843  00594C  0012               	return		;funcret
 10844  00594E                     __end_of_animation0:
 10845                           	opt stack 0
 10846                           tblptru	equ	0xFF8
 10847                           tblptrh	equ	0xFF7
 10848                           tblptrl	equ	0xFF6
 10849                           tablat	equ	0xFF5
 10850                           prodh	equ	0xFF4
 10851                           prodl	equ	0xFF3
 10852                           postinc0	equ	0xFEE
 10853                           wreg	equ	0xFE8
 10854                           postinc1	equ	0xFE6
 10855                           fsr1h	equ	0xFE2
 10856                           fsr1l	equ	0xFE1
 10857                           indf2	equ	0xFDF
 10858                           postinc2	equ	0xFDE
 10859                           postdec2	equ	0xFDD
 10860                           fsr2h	equ	0xFDA
 10861                           fsr2l	equ	0xFD9
 10862                           status	equ	0xFD8
 10863                           
 10864 ;; *************** function _write_display *****************
 10865 ;; Defined at:
 10866 ;;		line 1175 in file "newmain.c"
 10867 ;; Parameters:    Size  Location     Type
 10868 ;;		None
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;  i               2   14[COMRAM] int 
 10871 ;;  j               2   12[COMRAM] int 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10881 ;;      Params:         0       0       0       0       0       0       0
 10882 ;;      Locals:         4       0       0       0       0       0       0
 10883 ;;      Temps:          6       0       0       0       0       0       0
 10884 ;;      Totals:        10       0       0       0       0       0       0
 10885 ;;Total ram usage:       10 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    3
 10888 ;; This function calls:
 10889 ;;		_MyIdleI2C
 10890 ;;		_MyStartI2C
 10891 ;;		_MyStopI2C
 10892 ;;		___wmul
 10893 ;;		_write
 10894 ;; This function is called by:
 10895 ;;		_main
 10896 ;;		_animation0
 10897 ;;		_animation1
 10898 ;;		_animation2
 10899 ;;		_animation3
 10900 ;;		_animation4
 10901 ;;		_animation5
 10902 ;;		_animation6
 10903 ;;		_animation7
 10904 ;; This function uses a non-reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text17
 10908  004B14                     __ptext17:
 10909                           	opt stack 0
 10910  004B14                     _write_display:
 10911                           	opt stack 27
 10912                           
 10913                           ;newmain.c: 1176: int i, j;
 10914                           ;newmain.c: 1177: for (i = 0; i < 4; i++) {
 10915                           
 10916                           ;incstack = 0
 10917  004B14  0E00               	movlw	0
 10918  004B16  6E52               	movwf	write_display@i+1,c
 10919  004B18  0E00               	movlw	0
 10920  004B1A  6E51               	movwf	write_display@i,c
 10921  004B1C  BE52               	btfsc	write_display@i+1,7,c
 10922  004B1E  D008               	goto	l551
 10923  004B20  5052               	movf	write_display@i+1,w,c
 10924  004B22  E105               	bnz	u3650
 10925  004B24  0E04               	movlw	4
 10926  004B26  5C51               	subwf	write_display@i,w,c
 10927  004B28  B0D8               	btfsc	status,0,c
 10928  004B2A  0012               	return	
 10929  004B2C  D001               	goto	l551
 10930  004B2E                     u3650:
 10931  004B2E  0012               	return	
 10932  004B30                     l551:
 10933                           
 10934                           ;newmain.c: 1178: MyIdleI2C();
 10935  004B30  EC30  F023         	call	_MyIdleI2C	;wreg free
 10936                           
 10937                           ;newmain.c: 1179: MyStartI2C();
 10938  004B34  EC29  F023         	call	_MyStartI2C	;wreg free
 10939                           
 10940                           ;newmain.c: 1180: MyIdleI2C();
 10941  004B38  EC30  F023         	call	_MyIdleI2C	;wreg free
 10942                           
 10943                           ;newmain.c: 1181: write(matrices[i].address | 0x00);
 10944  004B3C  C051  F043         	movff	write_display@i,___wmul@multiplier
 10945  004B40  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 10946  004B44  0E00               	movlw	0
 10947  004B46  6E46               	movwf	___wmul@multiplicand+1,c
 10948  004B48  0E1D               	movlw	29
 10949  004B4A  6E45               	movwf	___wmul@multiplicand,c
 10950  004B4C  EC71  F023         	call	___wmul	;wreg free
 10951  004B50  0E80               	movlw	low _matrices
 10952  004B52  2443               	addwf	?___wmul,w,c
 10953  004B54  6ED9               	movwf	fsr2l,c
 10954  004B56  0E00               	movlw	high _matrices
 10955  004B58  2044               	addwfc	?___wmul+1,w,c
 10956  004B5A  6EDA               	movwf	fsr2h,c
 10957  004B5C  50DF               	movf	indf2,w,c
 10958  004B5E  EC84  F023         	call	_write
 10959                           
 10960                           ;newmain.c: 1182: MyIdleI2C();
 10961  004B62  EC30  F023         	call	_MyIdleI2C	;wreg free
 10962                           
 10963                           ;newmain.c: 1183: write(0x00);
 10964  004B66  0E00               	movlw	0
 10965  004B68  EC84  F023         	call	_write
 10966                           
 10967                           ;newmain.c: 1184: MyIdleI2C();
 10968  004B6C  EC30  F023         	call	_MyIdleI2C	;wreg free
 10969                           
 10970                           ;newmain.c: 1186: for (j = 0; j < 8; j++) {
 10971  004B70  0E00               	movlw	0
 10972  004B72  6E50               	movwf	write_display@j+1,c
 10973  004B74  0E00               	movlw	0
 10974  004B76  6E4F               	movwf	write_display@j,c
 10975  004B78                     l3298:
 10976  004B78  BE50               	btfsc	write_display@j+1,7,c
 10977  004B7A  D006               	goto	l553
 10978  004B7C  5050               	movf	write_display@j+1,w,c
 10979  004B7E  E15A               	bnz	l3308
 10980  004B80  0E08               	movlw	8
 10981  004B82  5C4F               	subwf	write_display@j,w,c
 10982  004B84  B0D8               	btfsc	status,0,c
 10983  004B86  D056               	goto	u3670
 10984  004B88                     l553:
 10985                           
 10986                           ;newmain.c: 1187: write(matrices[i].display_buffer[j]&0xff);
 10987  004B88  C051  F043         	movff	write_display@i,___wmul@multiplier
 10988  004B8C  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 10989  004B90  0E00               	movlw	0
 10990  004B92  6E46               	movwf	___wmul@multiplicand+1,c
 10991  004B94  0E1D               	movlw	29
 10992  004B96  6E45               	movwf	___wmul@multiplicand,c
 10993  004B98  EC71  F023         	call	___wmul	;wreg free
 10994  004B9C  C04F  F049         	movff	write_display@j,??_write_display
 10995  004BA0  C050  F04A         	movff	write_display@j+1,??_write_display+1
 10996  004BA4  90D8               	bcf	status,0,c
 10997  004BA6  3649               	rlcf	??_write_display,f,c
 10998  004BA8  364A               	rlcf	??_write_display+1,f,c
 10999  004BAA  0E0D               	movlw	13
 11000  004BAC  2649               	addwf	??_write_display,f,c
 11001  004BAE  0E00               	movlw	0
 11002  004BB0  224A               	addwfc	??_write_display+1,f,c
 11003  004BB2  0E80               	movlw	low _matrices
 11004  004BB4  6E4B               	movwf	(??_write_display+2)& (0+255),c
 11005  004BB6  0E00               	movlw	high _matrices
 11006  004BB8  6E4C               	movwf	(??_write_display+3)& (0+255),c
 11007  004BBA  5049               	movf	??_write_display,w,c
 11008  004BBC  264B               	addwf	??_write_display+2,f,c
 11009  004BBE  504A               	movf	??_write_display+1,w,c
 11010  004BC0  224C               	addwfc	??_write_display+3,f,c
 11011  004BC2  5043               	movf	?___wmul,w,c
 11012  004BC4  244B               	addwf	??_write_display+2,w,c
 11013  004BC6  6ED9               	movwf	fsr2l,c
 11014  004BC8  5044               	movf	?___wmul+1,w,c
 11015  004BCA  204C               	addwfc	??_write_display+3,w,c
 11016  004BCC  6EDA               	movwf	fsr2h,c
 11017  004BCE  50DF               	movf	indf2,w,c
 11018  004BD0  EC84  F023         	call	_write
 11019                           
 11020                           ;newmain.c: 1188: write(matrices[i].display_buffer[j] >> 8);
 11021  004BD4  C051  F043         	movff	write_display@i,___wmul@multiplier
 11022  004BD8  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 11023  004BDC  0E00               	movlw	0
 11024  004BDE  6E46               	movwf	___wmul@multiplicand+1,c
 11025  004BE0  0E1D               	movlw	29
 11026  004BE2  6E45               	movwf	___wmul@multiplicand,c
 11027  004BE4  EC71  F023         	call	___wmul	;wreg free
 11028  004BE8  C04F  F049         	movff	write_display@j,??_write_display
 11029  004BEC  C050  F04A         	movff	write_display@j+1,??_write_display+1
 11030  004BF0  90D8               	bcf	status,0,c
 11031  004BF2  3649               	rlcf	??_write_display,f,c
 11032  004BF4  364A               	rlcf	??_write_display+1,f,c
 11033  004BF6  0E0D               	movlw	13
 11034  004BF8  2649               	addwf	??_write_display,f,c
 11035  004BFA  0E00               	movlw	0
 11036  004BFC  224A               	addwfc	??_write_display+1,f,c
 11037  004BFE  0E80               	movlw	low _matrices
 11038  004C00  6E4B               	movwf	(??_write_display+2)& (0+255),c
 11039  004C02  0E00               	movlw	high _matrices
 11040  004C04  6E4C               	movwf	(??_write_display+3)& (0+255),c
 11041  004C06  5049               	movf	??_write_display,w,c
 11042  004C08  264B               	addwf	??_write_display+2,f,c
 11043  004C0A  504A               	movf	??_write_display+1,w,c
 11044  004C0C  224C               	addwfc	??_write_display+3,f,c
 11045  004C0E  5043               	movf	?___wmul,w,c
 11046  004C10  244B               	addwf	??_write_display+2,w,c
 11047  004C12  6ED9               	movwf	fsr2l,c
 11048  004C14  5044               	movf	?___wmul+1,w,c
 11049  004C16  204C               	addwfc	??_write_display+3,w,c
 11050  004C18  6EDA               	movwf	fsr2h,c
 11051  004C1A  CFDE F04D          	movff	postinc2,??_write_display+4
 11052  004C1E  CFDD F04E          	movff	postdec2,??_write_display+5
 11053  004C22  C04E  F04D         	movff	??_write_display+5,??_write_display+4
 11054  004C26  6A4E               	clrf	??_write_display+5,c
 11055  004C28  504D               	movf	??_write_display+4,w,c
 11056  004C2A  EC84  F023         	call	_write
 11057  004C2E  4A4F               	infsnz	write_display@j,f,c
 11058  004C30  2A50               	incf	write_display@j+1,f,c
 11059  004C32  D7A2               	goto	l3298
 11060  004C34                     u3670:
 11061  004C34                     l3308:
 11062                           
 11063                           ;newmain.c: 1189: }
 11064                           ;newmain.c: 1190: MyStopI2C();
 11065  004C34  EC2B  F023         	call	_MyStopI2C	;wreg free
 11066  004C38  4A51               	infsnz	write_display@i,f,c
 11067  004C3A  2A52               	incf	write_display@i+1,f,c
 11068  004C3C  BE52               	btfsc	write_display@i+1,7,c
 11069  004C3E  D778               	goto	l551
 11070  004C40  5052               	movf	write_display@i+1,w,c
 11071  004C42  E101               	bnz	l555
 11072  004C44  D76F               	goto	L20
 11073  004C46                     l555:
 11074  004C46  0012               	return		;funcret
 11075  004C48                     __end_of_write_display:
 11076                           	opt stack 0
 11077                           tblptru	equ	0xFF8
 11078                           tblptrh	equ	0xFF7
 11079                           tblptrl	equ	0xFF6
 11080                           tablat	equ	0xFF5
 11081                           prodh	equ	0xFF4
 11082                           prodl	equ	0xFF3
 11083                           postinc0	equ	0xFEE
 11084                           wreg	equ	0xFE8
 11085                           postinc1	equ	0xFE6
 11086                           fsr1h	equ	0xFE2
 11087                           fsr1l	equ	0xFE1
 11088                           indf2	equ	0xFDF
 11089                           postinc2	equ	0xFDE
 11090                           postdec2	equ	0xFDD
 11091                           fsr2h	equ	0xFDA
 11092                           fsr2l	equ	0xFD9
 11093                           status	equ	0xFD8
 11094                           
 11095 ;; *************** function _write *****************
 11096 ;; Defined at:
 11097 ;;		line 1303 in file "newmain.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  data_out        1    wreg     unsigned char 
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;  data_out        1    3[COMRAM] unsigned char 
 11102 ;;  status          2    4[COMRAM] int 
 11103 ;;  data            1    2[COMRAM] char 
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      void 
 11106 ;; Registers used:
 11107 ;;		wreg, status,2, status,0, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11113 ;;      Params:         0       0       0       0       0       0       0
 11114 ;;      Locals:         4       0       0       0       0       0       0
 11115 ;;      Temps:          0       0       0       0       0       0       0
 11116 ;;      Totals:         4       0       0       0       0       0       0
 11117 ;;Total ram usage:        4 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:    2
 11120 ;; This function calls:
 11121 ;;		_MyWriteI2C
 11122 ;; This function is called by:
 11123 ;;		_main
 11124 ;;		_write_display
 11125 ;;		_read_switch
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           	psect	text18
 11130  004708                     __ptext18:
 11131                           	opt stack 0
 11132  004708                     _write:
 11133                           	opt stack 27
 11134                           
 11135                           ;incstack = 0
 11136                           ;write@data_out stored from wreg
 11137  004708  6E46               	movwf	write@data_out,c
 11138                           
 11139                           ;newmain.c: 1304: signed char data;
 11140                           ;newmain.c: 1305: int status;
 11141                           ;newmain.c: 1306: data = SSPBUF;
 11142  00470A  CFC9 F045          	movff	4041,write@data	;volatile
 11143  00470E                     
 11144                           ;newmain.c: 1308: status = MyWriteI2C(data_out);
 11145  00470E  5046               	movf	write@data_out,w,c
 11146  004710  EC07  F024         	call	_MyWriteI2C
 11147  004714  6E47               	movwf	write@status,c
 11148  004716  6A48               	clrf	write@status+1,c
 11149  004718  BE47               	btfsc	write@status,7,c
 11150  00471A  0648               	decf	write@status+1,f,c
 11151                           
 11152                           ;newmain.c: 1309: if (status == -1) {
 11153  00471C  2847               	incf	write@status,w,c
 11154  00471E  E106               	bnz	l3254
 11155  004720  2848               	incf	write@status+1,w,c
 11156  004722  A4D8               	btfss	status,2,c
 11157  004724  D003               	goto	l620
 11158                           
 11159                           ;newmain.c: 1310: data = SSPBUF;
 11160  004726  CFC9 F045          	movff	4041,write@data	;volatile
 11161                           
 11162                           ;newmain.c: 1311: SSPCON1bits.WCOL = 0;
 11163  00472A  9EC6               	bcf	4038,7,c	;volatile
 11164  00472C                     l620:
 11165  00472C                     l3254:
 11166                           
 11167                           ;newmain.c: 1312: }
 11168                           ;newmain.c: 1313: } while (status != 0);
 11169  00472C  5047               	movf	write@status,w,c
 11170  00472E  1048               	iorwf	write@status+1,w,c
 11171  004730  B4D8               	btfsc	status,2,c
 11172  004732  0012               	return	
 11173  004734  D7EC               	goto	l619
 11174  004736                     __end_of_write:
 11175                           	opt stack 0
 11176                           tblptru	equ	0xFF8
 11177                           tblptrh	equ	0xFF7
 11178                           tblptrl	equ	0xFF6
 11179                           tablat	equ	0xFF5
 11180                           prodh	equ	0xFF4
 11181                           prodl	equ	0xFF3
 11182                           postinc0	equ	0xFEE
 11183                           wreg	equ	0xFE8
 11184                           postinc1	equ	0xFE6
 11185                           fsr1h	equ	0xFE2
 11186                           fsr1l	equ	0xFE1
 11187                           indf2	equ	0xFDF
 11188                           postinc2	equ	0xFDE
 11189                           postdec2	equ	0xFDD
 11190                           fsr2h	equ	0xFDA
 11191                           fsr2l	equ	0xFD9
 11192                           status	equ	0xFD8
 11193                           
 11194 ;; *************** function _MyWriteI2C *****************
 11195 ;; Defined at:
 11196 ;;		line 1275 in file "newmain.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;  data_out        1    wreg     unsigned char 
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;  data_out        1    1[COMRAM] unsigned char 
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  1    wreg      char 
 11203 ;; Registers used:
 11204 ;;		wreg, status,2, status,0, cstack
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11210 ;;      Params:         0       0       0       0       0       0       0
 11211 ;;      Locals:         1       0       0       0       0       0       0
 11212 ;;      Temps:          0       0       0       0       0       0       0
 11213 ;;      Totals:         1       0       0       0       0       0       0
 11214 ;;Total ram usage:        1 bytes
 11215 ;; Hardware stack levels used:    1
 11216 ;; Hardware stack levels required when called:    1
 11217 ;; This function calls:
 11218 ;;		_MyIdleI2C
 11219 ;; This function is called by:
 11220 ;;		_write
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           	psect	text19
 11225  00480E                     __ptext19:
 11226                           	opt stack 0
 11227  00480E                     _MyWriteI2C:
 11228                           	opt stack 27
 11229                           
 11230                           ;incstack = 0
 11231                           ;MyWriteI2C@data_out stored from wreg
 11232  00480E  6E44               	movwf	MyWriteI2C@data_out,c
 11233                           
 11234                           ;newmain.c: 1276: SSPBUF = data_out;
 11235  004810  C044  FFC9         	movff	MyWriteI2C@data_out,4041	;volatile
 11236                           
 11237                           ;newmain.c: 1277: if (SSPCON1bits.WCOL)
 11238  004814  AEC6               	btfss	4038,7,c	;volatile
 11239  004816  D002               	goto	l599
 11240                           
 11241                           ;newmain.c: 1278: return ( -1);
 11242  004818  0EFF               	movlw	255
 11243  00481A  0012               	return	
 11244  00481C                     l599:
 11245                           
 11246                           ;newmain.c: 1279: else {
 11247                           ;newmain.c: 1280: if (((SSPCON1 & 0x0F) != 0x08) && ((SSPCON1 & 0x0F) != 0x0B))
 11248  00481C  50C6               	movf	4038,w,c	;volatile
 11249  00481E  0B0F               	andlw	15
 11250  004820  0A08               	xorlw	8
 11251  004822  B4D8               	btfsc	status,2,c
 11252  004824  D00F               	goto	l602
 11253  004826  50C6               	movf	4038,w,c	;volatile
 11254  004828  0B0F               	andlw	15
 11255  00482A  0A0B               	xorlw	11
 11256  00482C  B4D8               	btfsc	status,2,c
 11257  00482E  D00A               	goto	l602
 11258                           
 11259                           ;newmain.c: 1281: {
 11260                           ;newmain.c: 1282: SSPCON1bits.CKP = 1;
 11261  004830  88C6               	bsf	4038,4,c	;volatile
 11262  004832  A69E               	btfss	3998,3,c	;volatile
 11263  004834  D7FE               	goto	l604
 11264                           
 11265                           ;newmain.c: 1285: if ((!SSPSTATbits.R_W) && (!SSPSTATbits.BF))
 11266  004836  A4C7               	btfss	4039,2,c	;volatile
 11267  004838  B0C7               	btfsc	4039,0,c	;volatile
 11268  00483A  D002               	goto	l606
 11269                           
 11270                           ;newmain.c: 1286: {
 11271                           ;newmain.c: 1287: return ( -2);
 11272  00483C  0EFE               	movlw	254
 11273                           
 11274                           ;newmain.c: 1288: } else {
 11275  00483E  0012               	return	
 11276  004840                     l606:
 11277                           
 11278                           ;newmain.c: 1289: return ( 0);
 11279  004840  0E00               	movlw	0
 11280                           
 11281                           ;newmain.c: 1290: }
 11282                           ;newmain.c: 1291: } else if (((SSPCON1 & 0x0F) == 0x08) || ((SSPCON1 & 0x0F) == 0x0B))
 11283  004842  0012               	return	
 11284  004844                     l602:
 11285  004844  50C6               	movf	4038,w,c	;volatile
 11286  004846  0B0F               	andlw	15
 11287  004848  0A08               	xorlw	8
 11288  00484A  B4D8               	btfsc	status,2,c
 11289  00484C  D005               	goto	u3560
 11290  00484E  50C6               	movf	4038,w,c	;volatile
 11291  004850  0B0F               	andlw	15
 11292  004852  0A0B               	xorlw	11
 11293  004854  A4D8               	btfss	status,2,c
 11294  004856  0012               	return	
 11295  004858                     u3560:
 11296                           
 11297                           ;newmain.c: 1292: {
 11298                           ;newmain.c: 1293: while (SSPSTATbits.BF);
 11299  004858  B0C7               	btfsc	4039,0,c	;volatile
 11300  00485A  D7FE               	goto	u3560
 11301                           
 11302                           ;newmain.c: 1294: MyIdleI2C();
 11303  00485C  EC30  F023         	call	_MyIdleI2C	;wreg free
 11304                           
 11305                           ;newmain.c: 1295: if (SSPCON2bits.ACKSTAT)
 11306  004860  ACC5               	btfss	4037,6,c	;volatile
 11307  004862  D002               	goto	l615
 11308                           
 11309                           ;newmain.c: 1296: return ( -2);
 11310  004864  0EFE               	movlw	254
 11311  004866  0012               	return	
 11312  004868                     l615:
 11313                           
 11314                           ;newmain.c: 1297: else return ( 0);
 11315  004868  0E00               	movlw	0
 11316  00486A  0012               	return	
 11317  00486C                     __end_of_MyWriteI2C:
 11318                           	opt stack 0
 11319                           tblptru	equ	0xFF8
 11320                           tblptrh	equ	0xFF7
 11321                           tblptrl	equ	0xFF6
 11322                           tablat	equ	0xFF5
 11323                           prodh	equ	0xFF4
 11324                           prodl	equ	0xFF3
 11325                           postinc0	equ	0xFEE
 11326                           wreg	equ	0xFE8
 11327                           postinc1	equ	0xFE6
 11328                           fsr1h	equ	0xFE2
 11329                           fsr1l	equ	0xFE1
 11330                           indf2	equ	0xFDF
 11331                           postinc2	equ	0xFDE
 11332                           postdec2	equ	0xFDD
 11333                           fsr2h	equ	0xFDA
 11334                           fsr2l	equ	0xFD9
 11335                           status	equ	0xFD8
 11336                           
 11337 ;; *************** function _MyIdleI2C *****************
 11338 ;; Defined at:
 11339 ;;		line 1270 in file "newmain.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;		None
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;		None
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		wreg, status,2, status,0
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11353 ;;      Params:         0       0       0       0       0       0       0
 11354 ;;      Locals:         0       0       0       0       0       0       0
 11355 ;;      Temps:          1       0       0       0       0       0       0
 11356 ;;      Totals:         1       0       0       0       0       0       0
 11357 ;;Total ram usage:        1 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; This function calls:
 11360 ;;		Nothing
 11361 ;; This function is called by:
 11362 ;;		_main
 11363 ;;		_write_display
 11364 ;;		_read_switch
 11365 ;;		_MyWriteI2C
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text20
 11370  004660                     __ptext20:
 11371                           	opt stack 0
 11372  004660                     _MyIdleI2C:
 11373                           	opt stack 27
 11374                           
 11375                           ;newmain.c: 1272: continue;
 11376                           
 11377                           ;newmain.c: 1271: while ((SSPCON2 & 0x1F) || (SSPSTATbits.R_W))
 11378                           
 11379                           ;incstack = 0
 11380  004660  CFC5 F043          	movff	4037,??_MyIdleI2C	;volatile
 11381  004664  0E1F               	movlw	31
 11382  004666  1643               	andwf	??_MyIdleI2C,f,c
 11383  004668  A4D8               	btfss	status,2,c
 11384  00466A  D7FA               	goto	_MyIdleI2C
 11385  00466C  A4C7               	btfss	4039,2,c	;volatile
 11386  00466E  0012               	return	
 11387  004670  D7F7               	goto	_MyIdleI2C
 11388  004672                     __end_of_MyIdleI2C:
 11389                           	opt stack 0
 11390                           tblptru	equ	0xFF8
 11391                           tblptrh	equ	0xFF7
 11392                           tblptrl	equ	0xFF6
 11393                           tablat	equ	0xFF5
 11394                           prodh	equ	0xFF4
 11395                           prodl	equ	0xFF3
 11396                           postinc0	equ	0xFEE
 11397                           wreg	equ	0xFE8
 11398                           postinc1	equ	0xFE6
 11399                           fsr1h	equ	0xFE2
 11400                           fsr1l	equ	0xFE1
 11401                           indf2	equ	0xFDF
 11402                           postinc2	equ	0xFDE
 11403                           postdec2	equ	0xFDD
 11404                           fsr2h	equ	0xFDA
 11405                           fsr2l	equ	0xFD9
 11406                           status	equ	0xFD8
 11407                           
 11408 ;; *************** function _MyStopI2C *****************
 11409 ;; Defined at:
 11410 ;;		line 1262 in file "newmain.c"
 11411 ;; Parameters:    Size  Location     Type
 11412 ;;		None
 11413 ;; Auto vars:     Size  Location     Type
 11414 ;;		None
 11415 ;; Return value:  Size  Location     Type
 11416 ;;                  1    wreg      void 
 11417 ;; Registers used:
 11418 ;;		None
 11419 ;; Tracked objects:
 11420 ;;		On entry : 0/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11424 ;;      Params:         0       0       0       0       0       0       0
 11425 ;;      Locals:         0       0       0       0       0       0       0
 11426 ;;      Temps:          0       0       0       0       0       0       0
 11427 ;;      Totals:         0       0       0       0       0       0       0
 11428 ;;Total ram usage:        0 bytes
 11429 ;; Hardware stack levels used:    1
 11430 ;; This function calls:
 11431 ;;		Nothing
 11432 ;; This function is called by:
 11433 ;;		_main
 11434 ;;		_write_display
 11435 ;;		_read_switch
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text21
 11440  004656                     __ptext21:
 11441                           	opt stack 0
 11442  004656                     _MyStopI2C:
 11443                           	opt stack 29
 11444                           
 11445                           ;newmain.c: 1263: SSPCON2bits.PEN = 1;
 11446                           
 11447                           ;incstack = 0
 11448  004656  84C5               	bsf	4037,2,c	;volatile
 11449  004658  0012               	return		;funcret
 11450  00465A                     __end_of_MyStopI2C:
 11451                           	opt stack 0
 11452                           tblptru	equ	0xFF8
 11453                           tblptrh	equ	0xFF7
 11454                           tblptrl	equ	0xFF6
 11455                           tablat	equ	0xFF5
 11456                           prodh	equ	0xFF4
 11457                           prodl	equ	0xFF3
 11458                           postinc0	equ	0xFEE
 11459                           wreg	equ	0xFE8
 11460                           postinc1	equ	0xFE6
 11461                           fsr1h	equ	0xFE2
 11462                           fsr1l	equ	0xFE1
 11463                           indf2	equ	0xFDF
 11464                           postinc2	equ	0xFDE
 11465                           postdec2	equ	0xFDD
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function _MyStartI2C *****************
 11471 ;; Defined at:
 11472 ;;		line 1258 in file "newmain.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;		None
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		None
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11486 ;;      Params:         0       0       0       0       0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0
 11489 ;;      Totals:         0       0       0       0       0       0       0
 11490 ;;Total ram usage:        0 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_main
 11496 ;;		_write_display
 11497 ;;		_read_switch
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text22
 11502  004652                     __ptext22:
 11503                           	opt stack 0
 11504  004652                     _MyStartI2C:
 11505                           	opt stack 29
 11506                           
 11507                           ;newmain.c: 1259: SSPCON2bits.SEN = 1;
 11508                           
 11509                           ;incstack = 0
 11510  004652  80C5               	bsf	4037,0,c	;volatile
 11511  004654  0012               	return		;funcret
 11512  004656                     __end_of_MyStartI2C:
 11513                           	opt stack 0
 11514                           tblptru	equ	0xFF8
 11515                           tblptrh	equ	0xFF7
 11516                           tblptrl	equ	0xFF6
 11517                           tablat	equ	0xFF5
 11518                           prodh	equ	0xFF4
 11519                           prodl	equ	0xFF3
 11520                           postinc0	equ	0xFEE
 11521                           wreg	equ	0xFE8
 11522                           postinc1	equ	0xFE6
 11523                           fsr1h	equ	0xFE2
 11524                           fsr1l	equ	0xFE1
 11525                           indf2	equ	0xFDF
 11526                           postinc2	equ	0xFDE
 11527                           postdec2	equ	0xFDD
 11528                           fsr2h	equ	0xFDA
 11529                           fsr2l	equ	0xFD9
 11530                           status	equ	0xFD8
 11531                           
 11532 ;; *************** function _set_led *****************
 11533 ;; Defined at:
 11534 ;;		line 1201 in file "newmain.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;  i               1    wreg     unsigned char 
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  i               1   18[COMRAM] unsigned char 
 11539 ;;  led             2   16[COMRAM] int 
 11540 ;;  matrix          2   14[COMRAM] int 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11550 ;;      Params:         0       0       0       0       0       0       0
 11551 ;;      Locals:         5       0       0       0       0       0       0
 11552 ;;      Temps:          8       0       0       0       0       0       0
 11553 ;;      Totals:        13       0       0       0       0       0       0
 11554 ;;Total ram usage:       13 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    1
 11557 ;; This function calls:
 11558 ;;		___wmul
 11559 ;; This function is called by:
 11560 ;;		_main
 11561 ;;		_animation0
 11562 ;;		_animation1
 11563 ;;		_animation2
 11564 ;;		_animation3
 11565 ;;		_animation4
 11566 ;;		_animation5
 11567 ;;		_animation6
 11568 ;;		_animation7
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text23
 11573  0049B0                     __ptext23:
 11574                           	opt stack 0
 11575  0049B0                     _set_led:
 11576                           	opt stack 29
 11577                           
 11578                           ;incstack = 0
 11579                           ;set_led@i stored from wreg
 11580  0049B0  6E55               	movwf	set_led@i,c
 11581                           
 11582                           ;newmain.c: 1202: int matrix = i >> 4;
 11583  0049B2  C055  F049         	movff	set_led@i,??_set_led
 11584  0049B6  3A49               	swapf	??_set_led,f,c
 11585  0049B8  0E0F               	movlw	15
 11586  0049BA  1649               	andwf	??_set_led,f,c
 11587  0049BC  5049               	movf	??_set_led,w,c
 11588  0049BE  6E51               	movwf	set_led@matrix,c
 11589  0049C0  6A52               	clrf	set_led@matrix+1,c
 11590                           
 11591                           ;newmain.c: 1203: int led = i & 0b1111;
 11592  0049C2  C055  F049         	movff	set_led@i,??_set_led
 11593  0049C6  0E0F               	movlw	15
 11594  0049C8  1649               	andwf	??_set_led,f,c
 11595  0049CA  5049               	movf	??_set_led,w,c
 11596  0049CC  6E53               	movwf	set_led@led,c
 11597  0049CE  6A54               	clrf	set_led@led+1,c
 11598                           
 11599                           ;newmain.c: 1204: matrices[matrix].display_buffer[ledLUT[led] >> 4] |= (1 << (ledLUT[led
      +                          ]&0x0f));
 11600  0049D0  0EEF               	movlw	low _ledLUT
 11601  0049D2  2453               	addwf	set_led@led,w,c
 11602  0049D4  6EF6               	movwf	tblptrl,c
 11603  0049D6  0E7F               	movlw	high _ledLUT
 11604  0049D8  2054               	addwfc	set_led@led+1,w,c
 11605  0049DA  6EF7               	movwf	tblptrh,c
 11606  0049DC                     	if	0	;There are less than 3 active tblptr bytes
 11607  0049DC                     	endif
 11608  0049DC  0008               	tblrd		*
 11609  0049DE  CFF5 F049          	movff	tablat,??_set_led
 11610  0049E2  0E0F               	movlw	15
 11611  0049E4  1649               	andwf	??_set_led,f,c
 11612  0049E6  0E01               	movlw	1
 11613  0049E8  6E4A               	movwf	(??_set_led+1)& (0+255),c
 11614  0049EA  0E00               	movlw	0
 11615  0049EC  6E4B               	movwf	(??_set_led+2)& (0+255),c
 11616  0049EE  2A49               	incf	??_set_led,f,c
 11617  0049F0  D003               	goto	u3644
 11618  0049F2                     u3645:
 11619  0049F2  90D8               	bcf	status,0,c
 11620  0049F4  364A               	rlcf	??_set_led+1,f,c
 11621  0049F6  364B               	rlcf	??_set_led+2,f,c
 11622  0049F8                     u3644:
 11623  0049F8  2E49               	decfsz	??_set_led,f,c
 11624  0049FA  D7FB               	goto	u3645
 11625  0049FC  C051  F043         	movff	set_led@matrix,___wmul@multiplier
 11626  004A00  C052  F044         	movff	set_led@matrix+1,___wmul@multiplier+1
 11627  004A04  0E00               	movlw	0
 11628  004A06  6E46               	movwf	___wmul@multiplicand+1,c
 11629  004A08  0E1D               	movlw	29
 11630  004A0A  6E45               	movwf	___wmul@multiplicand,c
 11631  004A0C  EC71  F023         	call	___wmul	;wreg free
 11632  004A10  0EEF               	movlw	low _ledLUT
 11633  004A12  2453               	addwf	set_led@led,w,c
 11634  004A14  6EF6               	movwf	tblptrl,c
 11635  004A16  0E7F               	movlw	high _ledLUT
 11636  004A18  2054               	addwfc	set_led@led+1,w,c
 11637  004A1A  6EF7               	movwf	tblptrh,c
 11638  004A1C                     	if	0	;There are less than 3 active tblptr bytes
 11639  004A1C                     	endif
 11640  004A1C  0008               	tblrd		*
 11641  004A1E  CFF5 F04C          	movff	tablat,??_set_led+3
 11642  004A22  384C               	swapf	??_set_led+3,w,c
 11643  004A24  0B0F               	andlw	15
 11644  004A26  6E4D               	movwf	(??_set_led+4)& (0+255),c
 11645  004A28  6A4E               	clrf	(??_set_led+5)& (0+255),c
 11646  004A2A  90D8               	bcf	status,0,c
 11647  004A2C  364D               	rlcf	??_set_led+4,f,c
 11648  004A2E  364E               	rlcf	??_set_led+5,f,c
 11649  004A30  0E0D               	movlw	13
 11650  004A32  264D               	addwf	??_set_led+4,f,c
 11651  004A34  0E00               	movlw	0
 11652  004A36  224E               	addwfc	??_set_led+5,f,c
 11653  004A38  0E80               	movlw	low _matrices
 11654  004A3A  6E4F               	movwf	(??_set_led+6)& (0+255),c
 11655  004A3C  0E00               	movlw	high _matrices
 11656  004A3E  6E50               	movwf	(??_set_led+7)& (0+255),c
 11657  004A40  504D               	movf	??_set_led+4,w,c
 11658  004A42  264F               	addwf	??_set_led+6,f,c
 11659  004A44  504E               	movf	??_set_led+5,w,c
 11660  004A46  2250               	addwfc	??_set_led+7,f,c
 11661  004A48  5043               	movf	?___wmul,w,c
 11662  004A4A  244F               	addwf	??_set_led+6,w,c
 11663  004A4C  6ED9               	movwf	fsr2l,c
 11664  004A4E  5044               	movf	?___wmul+1,w,c
 11665  004A50  2050               	addwfc	??_set_led+7,w,c
 11666  004A52  6EDA               	movwf	fsr2h,c
 11667  004A54  504A               	movf	??_set_led+1,w,c
 11668  004A56  12DE               	iorwf	postinc2,f,c
 11669  004A58  504B               	movf	??_set_led+2,w,c
 11670  004A5A  12DD               	iorwf	postdec2,f,c
 11671  004A5C  0012               	return		;funcret
 11672  004A5E                     __end_of_set_led:
 11673                           	opt stack 0
 11674                           tblptru	equ	0xFF8
 11675                           tblptrh	equ	0xFF7
 11676                           tblptrl	equ	0xFF6
 11677                           tablat	equ	0xFF5
 11678                           prodh	equ	0xFF4
 11679                           prodl	equ	0xFF3
 11680                           postinc0	equ	0xFEE
 11681                           wreg	equ	0xFE8
 11682                           postinc1	equ	0xFE6
 11683                           fsr1h	equ	0xFE2
 11684                           fsr1l	equ	0xFE1
 11685                           indf2	equ	0xFDF
 11686                           postinc2	equ	0xFDE
 11687                           postdec2	equ	0xFDD
 11688                           fsr2h	equ	0xFDA
 11689                           fsr2l	equ	0xFD9
 11690                           status	equ	0xFD8
 11691                           
 11692 ;; *************** function _clr_led *****************
 11693 ;; Defined at:
 11694 ;;		line 1195 in file "newmain.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;  i               1    wreg     unsigned char 
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;  i               1   20[COMRAM] unsigned char 
 11699 ;;  led             2   18[COMRAM] int 
 11700 ;;  matrix          2   16[COMRAM] int 
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1    wreg      void 
 11703 ;; Registers used:
 11704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11710 ;;      Params:         0       0       0       0       0       0       0
 11711 ;;      Locals:         5       0       0       0       0       0       0
 11712 ;;      Temps:         10       0       0       0       0       0       0
 11713 ;;      Totals:        15       0       0       0       0       0       0
 11714 ;;Total ram usage:       15 bytes
 11715 ;; Hardware stack levels used:    1
 11716 ;; Hardware stack levels required when called:    1
 11717 ;; This function calls:
 11718 ;;		___wmul
 11719 ;; This function is called by:
 11720 ;;		_main
 11721 ;;		_animation0
 11722 ;;		_animation1
 11723 ;;		_animation2
 11724 ;;		_animation3
 11725 ;;		_animation4
 11726 ;;		_animation5
 11727 ;;		_animation6
 11728 ;;		_animation7
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           	psect	text24
 11733  004A5E                     __ptext24:
 11734                           	opt stack 0
 11735  004A5E                     _clr_led:
 11736                           	opt stack 29
 11737                           
 11738                           ;incstack = 0
 11739                           ;clr_led@i stored from wreg
 11740  004A5E  6E57               	movwf	clr_led@i,c
 11741                           
 11742                           ;newmain.c: 1196: int matrix = i >> 4;
 11743  004A60  C057  F049         	movff	clr_led@i,??_clr_led
 11744  004A64  3A49               	swapf	??_clr_led,f,c
 11745  004A66  0E0F               	movlw	15
 11746  004A68  1649               	andwf	??_clr_led,f,c
 11747  004A6A  5049               	movf	??_clr_led,w,c
 11748  004A6C  6E53               	movwf	clr_led@matrix,c
 11749  004A6E  6A54               	clrf	clr_led@matrix+1,c
 11750                           
 11751                           ;newmain.c: 1197: int led = i & 0b1111;
 11752  004A70  C057  F049         	movff	clr_led@i,??_clr_led
 11753  004A74  0E0F               	movlw	15
 11754  004A76  1649               	andwf	??_clr_led,f,c
 11755  004A78  5049               	movf	??_clr_led,w,c
 11756  004A7A  6E55               	movwf	clr_led@led,c
 11757  004A7C  6A56               	clrf	clr_led@led+1,c
 11758                           
 11759                           ;newmain.c: 1198: matrices[matrix].display_buffer[ledLUT[led] >> 4] &= ~(1 << (ledLUT[le
      +                          d]&0x0f));
 11760  004A7E  0EEF               	movlw	low _ledLUT
 11761  004A80  2455               	addwf	clr_led@led,w,c
 11762  004A82  6EF6               	movwf	tblptrl,c
 11763  004A84  0E7F               	movlw	high _ledLUT
 11764  004A86  2056               	addwfc	clr_led@led+1,w,c
 11765  004A88  6EF7               	movwf	tblptrh,c
 11766  004A8A                     	if	0	;There are less than 3 active tblptr bytes
 11767  004A8A                     	endif
 11768  004A8A  0008               	tblrd		*
 11769  004A8C  CFF5 F049          	movff	tablat,??_clr_led
 11770  004A90  0E0F               	movlw	15
 11771  004A92  1649               	andwf	??_clr_led,f,c
 11772  004A94  0E01               	movlw	1
 11773  004A96  6E4A               	movwf	(??_clr_led+1)& (0+255),c
 11774  004A98  0E00               	movlw	0
 11775  004A9A  6E4B               	movwf	(??_clr_led+2)& (0+255),c
 11776  004A9C  2A49               	incf	??_clr_led,f,c
 11777  004A9E  D003               	goto	u3694
 11778  004AA0                     u3695:
 11779  004AA0  90D8               	bcf	status,0,c
 11780  004AA2  364A               	rlcf	??_clr_led+1,f,c
 11781  004AA4  364B               	rlcf	??_clr_led+2,f,c
 11782  004AA6                     u3694:
 11783  004AA6  2E49               	decfsz	??_clr_led,f,c
 11784  004AA8  D7FB               	goto	u3695
 11785  004AAA  1C4A               	comf	??_clr_led+1,w,c
 11786  004AAC  6E4C               	movwf	(??_clr_led+3)& (0+255),c
 11787  004AAE  1C4B               	comf	??_clr_led+2,w,c
 11788  004AB0  6E4D               	movwf	(??_clr_led+4)& (0+255),c
 11789  004AB2  C053  F043         	movff	clr_led@matrix,___wmul@multiplier
 11790  004AB6  C054  F044         	movff	clr_led@matrix+1,___wmul@multiplier+1
 11791  004ABA  0E00               	movlw	0
 11792  004ABC  6E46               	movwf	___wmul@multiplicand+1,c
 11793  004ABE  0E1D               	movlw	29
 11794  004AC0  6E45               	movwf	___wmul@multiplicand,c
 11795  004AC2  EC71  F023         	call	___wmul	;wreg free
 11796  004AC6  0EEF               	movlw	low _ledLUT
 11797  004AC8  2455               	addwf	clr_led@led,w,c
 11798  004ACA  6EF6               	movwf	tblptrl,c
 11799  004ACC  0E7F               	movlw	high _ledLUT
 11800  004ACE  2056               	addwfc	clr_led@led+1,w,c
 11801  004AD0  6EF7               	movwf	tblptrh,c
 11802  004AD2                     	if	0	;There are less than 3 active tblptr bytes
 11803  004AD2                     	endif
 11804  004AD2  0008               	tblrd		*
 11805  004AD4  CFF5 F04E          	movff	tablat,??_clr_led+5
 11806  004AD8  384E               	swapf	??_clr_led+5,w,c
 11807  004ADA  0B0F               	andlw	15
 11808  004ADC  6E4F               	movwf	(??_clr_led+6)& (0+255),c
 11809  004ADE  6A50               	clrf	(??_clr_led+7)& (0+255),c
 11810  004AE0  90D8               	bcf	status,0,c
 11811  004AE2  364F               	rlcf	??_clr_led+6,f,c
 11812  004AE4  3650               	rlcf	??_clr_led+7,f,c
 11813  004AE6  0E0D               	movlw	13
 11814  004AE8  264F               	addwf	??_clr_led+6,f,c
 11815  004AEA  0E00               	movlw	0
 11816  004AEC  2250               	addwfc	??_clr_led+7,f,c
 11817  004AEE  0E80               	movlw	low _matrices
 11818  004AF0  6E51               	movwf	(??_clr_led+8)& (0+255),c
 11819  004AF2  0E00               	movlw	high _matrices
 11820  004AF4  6E52               	movwf	(??_clr_led+9)& (0+255),c
 11821  004AF6  504F               	movf	??_clr_led+6,w,c
 11822  004AF8  2651               	addwf	??_clr_led+8,f,c
 11823  004AFA  5050               	movf	??_clr_led+7,w,c
 11824  004AFC  2252               	addwfc	??_clr_led+9,f,c
 11825  004AFE  5043               	movf	?___wmul,w,c
 11826  004B00  2451               	addwf	??_clr_led+8,w,c
 11827  004B02  6ED9               	movwf	fsr2l,c
 11828  004B04  5044               	movf	?___wmul+1,w,c
 11829  004B06  2052               	addwfc	??_clr_led+9,w,c
 11830  004B08  6EDA               	movwf	fsr2h,c
 11831  004B0A  504C               	movf	??_clr_led+3,w,c
 11832  004B0C  16DE               	andwf	postinc2,f,c
 11833  004B0E  504D               	movf	??_clr_led+4,w,c
 11834  004B10  16DD               	andwf	postdec2,f,c
 11835  004B12  0012               	return		;funcret
 11836  004B14                     __end_of_clr_led:
 11837                           	opt stack 0
 11838                           tblptru	equ	0xFF8
 11839                           tblptrh	equ	0xFF7
 11840                           tblptrl	equ	0xFF6
 11841                           tablat	equ	0xFF5
 11842                           prodh	equ	0xFF4
 11843                           prodl	equ	0xFF3
 11844                           postinc0	equ	0xFEE
 11845                           wreg	equ	0xFE8
 11846                           postinc1	equ	0xFE6
 11847                           fsr1h	equ	0xFE2
 11848                           fsr1l	equ	0xFE1
 11849                           indf2	equ	0xFDF
 11850                           postinc2	equ	0xFDE
 11851                           postdec2	equ	0xFDD
 11852                           fsr2h	equ	0xFDA
 11853                           fsr2l	equ	0xFD9
 11854                           status	equ	0xFD8
 11855                           
 11856 ;; *************** function ___wmul *****************
 11857 ;; Defined at:
 11858 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  multiplier      2    0[COMRAM] unsigned int 
 11861 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;  product         2    4[COMRAM] unsigned int 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  2    0[COMRAM] unsigned int 
 11866 ;; Registers used:
 11867 ;;		wreg, status,2, status,0, prodl, prodh
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11873 ;;      Params:         4       0       0       0       0       0       0
 11874 ;;      Locals:         2       0       0       0       0       0       0
 11875 ;;      Temps:          0       0       0       0       0       0       0
 11876 ;;      Totals:         6       0       0       0       0       0       0
 11877 ;;Total ram usage:        6 bytes
 11878 ;; Hardware stack levels used:    1
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		_main
 11883 ;;		_animation2
 11884 ;;		_animation3
 11885 ;;		_animation7
 11886 ;;		_write_display
 11887 ;;		_clr_led
 11888 ;;		_set_led
 11889 ;;		_is_key_pressed
 11890 ;;		_was_key_pressed
 11891 ;;		_read_switch
 11892 ;;		_is_led
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           	psect	text25
 11897  0046E2                     __ptext25:
 11898                           	opt stack 0
 11899  0046E2                     ___wmul:
 11900                           	opt stack 29
 11901                           
 11902                           ;incstack = 0
 11903  0046E2  5043               	movf	___wmul@multiplier,w,c
 11904  0046E4  0245               	mulwf	___wmul@multiplicand,c
 11905  0046E6  CFF3 F047          	movff	prodl,___wmul@product
 11906  0046EA  CFF4 F048          	movff	prodh,___wmul@product+1
 11907  0046EE  5043               	movf	___wmul@multiplier,w,c
 11908  0046F0  0246               	mulwf	___wmul@multiplicand+1,c
 11909  0046F2  50F3               	movf	prodl,w,c
 11910  0046F4  2648               	addwf	___wmul@product+1,f,c
 11911  0046F6  5044               	movf	___wmul@multiplier+1,w,c
 11912  0046F8  0245               	mulwf	___wmul@multiplicand,c
 11913  0046FA  50F3               	movf	prodl,w,c
 11914  0046FC  2648               	addwf	___wmul@product+1,f,c
 11915  0046FE  C047  F043         	movff	___wmul@product,?___wmul
 11916  004702  C048  F044         	movff	___wmul@product+1,?___wmul+1
 11917  004706  0012               	return	
 11918  004708                     __end_of___wmul:
 11919                           	opt stack 0
 11920                           tblptru	equ	0xFF8
 11921                           tblptrh	equ	0xFF7
 11922                           tblptrl	equ	0xFF6
 11923                           tablat	equ	0xFF5
 11924                           prodh	equ	0xFF4
 11925                           prodl	equ	0xFF3
 11926                           postinc0	equ	0xFEE
 11927                           wreg	equ	0xFE8
 11928                           postinc1	equ	0xFE6
 11929                           fsr1h	equ	0xFE2
 11930                           fsr1l	equ	0xFE1
 11931                           indf2	equ	0xFDF
 11932                           postinc2	equ	0xFDE
 11933                           postdec2	equ	0xFDD
 11934                           fsr2h	equ	0xFDA
 11935                           fsr2l	equ	0xFD9
 11936                           status	equ	0xFD8
 11937                           
 11938 ;; *************** function _Myusartinit *****************
 11939 ;; Defined at:
 11940 ;;		line 605 in file "newmain.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      void 
 11947 ;; Registers used:
 11948 ;;		wreg, status,2
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11954 ;;      Params:         0       0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		_main
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           	psect	text26
 11968  004672                     __ptext26:
 11969                           	opt stack 0
 11970  004672                     _Myusartinit:
 11971                           	opt stack 30
 11972                           
 11973                           ;newmain.c: 607: TRISCbits.TRISC6 = 1;
 11974                           
 11975                           ;incstack = 0
 11976  004672  8C94               	bsf	3988,6,c	;volatile
 11977                           
 11978                           ;newmain.c: 608: TRISCbits.TRISC7 = 1;
 11979  004674  8E94               	bsf	3988,7,c	;volatile
 11980                           
 11981                           ;newmain.c: 610: BAUDCONbits.BRG16 = 0;
 11982  004676  96B8               	bcf	4024,3,c	;volatile
 11983                           
 11984                           ;newmain.c: 611: TXSTAbits.BRGH = 1;
 11985  004678  84AC               	bsf	4012,2,c	;volatile
 11986                           
 11987                           ;newmain.c: 612: SPBRG = 25;
 11988  00467A  0E19               	movlw	25
 11989  00467C  6EAF               	movwf	4015,c	;volatile
 11990                           
 11991                           ;newmain.c: 615: TXSTAbits.SYNC = 0;
 11992  00467E  98AC               	bcf	4012,4,c	;volatile
 11993                           
 11994                           ;newmain.c: 616: RCSTAbits.SPEN = 1;
 11995  004680  8EAB               	bsf	4011,7,c	;volatile
 11996                           
 11997                           ;newmain.c: 619: TXSTAbits.TXEN = 1;
 11998  004682  8AAC               	bsf	4012,5,c	;volatile
 11999  004684  0012               	return	
 12000  004686                     __end_of_Myusartinit:
 12001                           	opt stack 0
 12002                           tblptru	equ	0xFF8
 12003                           tblptrh	equ	0xFF7
 12004                           tblptrl	equ	0xFF6
 12005                           tablat	equ	0xFF5
 12006                           prodh	equ	0xFF4
 12007                           prodl	equ	0xFF3
 12008                           postinc0	equ	0xFEE
 12009                           wreg	equ	0xFE8
 12010                           postinc1	equ	0xFE6
 12011                           fsr1h	equ	0xFE2
 12012                           fsr1l	equ	0xFE1
 12013                           indf2	equ	0xFDF
 12014                           postinc2	equ	0xFDE
 12015                           postdec2	equ	0xFDD
 12016                           fsr2h	equ	0xFDA
 12017                           fsr2l	equ	0xFD9
 12018                           status	equ	0xFD8
 12019                           
 12020 ;; *************** function _MyOpenI2C *****************
 12021 ;; Defined at:
 12022 ;;		line 1315 in file "newmain.c"
 12023 ;; Parameters:    Size  Location     Type
 12024 ;;  sync_mode       1    wreg     unsigned char 
 12025 ;;  slew            1    0[COMRAM] unsigned char 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  sync_mode       1    1[COMRAM] unsigned char 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      void 
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12037 ;;      Params:         1       0       0       0       0       0       0
 12038 ;;      Locals:         1       0       0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0
 12040 ;;      Totals:         2       0       0       0       0       0       0
 12041 ;;Total ram usage:        2 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; This function calls:
 12044 ;;		Nothing
 12045 ;; This function is called by:
 12046 ;;		_main
 12047 ;; This function uses a non-reentrant model
 12048 ;;
 12049                           
 12050                           	psect	text27
 12051  0046A2                     __ptext27:
 12052                           	opt stack 0
 12053  0046A2                     _MyOpenI2C:
 12054                           	opt stack 30
 12055                           
 12056                           ;incstack = 0
 12057                           ;MyOpenI2C@sync_mode stored from wreg
 12058  0046A2  6E44               	movwf	MyOpenI2C@sync_mode,c
 12059                           
 12060                           ;newmain.c: 1316: SSPSTAT &= 0x3F;
 12061  0046A4  0E3F               	movlw	63
 12062  0046A6  16C7               	andwf	4039,f,c	;volatile
 12063                           
 12064                           ;newmain.c: 1317: SSPCON1 = 0x00;
 12065  0046A8  0E00               	movlw	0
 12066  0046AA  6EC6               	movwf	4038,c	;volatile
 12067                           
 12068                           ;newmain.c: 1318: SSPCON2 = 0x00;
 12069  0046AC  0E00               	movlw	0
 12070  0046AE  6EC5               	movwf	4037,c	;volatile
 12071                           
 12072                           ;newmain.c: 1319: SSPCON1 |= sync_mode;
 12073  0046B0  5044               	movf	MyOpenI2C@sync_mode,w,c
 12074  0046B2  12C6               	iorwf	4038,f,c	;volatile
 12075                           
 12076                           ;newmain.c: 1320: SSPSTAT |= slew;
 12077  0046B4  5043               	movf	MyOpenI2C@slew,w,c
 12078  0046B6  12C7               	iorwf	4039,f,c	;volatile
 12079                           
 12080                           ;newmain.c: 1322: TRISCbits.TRISC3 = 1;
 12081  0046B8  8694               	bsf	3988,3,c	;volatile
 12082                           
 12083                           ;newmain.c: 1323: TRISCbits.TRISC4 = 1;
 12084  0046BA  8894               	bsf	3988,4,c	;volatile
 12085                           
 12086                           ;newmain.c: 1325: SSPCON1 |= 0b00100000;
 12087  0046BC  8AC6               	bsf	4038,5,c	;volatile
 12088  0046BE  0012               	return		;funcret
 12089  0046C0                     __end_of_MyOpenI2C:
 12090                           	opt stack 0
 12091                           tblptru	equ	0xFF8
 12092                           tblptrh	equ	0xFF7
 12093                           tblptrl	equ	0xFF6
 12094                           tablat	equ	0xFF5
 12095                           prodh	equ	0xFF4
 12096                           prodl	equ	0xFF3
 12097                           postinc0	equ	0xFEE
 12098                           wreg	equ	0xFE8
 12099                           postinc1	equ	0xFE6
 12100                           fsr1h	equ	0xFE2
 12101                           fsr1l	equ	0xFE1
 12102                           indf2	equ	0xFDF
 12103                           postinc2	equ	0xFDE
 12104                           postdec2	equ	0xFDD
 12105                           fsr2h	equ	0xFDA
 12106                           fsr2l	equ	0xFD9
 12107                           status	equ	0xFD8
 12108                           
 12109 ;; *************** function _MyCloseI2C *****************
 12110 ;; Defined at:
 12111 ;;		line 1266 in file "newmain.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;		None
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;                  1    wreg      void 
 12118 ;; Registers used:
 12119 ;;		status,2, status,0
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12125 ;;      Params:         0       0       0       0       0       0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0
 12127 ;;      Temps:          0       0       0       0       0       0       0
 12128 ;;      Totals:         0       0       0       0       0       0       0
 12129 ;;Total ram usage:        0 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; This function calls:
 12132 ;;		Nothing
 12133 ;; This function is called by:
 12134 ;;		_main
 12135 ;; This function uses a non-reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text28
 12139  00464E                     __ptext28:
 12140                           	opt stack 0
 12141  00464E                     _MyCloseI2C:
 12142                           	opt stack 30
 12143                           
 12144                           ;newmain.c: 1267: SSPCON1 &= 0xDF;
 12145                           
 12146                           ;incstack = 0
 12147  00464E  9AC6               	bcf	4038,5,c	;volatile
 12148  004650  0012               	return		;funcret
 12149  004652                     __end_of_MyCloseI2C:
 12150                           	opt stack 0
 12151                           tblptru	equ	0xFF8
 12152                           tblptrh	equ	0xFF7
 12153                           tblptrl	equ	0xFF6
 12154                           tablat	equ	0xFF5
 12155                           prodh	equ	0xFF4
 12156                           prodl	equ	0xFF3
 12157                           postinc0	equ	0xFEE
 12158                           wreg	equ	0xFE8
 12159                           postinc1	equ	0xFE6
 12160                           fsr1h	equ	0xFE2
 12161                           fsr1l	equ	0xFE1
 12162                           indf2	equ	0xFDF
 12163                           postinc2	equ	0xFDE
 12164                           postdec2	equ	0xFDD
 12165                           fsr2h	equ	0xFDA
 12166                           fsr2l	equ	0xFD9
 12167                           status	equ	0xFD8
 12168                           tblptru	equ	0xFF8
 12169                           tblptrh	equ	0xFF7
 12170                           tblptrl	equ	0xFF6
 12171                           tablat	equ	0xFF5
 12172                           prodh	equ	0xFF4
 12173                           prodl	equ	0xFF3
 12174                           postinc0	equ	0xFEE
 12175                           wreg	equ	0xFE8
 12176                           postinc1	equ	0xFE6
 12177                           fsr1h	equ	0xFE2
 12178                           fsr1l	equ	0xFE1
 12179                           indf2	equ	0xFDF
 12180                           postinc2	equ	0xFDE
 12181                           postdec2	equ	0xFDD
 12182                           fsr2h	equ	0xFDA
 12183                           fsr2l	equ	0xFD9
 12184                           status	equ	0xFD8
 12185                           
 12186                           	psect	rparam
 12187  0000                     tblptru	equ	0xFF8
 12188                           tblptrh	equ	0xFF7
 12189                           tblptrl	equ	0xFF6
 12190                           tablat	equ	0xFF5
 12191                           prodh	equ	0xFF4
 12192                           prodl	equ	0xFF3
 12193                           postinc0	equ	0xFEE
 12194                           wreg	equ	0xFE8
 12195                           postinc1	equ	0xFE6
 12196                           fsr1h	equ	0xFE2
 12197                           fsr1l	equ	0xFE1
 12198                           indf2	equ	0xFDF
 12199                           postinc2	equ	0xFDE
 12200                           postdec2	equ	0xFDD
 12201                           fsr2h	equ	0xFDA
 12202                           fsr2l	equ	0xFD9
 12203                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1618
    Data        2
    BSS         310
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57     125
    BANK0           128      0     116
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    memcpy@s1	PTR const void  size(2) Largest target is 116
		 -> matrices.keys(BANK0[6]), matrices(BANK0[116]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 116
		 -> matrices.keys(BANK0[6]), matrices(BANK0[116]), 

    MygetsI2C@rdptr	PTR unsigned char  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    sp__memcpy	PTR void  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 


Critical Paths under _main in COMRAM

    _main->_animation2
    _was_key_pressed->___wmul
    _read_switch->_memcpy
    _memcpy->___wmul
    _MygetsI2C->___wmul
    _is_key_pressed->___wmul
    _animation7->_clr_led
    _animation6->_clr_led
    _animation5->_clr_led
    _animation4->_clr_led
    _animation3->_clr_led
    _animation2->_clr_led
    _animation1->_clr_led
    _animation0->_clr_led
    _write_display->___wmul
    _write_display->_write
    _write->_MyWriteI2C
    _MyWriteI2C->_MyIdleI2C
    _set_led->___wmul
    _clr_led->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  335922
                                             38 COMRAM    19    19      0
                         _MyCloseI2C
                          _MyIdleI2C
                          _MyOpenI2C
                         _MyStartI2C
                          _MyStopI2C
                        _Myusartinit
                             ___wmul
                         _animation0
                         _animation1
                         _animation2
                         _animation3
                         _animation4
                         _animation5
                         _animation6
                         _animation7
                            _clr_led
                     _is_key_pressed
                        _read_switch
                          _send_note
                            _set_led
                    _was_key_pressed
                              _write
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _was_key_pressed                                     13    13      0    9391
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _send_note                                            3     1      2     978
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _read_switch                                         14    14      0   10250
                                             17 COMRAM    14    14      0
                          _MyIdleI2C
                        _MyNotAckI2C
                         _MyStartI2C
                          _MyStopI2C
                          _MygetsI2C
                             ___wmul
                             _memcpy
                              _write
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     371
                                              6 COMRAM    11     5      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _MygetsI2C                                            3     0      3     219
                                              6 COMRAM     3     0      3
                          _MyReadI2C
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MyReadI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyNotAckI2C                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _is_key_pressed                                      13    13      0    9391
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _animation7                                           7     7      0   38929
                                             21 COMRAM     7     7      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation6                                          15    14      1   29100
                                             21 COMRAM    15    14      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation5                                           8     6      2   29761
                                             21 COMRAM     8     6      2
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation4                                           6     5      1   29820
                                             21 COMRAM     6     5      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation3                                           9     9      0   39293
                                             21 COMRAM     9     9      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation2                                          17    15      2   39785
                                             21 COMRAM    17    15      2
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation1                                           8     7      1   28925
                                             21 COMRAM     8     7      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation0                                           8     7      1   29438
                                             21 COMRAM     8     7      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _write_display                                       10    10      0    9572
                                              6 COMRAM    10    10      0
                          _MyIdleI2C
                         _MyStartI2C
                          _MyStopI2C
                             ___wmul
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     4      0      91
                                              2 COMRAM     4     4      0
                         _MyWriteI2C
 ---------------------------------------------------------------------------------
 (3) _MyWriteI2C                                           1     1      0      22
                                              1 COMRAM     1     1      0
                          _MyIdleI2C
 ---------------------------------------------------------------------------------
 (4) _MyIdleI2C                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MyStopI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyStartI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_led                                             13    13      0    9391
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _clr_led                                             15    15      0    9391
                                              6 COMRAM    15    15      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    9279
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Myusartinit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MyOpenI2C                                            2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _MyCloseI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyCloseI2C
   _MyIdleI2C
   _MyOpenI2C
   _MyStartI2C
   _MyStopI2C
   _Myusartinit
   ___wmul
   _animation0
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation1
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation2
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation3
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation4
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation5
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation6
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation7
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _clr_led
     ___wmul
   _is_key_pressed
     ___wmul
   _read_switch
     _MyIdleI2C
     _MyNotAckI2C
     _MyStartI2C
     _MyStopI2C
     _MygetsI2C
       _MyReadI2C
       ___wmul (ARG)
     ___wmul
     _memcpy
       ___wmul (ARG)
     _write
       _MyWriteI2C
         _MyIdleI2C
   _send_note
   _set_led
     ___wmul
   _was_key_pressed
     ___wmul
   _write
     _MyWriteI2C
       _MyIdleI2C
   _write_display
     _MyIdleI2C
     _MyStartI2C
     _MyStopI2C
     ___wmul
     _write
       _MyWriteI2C
         _MyIdleI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      74       5       90.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     39      7D       1       98.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     171      15        0.0%
DATA                 0      0     171       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jan 08 18:02:56 2018

    is_key_pressed@matrix 0051               _SSPSTATbits 000FC7       ___wmul@multiplicand 0045  
             __CFG_BORV$3 000000              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000                       l200 7768  
                     l210 7856                       l202 7794                       l300 651C  
                     l220 78F8                       l204 786A                       l301 63AE  
                     l213 788C                       l205 77BC                       l222 7944  
                     l303 63C6                       l215 78B8                       l207 77D4  
                     l151 72D4                       l143 7174                       l312 6698  
                     l224 7972                       l225 797E                       l217 795C  
                     l161 73AE                       l153 72EA                       l145 7232  
                     l410 5A74                       l218 78E0                       l251 5620  
                     l331 678A                       l315 654A                       l307 647C  
                     l403 7080                       l411 5974                       l243 46CC  
                     l155 79A6                       l227 799C                       l171 7448  
                     l147 724A                       l260 56D8                       l252 5590  
                     l324 682A                       l500 5046                       l180 75AC  
                     l172 7478                       l156 73C2                       l325 66BC  
                     l413 5980                       l229 79AA                       l181 75E8  
                     l165 73EC                       l157 738E                       l149 72C4  
                     l270 5834                       l350 6B4C                       l422 5B86  
                     l502 5090                       l246 46D6                       l182 75D8  
                     l174 74D8                       l263 580C                       l255 56C4  
                     l343 6910                       l327 66D4                       l319 6600  
                     l351 69DC                       l407 7112                       l423 5A86  
                     l503 50E6                       l511 5FBE                       l191 7674  
                     l175 7520                       l167 7404                       l264 577C  
                     l256 5634                       l504 5116                       l520 5F2A  
                     l184 7742                       l176 753E                       l353 69F4  
                     l441 5C2C                       l425 5A92                       l417 5A06  
                     l505 5152                       l193 76AC                       l185 760E  
                     l169 7430                       l602 4844                       l274 58BC  
                     l282 4C62                       l362 6CC6                       l434 5C9A  
                     l514 5E68                       l194 76CA                       l178 7556  
                     l259 5768                       l339 685A                       l363 6B6E  
                     l435 5B9A                       l187 7628                       l604 4832  
                     l620 472C                       l268 5828                       l284 4C6E  
                     l540 616C                       l532 60A4                       l516 5E80  
                     l196 76E2                       l381 6DAC                       l365 6B86  
                     l357 6AAC                       l453 5D40                       l437 5BA6  
                     l429 5B18                       l525 6140                       l189 765A  
                     l606 4840                       l374 6E40                       l462 5330  
                     l526 5FE2                       l198 772A                       l615 4868  
                     l551 4B30                       l279 594C                       l295 62F4  
                     l375 6CEA                       l447 5CAE                       l471 53F0  
                     l463 5284                       l631 47D4                       l288 4D18  
                     l480 54B2                       l472 5342                       l544 6216  
                     l528 5FFA                       l640 47FE                       l553 4B88  
                     l297 630C                       l393 6F16                       l377 6D02  
                     l369 6C32                       l449 5CBA                       l481 5404  
                     l465 532C                       l633 47E0                       l490 54C6  
                     l474 53EC                       l466 52AA                       l619 470E  
                     l555 4C46                       l299 6380                       l483 54AE  
                     l475 5368                       l492 5570                       l484 542A  
                     l468 5308                       l580 4F7A                       l397 6FBE  
                     l389 6E6C                       l493 54EC                       l477 53C8  
                     l629 47C2                       l573 4DC8                       l486 548A  
                     l399 6FD6                       l495 554C                       l648 469A  
                     l576 4EA0                       l578 4EF6                       l599 481C  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000                       prod 000FF3  
                     wreg 000FE8              __CFG_IESO$ON 000000              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      l1082 4768                      l1083 4748  
                    l4010 6D9C                      l4100 7070                      l4004 6D82  
                    l4022 6E2C                      l4112 7100                      l4032 6E50  
                    l3320 4748                      l4050 6EEC                      l3308 4C34  
                    l4220 5B92                      l3420 4EE6                      l5004 77C4  
                    l3254 472C                      l4038 6E5C                      l4134 5978  
                    l5022 7862                      l4056 6F06                      l4152 59FE  
                    l4128 596C                      l4082 6FC6                      l4226 5B9E  
                    l4402 5422                      l3434 4F80                      l5018 785C  
                    l4068 6F96                      l4244 5C24                      l4180 5A8A  
                    l4500 5152                      l5052 78E8                      l3542 5774  
                    l3518 56D0                      l3470 5588                      l3702 63B6  
                    l4094 7056                      l4174 5A7E                      l4326 52A2  
                    l4318 527C                      l3438 4F8E                      l3454 46C2  
                    l5046 78D0                      l3624 4C66                      l3800 66C4  
                    l4272 5CB2                      l4440 54E4                      l4432 54BE  
                    l5064 794A                      l3298 4B78                      l3618 4C5A  
                    l3722 646C                      l4290 5D38                      l4266 5CA6  
                    l3644 4D10                      l3820 677A                      l3716 6452  
                    l3900 69E4                      l4364 5360                      l4356 533A  
                    l5068 7950                      l3574 582C                      l3494 562C  
                    l3814 6760                      l3750 653A                      l3670 62E4  
                    l4198 5B10                      l4614 5FEA                      l5078 7976  
                    l3568 5820                      l3736 6508                      l3912 6A80  
                    l4480 503E                      l4632 6094                      l4720 7164  
                    l3594 58B4                      l3834 6816                      l3770 65F0  
                    l3930 6B38                      l4394 53FC                      l4626 607A  
                    l4650 6136                      l4802 72E2                      l3764 65D6  
                    l3676 62FC                      l3692 638C                      l4492 50E6  
                    l4644 6124                      l4580 5F00                      l3862 68E6  
                    l3918 6A9C                      l4662 615C                      l4910 75FE  
                    l4902 75E4                      l3848 684A                      l3784 668C  
                    l3688 6386                      l4680 6206                      l4656 6150  
                    l4568 5E70                      l4760 7222                      l3882 699C  
                    l3946 6B76                      l4674 61EC                      l4586 5F1A  
                    l4850 7468                      l3868 6900                      l3964 6C22  
                    l4692 6296                      l4780 7298                      l3958 6C06  
                    l4598 5FAA                      l4950 76BA                      l4766 723A  
                    l4758 7202                      l3992 6CF2                      l3976 6CB2  
                    l4872 7546                      l4864 7526                      l4776 7292  
                    l4970 7730                      l4866 752E                      l4786 72B4  
                    l4956 76D2                      l4948 76B2                      l4892 75C8  
                    l4884 75B2                      l4796 72D0                      l4974 7736  
                    l4888 75B8                      l4998 77AC                      u4110 5922  
                    u4120 592A                      u4200 4DA4                      u4130 593A  
                    u5020 7056                      u4310 6452                      u5110 59E6  
                    u4080 589A                      u4400 65D6                      u5200 5AF8  
                    u6000 5FBC                      u4170 4CFA                      u4250 6386  
                    u5050 7100                      u4340 6508                      u4260 638C  
                    u5140 5A6C                      u6020 5FE0                      u3620 4698  
                    u4430 668C                      u4350 651A                      u5230 5B7E  
                    u3560 4858                      u4520 6816                      u4280 63AC  
                    u5320 5C92                      u6200 7202                      u3650 4B2E  
                    u4610 699C                      u4530 6828                      u5410 5DA6  
                    u6050 607A                      u3644 49F8                      u4460 66BA  
                    u4700 6B38                      u5420 5DAE                      u6140 61EC  
                    u3740 47F4                      u3820 4F80                      u3645 49F2  
                    u3670 4C34                      u4710 6B4A                      u3830 4F8E  
                    u6230 7292                      u7007 59F0                      u4800 6CC4  
                    u4640 69DA                      u6080 6124                      u3760 4802  
                    u6240 7298                      u7017 5B02                      u4490 6760  
                    u4730 6B6C                      u5290 5C0C                      u6170 6296  
                    u6090 6136                      u6330 736C                      u7107 65E0  
                    u7027 5C16                      u4580 68E6                      u4820 6CE8  
                    u5380 5D20                      u5620 54A8                      u6180 62A2  
                    u3844 4904                      u3780 4DC6                      u6500 75E4  
                    u6420 7526                      u6260 72D0                      u7117 676A  
                    u7037 5D2A                      u3845 4900                      u3694 4AA6  
                    u4670 6A80                      u5550 53E6                      u3854 49A6  
                    u6350 73A0                      u3695 4AA0                      u7127 68F0  
                    u7047 6A8A                      u3855 49A2                      u4760 6C06  
                    u5480 5326                      u7137 4D04                      u7057 6C10  
                    u4850 6D82                      u5730 50A0                      u7147 55D4  
                    u7067 6D8C                      u4940 6EEC                      u6620 7730  
                    u6460 75B2                      u7157 5678                      u7077 6EF6  
                    u4790 6CB2                      u5750 5126                      u6630 7736  
                    u6470 75B8                      u7167 571C                      u7087 7060  
                    u4880 6E2C                      u5920 5E4C                      u7177 57C0  
                    u7097 645C                      u4970 6F96                      u4890 6E3E  
                    u5690 556A                      u5930 5E66                      u7187 58A4  
                    u4980 6FA2                      u6740 785C                      u6580 76B2  
                    u7197 5940                      u4990 6FBC                      u6910 79A0  
                    u6750 7862                      u5960 5F00                      u6850 794A  
                    u6860 7950                      u5990 5FAA                      u6937 7156  
                    u6947 72A2                      u6957 5F0A                      u6967 6084  
                    u6977 61F6                      u6987 4FFE                      u6997 515C  
            __CFG_WDTPS$1 000000                      _TRMT 007D61  __size_of_was_key_pressed 00A2  
                    _main 7114                      _temp 0001                      fsr2h 000FDA  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
           __CFG_MCLRE$ON 000000              ___param_bank 000000           __end_of_Buttons 7F39  
                   ?_main 0043                     _SPBRG 000FAF                     _TXREG 000FAD  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
         __end_of_clr_led 4B14            __CFG_EBTR3$OFF 000000            write_display@i 0051  
          write_display@j 004F             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000                     _arrow 79AD  
                   _count 0041                     _show5 7E39                     _press 0100  
            ?_read_switch 0043                     main@h 0079                     main@i 007A  
                   main@j 0077                     main@k 0072                     main@m 0076  
                   main@n 0073                     main@x 006D                     main@y 006E  
                   _write 4708            send_note@three 0044           __end_of_show0_1 7FB3  
         __end_of_show0_2 7F8B           __end_of_show0_3 7BCD           __end_of_show3_1 7DB9  
         __end_of_show3_2 7F63           __end_of_show3_3 7FDF           __end_of_show4_1 7EF9  
         __end_of_show4_2 7D69           __end_of_show4_3 7D09           __end_of_show4_4 7EB9  
         __end_of_show7_1 7C41           __end_of_show7_2 7B55             ??_MyNotAckI2C 0043  
         __end_of_set_led 4A5E                     tablat 000FF5                     status 000FD8  
          __CFG_PBADEN$ON 000000           __initialization 477A              __end_of_main 79AC  
              _MyCloseI2C 464E            MygetsI2C@rdptr 0049                    ??_main 0069  
           __activetblptr 000002                _MyStartI2C 4652                    ?_write 0043  
              _MyWriteI2C 480E        __size_of_MyIdleI2C 0012                    _SSPADD 000FC8  
                  _SSPBUF 000FC9        __size_of_MyReadI2C 001C                    _i2xy64 7DF9  
     __end_of_MyNotAckI2C 4660            __CFG_XINST$OFF 000000        __size_of_MyOpenI2C 001E  
       ??_was_key_pressed 0049                    ___wmul 46E2            __CFG_STVREN$ON 000000  
      __size_of_MyStopI2C 0004                    _ledLUT 7FEF                    _circle 7C41  
                  _memcpy 4736                    clear_0 4798                    clear_1 47A4  
                  clear_2 47B0                 ??_clr_led 0049        __size_of_MygetsI2C 004E  
            __pdataCOMRAM 007C              __mediumconst 79AC                    tblptrh 000FF7  
                  tblptrl 000FF6                 ??_set_led 0049                    tblptru 000FF8  
              __accesstop 0080   __end_of__initialization 47B6             main@sync_mode 006F  
           ___rparam_used 000001            __pcstackCOMRAM 0043               ?_MyCloseI2C 0043  
           __end_of_arrow 7AAD             __end_of_show5 7E79             __end_of_write 4736  
       __end_of_MyIdleI2C 4672    __size_of_write_display 0134           MygetsI2C@length 004B  
       __end_of_MyReadI2C 46A2         __end_of_MyOpenI2C 46C0             ??_Myusartinit 0043  
       __end_of_MyStopI2C 465A               ?_MyStartI2C 0043                   ??_write 0045  
              __pbssBANK0 0080                __pbssBANK1 0100               _MyNotAckI2C 465A  
             ?_MyWriteI2C 0043      __size_of_read_switch 01E6         __end_of_MygetsI2C 480E  
                 ?___wmul 0043                _animation0 5574                _animation1 4C48  
              _animation2 62AC                _animation3 69A8                _animation4 594E  
              _animation5 5264                _animation6 4F92                _animation7 5DBA  
         is_key_pressed@k 0055                   ?_memcpy 0049        __size_of_send_note 0022  
 __size_of_is_key_pressed 00A2                   _SSPCON1 000FC6                   _SSPCON2 000FC5  
       is_key_pressed@led 0053                   _SSPSTAT 000FC7       __size_of_MyCloseI2C 0004  
     __end_of_Myusartinit 4686             _write_display 4B14                   _Buttons 7EF9  
                 __Hparam 0000                   __Lparam 0000           __size_of___wmul 0026  
     __size_of_MyStartI2C 0004                   __pcinit 477A           __size_of_memcpy 0044  
                 __ramtop 0600                   __ptext0 7114                   __ptext1 490E  
                 __ptext2 46C0                   __ptext3 4DAC                   __ptext4 4736  
                 __ptext5 47C0                   __ptext6 4686                   __ptext7 465A  
                 __ptext8 486C                   __ptext9 5DBA                   _clr_led 4A5E  
     __size_of_MyWriteI2C 005E         __end_of_drum_midi 7DF9        MyWriteI2C@data_out 0044  
       __end_of_buttonLUT 7FEF                   _show0_1 7F8B                   _show0_2 7F63  
                 _show0_3 7B55                   _show3_1 7D69                   _show3_2 7F39  
                 _show3_3 7FCB                   _show4_1 7EB9                   _show4_2 7D09  
                 _show4_3 7CA9                   _show4_4 7E79                   _show7_1 7BCD  
                 _show7_2 7AAD                   _set_led 49B0           _was_key_pressed 490E  
    end_of_initialization 47B6         __end_of_send_note 46E2                   memcpy@d 004F  
                 memcpy@n 004D                   memcpy@s 0051             __Lmediumconst 79AC  
          ?_write_display 0043                 _RCSTAbits 000FAB                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
             ?_animation0 0058               ?_animation1 0058               ?_animation2 0058  
             ?_animation3 0043               ?_animation4 0058               ?_animation5 0058  
             ?_animation6 0058               ?_animation7 0043                clr_led@led 0055  
               _TRISCbits 000F94               _Myusartinit 4672              read_switch@i 005E  
            read_switch@j 0060                main@column 0075                 _TXSTAbits 000FAC  
          __end_of_i2xy64 7E39              ??_MyCloseI2C 0043            __end_of___wmul 4708  
             _BAUDCONbits 000FB8            __end_of_ledLUT 7FFF             __pidataCOMRAM 464C  
          __end_of_circle 7CA9          _horizental_flash 7FB3            __end_of_memcpy 477A  
 __end_of_was_key_pressed 49B0       start_initialization 477A            _is_key_pressed 486C  
               _MyIdleI2C 4660                 _MyReadI2C 4686              ??_MyStartI2C 0043  
     __size_of_animation0 03DA       __size_of_animation1 0164       __size_of_animation2 06FC  
     __size_of_animation3 076C       __size_of_animation4 046C       __size_of_animation5 0310  
     __size_of_animation6 02D2           ??_write_display 0049       __size_of_animation7 04F2  
               _MyOpenI2C 46A2        __end_of_MyCloseI2C 4652              ?_MyNotAckI2C 0043  
            ??_MyWriteI2C 0044          __CFG_OSC$INTIO67 000000                 _MyStopI2C 4656  
               _MygetsI2C 47C0                  ??___wmul 0047          __CFG_LPT1OSC$OFF 000000  
                ??_memcpy 004F        __end_of_MyStartI2C 4656    __end_of_is_key_pressed 490E  
      __end_of_MyWriteI2C 486C               __pbssCOMRAM 0001        MyOpenI2C@sync_mode 0044  
              ?_MyIdleI2C 0043                ?_MyReadI2C 0043             ??_read_switch 0054  
              ?_MyOpenI2C 0043                ?_MyStopI2C 0043         __CFG_CCP2MX$PORTC 000000  
              ?_MygetsI2C 0049             __pmediumconst 79AC             set_led@matrix 0051  
                ?_clr_led 0043           ?_is_key_pressed 0043          ?_was_key_pressed 0043  
                ?_set_led 0043                 _drum_midi 7DB9                 _buttonLUT 7FDF  
              set_led@led 0053            __size_of_write 002E            ___wmul@product 0047  
      was_key_pressed@led 0053       __end_of_read_switch 4F92                 _play_mode 007C  
               _send_note 46C0             animation2@col 005E             animation2@row 0061  
                _PIR1bits 000F9E                  _PIR2bits 000FA1               write@status 0047  
            ??_animation0 0059              ??_animation1 0059              ??_animation2 005A  
            ??_animation3 0058              ??_animation4 0059              ??_animation5 005A  
            ??_animation6 0059              ??_animation7 0058         ___wmul@multiplier 0043  
             ??_MyIdleI2C 0043              ?_Myusartinit 0043               ??_MyReadI2C 0043  
            send_note@one 0045              send_note@two 0043               ??_MyOpenI2C 0044  
      __end_of_animation0 594E        __end_of_animation1 4DAC        __end_of_animation2 69A8  
      __end_of_animation3 7114        __end_of_animation4 5DBA        __end_of_animation5 5574  
      __end_of_animation6 5264        __end_of_animation7 62AC  __end_of_horizental_flash 7FCB  
             ??_MyStopI2C 0043     was_key_pressed@matrix 0051      __size_of_MyNotAckI2C 0006  
              ?_send_note 0043                  __Hrparam 0000                 memcpy@tmp 0053  
           MyOpenI2C@slew 0043                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
             ??_MygetsI2C 004C          __size_of_clr_led 00B6                  __ptext10 4F92  
                __ptext11 5264                  __ptext20 4660                  __ptext12 594E  
                __ptext21 4656                  __ptext13 69A8                  __ptext22 4652  
                __ptext14 62AC                  __ptext23 49B0                  __ptext15 4C48  
                __ptext24 4A5E                  __ptext16 5574                  __ptext25 46E2  
                __ptext17 4B14                  __ptext26 4672                  __ptext18 4708  
                __ptext27 46A2                  __ptext19 480E                  __ptext28 464E  
        __size_of_set_led 00AE               _read_switch 4DAC             __size_of_main 0898  
                _matrices 0080           main@rightbutton 0074                  clr_led@i 0057  
                main@note 0071                  main@slew 0070                  memcpy@d1 0049  
                memcpy@s1 004B             write@data_out 0046     __end_of_write_display 4C48  
           clr_led@matrix 0053               ??_send_note 0045                  set_led@i 0055  
              _OSCCONbits 000FD3          was_key_pressed@k 0055                 write@data 0045  
             animation0@i 005F               animation0@j 005E               animation1@i 005E  
             animation0@m 005D               animation1@j 005F               animation0@n 0058  
             animation2@h 0059               animation2@i 0065               animation1@m 005C  
             animation2@j 0067               animation1@n 0058               animation2@m 0060  
             animation3@i 005D               animation3@j 005F               animation2@n 0058  
             animation0@x 005B               animation4@h 0058               animation6@a 005E  
             animation4@i 005C               animation3@m 005C               animation6@b 0060  
             animation4@j 005D               animation6@c 0062               animation6@d 0064  
             animation1@x 005D               animation5@h 0059               animation5@i 005E  
             animation4@m 005B               animation5@j 005D               animation2@x 0063  
             animation5@m 005C               animation5@n 0058               animation7@h 005A  
             animation6@m 0066               animation7@i 005B               animation7@j 005D  
             animation6@n 0058               animation5@x 005F               animation6@x 005D  
        ??_is_key_pressed 0049               _SSPCON1bits 000FC6               _SSPCON2bits 000FC5  
    __size_of_Myusartinit 0014  
