

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jan 08 18:03:08 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 1.44
    46                           ; Generated 14/09/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  00434C                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _play_mode
    85  00434C  0003               	dw	3
    86                           
    87                           	psect	mediumconst
    88  0076AC                     __pmediumconst:
    89                           	opt stack 0
    90  0076AC  00                 	db	0
    91  0076AD                     _arrow:
    92                           	opt stack 0
    93  0076AD  00                 	db	0
    94  0076AE  64                 	db	100
    95  0076AF  64                 	db	100
    96  0076B0  64                 	db	100
    97  0076B1  01                 	db	1
    98  0076B2  04                 	db	4
    99  0076B3  05                 	db	5
   100  0076B4  64                 	db	100
   101  0076B5  06                 	db	6
   102  0076B6  09                 	db	9
   103  0076B7  0A                 	db	10
   104  0076B8  64                 	db	100
   105  0076B9  0B                 	db	11
   106  0076BA  0E                 	db	14
   107  0076BB  0F                 	db	15
   108  0076BC  64                 	db	100
   109  0076BD  01                 	db	1
   110  0076BE  64                 	db	100
   111  0076BF  64                 	db	100
   112  0076C0  64                 	db	100
   113  0076C1  00                 	db	0
   114  0076C2  02                 	db	2
   115  0076C3  05                 	db	5
   116  0076C4  64                 	db	100
   117  0076C5  04                 	db	4
   118  0076C6  06                 	db	6
   119  0076C7  09                 	db	9
   120  0076C8  64                 	db	100
   121  0076C9  08                 	db	8
   122  0076CA  0A                 	db	10
   123  0076CB  0D                 	db	13
   124  0076CC  64                 	db	100
   125  0076CD  02                 	db	2
   126  0076CE  64                 	db	100
   127  0076CF  64                 	db	100
   128  0076D0  64                 	db	100
   129  0076D1  01                 	db	1
   130  0076D2  03                 	db	3
   131  0076D3  06                 	db	6
   132  0076D4  64                 	db	100
   133  0076D5  05                 	db	5
   134  0076D6  07                 	db	7
   135  0076D7  0A                 	db	10
   136  0076D8  64                 	db	100
   137  0076D9  09                 	db	9
   138  0076DA  0B                 	db	11
   139  0076DB  0E                 	db	14
   140  0076DC  64                 	db	100
   141  0076DD  03                 	db	3
   142  0076DE  64                 	db	100
   143  0076DF  64                 	db	100
   144  0076E0  64                 	db	100
   145  0076E1  02                 	db	2
   146  0076E2  06                 	db	6
   147  0076E3  07                 	db	7
   148  0076E4  64                 	db	100
   149  0076E5  05                 	db	5
   150  0076E6  09                 	db	9
   151  0076E7  0A                 	db	10
   152  0076E8  64                 	db	100
   153  0076E9  08                 	db	8
   154  0076EA  0C                 	db	12
   155  0076EB  0D                 	db	13
   156  0076EC  64                 	db	100
   157  0076ED  04                 	db	4
   158  0076EE  64                 	db	100
   159  0076EF  64                 	db	100
   160  0076F0  64                 	db	100
   161  0076F1  00                 	db	0
   162  0076F2  05                 	db	5
   163  0076F3  08                 	db	8
   164  0076F4  64                 	db	100
   165  0076F5  01                 	db	1
   166  0076F6  06                 	db	6
   167  0076F7  09                 	db	9
   168  0076F8  64                 	db	100
   169  0076F9  02                 	db	2
   170  0076FA  07                 	db	7
   171  0076FB  0A                 	db	10
   172  0076FC  64                 	db	100
   173  0076FD  05                 	db	5
   174  0076FE  64                 	db	100
   175  0076FF  64                 	db	100
   176  007700  64                 	db	100
   177  007701  01                 	db	1
   178  007702  04                 	db	4
   179  007703  06                 	db	6
   180  007704  09                 	db	9
   181  007705  07                 	db	7
   182  007706  0D                 	db	13
   183  007707  64                 	db	100
   184  007708  64                 	db	100
   185  007709  64                 	db	100
   186  00770A  64                 	db	100
   187  00770B  64                 	db	100
   188  00770C  64                 	db	100
   189  00770D  06                 	db	6
   190  00770E  64                 	db	100
   191  00770F  64                 	db	100
   192  007710  64                 	db	100
   193  007711  02                 	db	2
   194  007712  05                 	db	5
   195  007713  07                 	db	7
   196  007714  0A                 	db	10
   197  007715  04                 	db	4
   198  007716  0E                 	db	14
   199  007717  64                 	db	100
   200  007718  64                 	db	100
   201  007719  64                 	db	100
   202  00771A  64                 	db	100
   203  00771B  64                 	db	100
   204  00771C  64                 	db	100
   205  00771D  07                 	db	7
   206  00771E  64                 	db	100
   207  00771F  64                 	db	100
   208  007720  64                 	db	100
   209  007721  03                 	db	3
   210  007722  06                 	db	6
   211  007723  0B                 	db	11
   212  007724  64                 	db	100
   213  007725  02                 	db	2
   214  007726  05                 	db	5
   215  007727  0A                 	db	10
   216  007728  64                 	db	100
   217  007729  01                 	db	1
   218  00772A  04                 	db	4
   219  00772B  09                 	db	9
   220  00772C  64                 	db	100
   221  00772D  08                 	db	8
   222  00772E  64                 	db	100
   223  00772F  64                 	db	100
   224  007730  64                 	db	100
   225  007731  04                 	db	4
   226  007732  09                 	db	9
   227  007733  0C                 	db	12
   228  007734  64                 	db	100
   229  007735  05                 	db	5
   230  007736  0A                 	db	10
   231  007737  0D                 	db	13
   232  007738  64                 	db	100
   233  007739  06                 	db	6
   234  00773A  0B                 	db	11
   235  00773B  0E                 	db	14
   236  00773C  64                 	db	100
   237  00773D  09                 	db	9
   238  00773E  64                 	db	100
   239  00773F  64                 	db	100
   240  007740  64                 	db	100
   241  007741  05                 	db	5
   242  007742  08                 	db	8
   243  007743  0A                 	db	10
   244  007744  0D                 	db	13
   245  007745  01                 	db	1
   246  007746  0B                 	db	11
   247  007747  64                 	db	100
   248  007748  64                 	db	100
   249  007749  64                 	db	100
   250  00774A  64                 	db	100
   251  00774B  64                 	db	100
   252  00774C  64                 	db	100
   253  00774D  0A                 	db	10
   254  00774E  64                 	db	100
   255  00774F  64                 	db	100
   256  007750  64                 	db	100
   257  007751  06                 	db	6
   258  007752  09                 	db	9
   259  007753  0B                 	db	11
   260  007754  0E                 	db	14
   261  007755  02                 	db	2
   262  007756  08                 	db	8
   263  007757  64                 	db	100
   264  007758  64                 	db	100
   265  007759  64                 	db	100
   266  00775A  64                 	db	100
   267  00775B  64                 	db	100
   268  00775C  64                 	db	100
   269  00775D  0B                 	db	11
   270  00775E  64                 	db	100
   271  00775F  64                 	db	100
   272  007760  64                 	db	100
   273  007761  07                 	db	7
   274  007762  0A                 	db	10
   275  007763  0F                 	db	15
   276  007764  64                 	db	100
   277  007765  06                 	db	6
   278  007766  09                 	db	9
   279  007767  0E                 	db	14
   280  007768  64                 	db	100
   281  007769  05                 	db	5
   282  00776A  08                 	db	8
   283  00776B  0D                 	db	13
   284  00776C  64                 	db	100
   285  00776D  0C                 	db	12
   286  00776E  64                 	db	100
   287  00776F  64                 	db	100
   288  007770  64                 	db	100
   289  007771  08                 	db	8
   290  007772  09                 	db	9
   291  007773  0D                 	db	13
   292  007774  64                 	db	100
   293  007775  05                 	db	5
   294  007776  06                 	db	6
   295  007777  0A                 	db	10
   296  007778  64                 	db	100
   297  007779  02                 	db	2
   298  00777A  03                 	db	3
   299  00777B  07                 	db	7
   300  00777C  64                 	db	100
   301  00777D  0D                 	db	13
   302  00777E  64                 	db	100
   303  00777F  64                 	db	100
   304  007780  64                 	db	100
   305  007781  09                 	db	9
   306  007782  0C                 	db	12
   307  007783  0E                 	db	14
   308  007784  64                 	db	100
   309  007785  05                 	db	5
   310  007786  08                 	db	8
   311  007787  0A                 	db	10
   312  007788  64                 	db	100
   313  007789  01                 	db	1
   314  00778A  04                 	db	4
   315  00778B  06                 	db	6
   316  00778C  64                 	db	100
   317  00778D  0E                 	db	14
   318  00778E  64                 	db	100
   319  00778F  64                 	db	100
   320  007790  64                 	db	100
   321  007791  0A                 	db	10
   322  007792  0D                 	db	13
   323  007793  0F                 	db	15
   324  007794  64                 	db	100
   325  007795  06                 	db	6
   326  007796  09                 	db	9
   327  007797  0B                 	db	11
   328  007798  64                 	db	100
   329  007799  02                 	db	2
   330  00779A  05                 	db	5
   331  00779B  07                 	db	7
   332  00779C  64                 	db	100
   333  00779D  0F                 	db	15
   334  00779E  64                 	db	100
   335  00779F  64                 	db	100
   336  0077A0  64                 	db	100
   337  0077A1  0A                 	db	10
   338  0077A2  0B                 	db	11
   339  0077A3  0E                 	db	14
   340  0077A4  64                 	db	100
   341  0077A5  05                 	db	5
   342  0077A6  06                 	db	6
   343  0077A7  09                 	db	9
   344  0077A8  64                 	db	100
   345  0077A9  00                 	db	0
   346  0077AA  01                 	db	1
   347  0077AB  04                 	db	4
   348  0077AC  64                 	db	100
   349  0077AD                     __end_of_arrow:
   350                           	opt stack 0
   351  0077AD                     _show7_2:
   352                           	opt stack 0
   353  0077AD  00                 	db	0
   354  0077AE  05                 	db	5
   355  0077AF  0A                 	db	10
   356  0077B0  0F                 	db	15
   357  0077B1  13                 	db	19
   358  0077B2  16                 	db	22
   359  0077B3  19                 	db	25
   360  0077B4  1C                 	db	28
   361  0077B5  23                 	db	35
   362  0077B6  26                 	db	38
   363  0077B7  29                 	db	41
   364  0077B8  2C                 	db	44
   365  0077B9  30                 	db	48
   366  0077BA  35                 	db	53
   367  0077BB  3A                 	db	58
   368  0077BC  3F                 	db	63
   369  0077BD  64                 	db	100
   370  0077BE  64                 	db	100
   371  0077BF  64                 	db	100
   372  0077C0  64                 	db	100
   373  0077C1  64                 	db	100
   374  0077C2  64                 	db	100
   375  0077C3  64                 	db	100
   376  0077C4  64                 	db	100
   377  0077C5  04                 	db	4
   378  0077C6  09                 	db	9
   379  0077C7  0E                 	db	14
   380  0077C8  23                 	db	35
   381  0077C9  30                 	db	48
   382  0077CA  27                 	db	39
   383  0077CB  2A                 	db	42
   384  0077CC  2D                 	db	45
   385  0077CD  1C                 	db	28
   386  0077CE  31                 	db	49
   387  0077CF  36                 	db	54
   388  0077D0  3B                 	db	59
   389  0077D1  0F                 	db	15
   390  0077D2  18                 	db	24
   391  0077D3  15                 	db	21
   392  0077D4  12                 	db	18
   393  0077D5  64                 	db	100
   394  0077D6  64                 	db	100
   395  0077D7  64                 	db	100
   396  0077D8  64                 	db	100
   397  0077D9  64                 	db	100
   398  0077DA  64                 	db	100
   399  0077DB  64                 	db	100
   400  0077DC  64                 	db	100
   401  0077DD  03                 	db	3
   402  0077DE  10                 	db	16
   403  0077DF  06                 	db	6
   404  0077E0  07                 	db	7
   405  0077E1  0A                 	db	10
   406  0077E2  0B                 	db	11
   407  0077E3  0C                 	db	12
   408  0077E4  20                 	db	32
   409  0077E5  21                 	db	33
   410  0077E6  25                 	db	37
   411  0077E7  22                 	db	34
   412  0077E8  26                 	db	38
   413  0077E9  2F                 	db	47
   414  0077EA  3C                 	db	60
   415  0077EB  38                 	db	56
   416  0077EC  39                 	db	57
   417  0077ED  34                 	db	52
   418  0077EE  35                 	db	53
   419  0077EF  1F                 	db	31
   420  0077F0  33                 	db	51
   421  0077F1  1A                 	db	26
   422  0077F2  1E                 	db	30
   423  0077F3  19                 	db	25
   424  0077F4  1D                 	db	29
   425  0077F5  02                 	db	2
   426  0077F6  03                 	db	3
   427  0077F7  05                 	db	5
   428  0077F8  06                 	db	6
   429  0077F9  0B                 	db	11
   430  0077FA  18                 	db	24
   431  0077FB  20                 	db	32
   432  0077FC  24                 	db	36
   433  0077FD  25                 	db	37
   434  0077FE  29                 	db	41
   435  0077FF  0E                 	db	14
   436  007800  22                 	db	34
   437  007801  3C                 	db	60
   438  007802  3D                 	db	61
   439  007803  39                 	db	57
   440  007804  3A                 	db	58
   441  007805  34                 	db	52
   442  007806  27                 	db	39
   443  007807  1B                 	db	27
   444  007808  1F                 	db	31
   445  007809  16                 	db	22
   446  00780A  1A                 	db	26
   447  00780B  1D                 	db	29
   448  00780C  31                 	db	49
   449  00780D  00                 	db	0
   450  00780E  01                 	db	1
   451  00780F  05                 	db	5
   452  007810  06                 	db	6
   453  007811  0A                 	db	10
   454  007812  13                 	db	19
   455  007813  17                 	db	23
   456  007814  16                 	db	22
   457  007815  1A                 	db	26
   458  007816  19                 	db	25
   459  007817  28                 	db	40
   460  007818  2C                 	db	44
   461  007819  25                 	db	37
   462  00781A  29                 	db	41
   463  00781B  26                 	db	38
   464  00781C  3E                 	db	62
   465  00781D  3F                 	db	63
   466  00781E  39                 	db	57
   467  00781F  3A                 	db	58
   468  007820  35                 	db	53
   469  007821  64                 	db	100
   470  007822  64                 	db	100
   471  007823  64                 	db	100
   472  007824  64                 	db	100
   473  007825  00                 	db	0
   474  007826  01                 	db	1
   475  007827  28                 	db	40
   476  007828  2C                 	db	44
   477  007829  3E                 	db	62
   478  00782A  3F                 	db	63
   479  00782B  13                 	db	19
   480  00782C  17                 	db	23
   481  00782D  64                 	db	100
   482  00782E  64                 	db	100
   483  00782F  64                 	db	100
   484  007830  64                 	db	100
   485  007831  64                 	db	100
   486  007832  64                 	db	100
   487  007833  64                 	db	100
   488  007834  64                 	db	100
   489  007835  64                 	db	100
   490  007836  64                 	db	100
   491  007837  64                 	db	100
   492  007838  64                 	db	100
   493  007839  64                 	db	100
   494  00783A  64                 	db	100
   495  00783B  64                 	db	100
   496  00783C  64                 	db	100
   497  00783D  00                 	db	0
   498  00783E  2C                 	db	44
   499  00783F  3F                 	db	63
   500  007840  13                 	db	19
   501  007841  64                 	db	100
   502  007842  64                 	db	100
   503  007843  64                 	db	100
   504  007844  64                 	db	100
   505  007845  64                 	db	100
   506  007846  64                 	db	100
   507  007847  64                 	db	100
   508  007848  64                 	db	100
   509  007849  64                 	db	100
   510  00784A  64                 	db	100
   511  00784B  64                 	db	100
   512  00784C  64                 	db	100
   513  00784D  64                 	db	100
   514  00784E  64                 	db	100
   515  00784F  64                 	db	100
   516  007850  64                 	db	100
   517  007851  64                 	db	100
   518  007852  64                 	db	100
   519  007853  64                 	db	100
   520  007854  64                 	db	100
   521  007855                     __end_of_show7_2:
   522                           	opt stack 0
   523  007855                     _show0_3:
   524                           	opt stack 0
   525  007855  0F                 	db	15
   526  007856  1C                 	db	28
   527  007857  23                 	db	35
   528  007858  30                 	db	48
   529  007859  64                 	db	100
   530  00785A  64                 	db	100
   531  00785B  64                 	db	100
   532  00785C  64                 	db	100
   533  00785D  64                 	db	100
   534  00785E  64                 	db	100
   535  00785F  64                 	db	100
   536  007860  64                 	db	100
   537  007861  64                 	db	100
   538  007862  64                 	db	100
   539  007863  64                 	db	100
   540  007864  64                 	db	100
   541  007865  64                 	db	100
   542  007866  64                 	db	100
   543  007867  64                 	db	100
   544  007868  64                 	db	100
   545  007869  0B                 	db	11
   546  00786A  0E                 	db	14
   547  00786B  22                 	db	34
   548  00786C  27                 	db	39
   549  00786D  18                 	db	24
   550  00786E  1D                 	db	29
   551  00786F  31                 	db	49
   552  007870  34                 	db	52
   553  007871  64                 	db	100
   554  007872  64                 	db	100
   555  007873  64                 	db	100
   556  007874  64                 	db	100
   557  007875  64                 	db	100
   558  007876  64                 	db	100
   559  007877  64                 	db	100
   560  007878  64                 	db	100
   561  007879  64                 	db	100
   562  00787A  64                 	db	100
   563  00787B  64                 	db	100
   564  00787C  64                 	db	100
   565  00787D  0A                 	db	10
   566  00787E  0B                 	db	11
   567  00787F  18                 	db	24
   568  007880  19                 	db	25
   569  007881  0E                 	db	14
   570  007882  22                 	db	34
   571  007883  26                 	db	38
   572  007884  27                 	db	39
   573  007885  34                 	db	52
   574  007886  35                 	db	53
   575  007887  1D                 	db	29
   576  007888  31                 	db	49
   577  007889  64                 	db	100
   578  00788A  64                 	db	100
   579  00788B  64                 	db	100
   580  00788C  64                 	db	100
   581  00788D  64                 	db	100
   582  00788E  64                 	db	100
   583  00788F  64                 	db	100
   584  007890  64                 	db	100
   585  007891  07                 	db	7
   586  007892  0A                 	db	10
   587  007893  0D                 	db	13
   588  007894  21                 	db	33
   589  007895  26                 	db	38
   590  007896  2B                 	db	43
   591  007897  14                 	db	20
   592  007898  19                 	db	25
   593  007899  1E                 	db	30
   594  00789A  32                 	db	50
   595  00789B  35                 	db	53
   596  00789C  38                 	db	56
   597  00789D  64                 	db	100
   598  00789E  64                 	db	100
   599  00789F  64                 	db	100
   600  0078A0  64                 	db	100
   601  0078A1  64                 	db	100
   602  0078A2  64                 	db	100
   603  0078A3  64                 	db	100
   604  0078A4  64                 	db	100
   605  0078A5  05                 	db	5
   606  0078A6  06                 	db	6
   607  0078A7  07                 	db	7
   608  0078A8  14                 	db	20
   609  0078A9  15                 	db	21
   610  0078AA  16                 	db	22
   611  0078AB  09                 	db	9
   612  0078AC  0D                 	db	13
   613  0078AD  21                 	db	33
   614  0078AE  25                 	db	37
   615  0078AF  29                 	db	41
   616  0078B0  2A                 	db	42
   617  0078B1  2B                 	db	43
   618  0078B2  38                 	db	56
   619  0078B3  39                 	db	57
   620  0078B4  3A                 	db	58
   621  0078B5  1A                 	db	26
   622  0078B6  1E                 	db	30
   623  0078B7  32                 	db	50
   624  0078B8  36                 	db	54
   625  0078B9  02                 	db	2
   626  0078BA  05                 	db	5
   627  0078BB  08                 	db	8
   628  0078BC  24                 	db	36
   629  0078BD  29                 	db	41
   630  0078BE  2E                 	db	46
   631  0078BF  37                 	db	55
   632  0078C0  3A                 	db	58
   633  0078C1  3D                 	db	61
   634  0078C2  11                 	db	17
   635  0078C3  16                 	db	22
   636  0078C4  1B                 	db	27
   637  0078C5  64                 	db	100
   638  0078C6  64                 	db	100
   639  0078C7  64                 	db	100
   640  0078C8  64                 	db	100
   641  0078C9  64                 	db	100
   642  0078CA  64                 	db	100
   643  0078CB  64                 	db	100
   644  0078CC  64                 	db	100
   645  0078CD                     __end_of_show0_3:
   646                           	opt stack 0
   647  0078CD                     _show7_1:
   648                           	opt stack 0
   649  0078CD  0F                 	db	15
   650  0078CE  1C                 	db	28
   651  0078CF  23                 	db	35
   652  0078D0  30                 	db	48
   653  0078D1  64                 	db	100
   654  0078D2  64                 	db	100
   655  0078D3  64                 	db	100
   656  0078D4  64                 	db	100
   657  0078D5  64                 	db	100
   658  0078D6  64                 	db	100
   659  0078D7  64                 	db	100
   660  0078D8  64                 	db	100
   661  0078D9  64                 	db	100
   662  0078DA  64                 	db	100
   663  0078DB  64                 	db	100
   664  0078DC  64                 	db	100
   665  0078DD  64                 	db	100
   666  0078DE  64                 	db	100
   667  0078DF  64                 	db	100
   668  0078E0  64                 	db	100
   669  0078E1  64                 	db	100
   670  0078E2  64                 	db	100
   671  0078E3  64                 	db	100
   672  0078E4  64                 	db	100
   673  0078E5  64                 	db	100
   674  0078E6  64                 	db	100
   675  0078E7  64                 	db	100
   676  0078E8  64                 	db	100
   677  0078E9  64                 	db	100
   678  0078EA  0A                 	db	10
   679  0078EB  0B                 	db	11
   680  0078EC  0E                 	db	14
   681  0078ED  22                 	db	34
   682  0078EE  26                 	db	38
   683  0078EF  27                 	db	39
   684  0078F0  34                 	db	52
   685  0078F1  35                 	db	53
   686  0078F2  31                 	db	49
   687  0078F3  1D                 	db	29
   688  0078F4  19                 	db	25
   689  0078F5  18                 	db	24
   690  0078F6  0B                 	db	11
   691  0078F7  64                 	db	100
   692  0078F8  64                 	db	100
   693  0078F9  64                 	db	100
   694  0078FA  64                 	db	100
   695  0078FB  64                 	db	100
   696  0078FC  64                 	db	100
   697  0078FD  64                 	db	100
   698  0078FE  64                 	db	100
   699  0078FF  64                 	db	100
   700  007900  64                 	db	100
   701  007901  64                 	db	100
   702  007902  64                 	db	100
   703  007903  64                 	db	100
   704  007904  64                 	db	100
   705  007905  64                 	db	100
   706  007906  64                 	db	100
   707  007907  05                 	db	5
   708  007908  06                 	db	6
   709  007909  07                 	db	7
   710  00790A  14                 	db	20
   711  00790B  15                 	db	21
   712  00790C  09                 	db	9
   713  00790D  0D                 	db	13
   714  00790E  21                 	db	33
   715  00790F  25                 	db	37
   716  007910  29                 	db	41
   717  007911  2A                 	db	42
   718  007912  2B                 	db	43
   719  007913  38                 	db	56
   720  007914  39                 	db	57
   721  007915  3A                 	db	58
   722  007916  36                 	db	54
   723  007917  32                 	db	50
   724  007918  1E                 	db	30
   725  007919  1A                 	db	26
   726  00791A  16                 	db	22
   727  00791B  64                 	db	100
   728  00791C  64                 	db	100
   729  00791D  64                 	db	100
   730  00791E  64                 	db	100
   731  00791F  64                 	db	100
   732  007920  64                 	db	100
   733  007921  64                 	db	100
   734  007922  64                 	db	100
   735  007923  64                 	db	100
   736  007924  00                 	db	0
   737  007925  01                 	db	1
   738  007926  02                 	db	2
   739  007927  03                 	db	3
   740  007928  10                 	db	16
   741  007929  11                 	db	17
   742  00792A  12                 	db	18
   743  00792B  13                 	db	19
   744  00792C  04                 	db	4
   745  00792D  08                 	db	8
   746  00792E  0C                 	db	12
   747  00792F  20                 	db	32
   748  007930  24                 	db	36
   749  007931  28                 	db	40
   750  007932  2C                 	db	44
   751  007933  2D                 	db	45
   752  007934  2E                 	db	46
   753  007935  2F                 	db	47
   754  007936  3C                 	db	60
   755  007937  3D                 	db	61
   756  007938  3E                 	db	62
   757  007939  3F                 	db	63
   758  00793A  17                 	db	23
   759  00793B  1B                 	db	27
   760  00793C  1F                 	db	31
   761  00793D  33                 	db	51
   762  00793E  37                 	db	55
   763  00793F  3B                 	db	59
   764  007940  3F                 	db	63
   765  007941                     __end_of_show7_1:
   766                           	opt stack 0
   767  007941                     _circle:
   768                           	opt stack 0
   769  007941  00                 	db	0
   770  007942  01                 	db	1
   771  007943  02                 	db	2
   772  007944  03                 	db	3
   773  007945  10                 	db	16
   774  007946  11                 	db	17
   775  007947  12                 	db	18
   776  007948  16                 	db	22
   777  007949  1A                 	db	26
   778  00794A  1E                 	db	30
   779  00794B  32                 	db	50
   780  00794C  36                 	db	54
   781  00794D  3A                 	db	58
   782  00794E  04                 	db	4
   783  00794F  08                 	db	8
   784  007950  0C                 	db	12
   785  007951  20                 	db	32
   786  007952  24                 	db	36
   787  007953  28                 	db	40
   788  007954  2C                 	db	44
   789  007955  2D                 	db	45
   790  007956  2E                 	db	46
   791  007957  2F                 	db	47
   792  007958  3C                 	db	60
   793  007959  3D                 	db	61
   794  00795A  3E                 	db	62
   795  00795B  05                 	db	5
   796  00795C  06                 	db	6
   797  00795D  07                 	db	7
   798  00795E  14                 	db	20
   799  00795F  15                 	db	21
   800  007960  19                 	db	25
   801  007961  1D                 	db	29
   802  007962  31                 	db	49
   803  007963  35                 	db	53
   804  007964  39                 	db	57
   805  007965  09                 	db	9
   806  007966  0D                 	db	13
   807  007967  21                 	db	33
   808  007968  25                 	db	37
   809  007969  29                 	db	41
   810  00796A  2A                 	db	42
   811  00796B  2B                 	db	43
   812  00796C  38                 	db	56
   813  00796D  64                 	db	100
   814  00796E  64                 	db	100
   815  00796F  64                 	db	100
   816  007970  64                 	db	100
   817  007971  64                 	db	100
   818  007972  64                 	db	100
   819  007973  64                 	db	100
   820  007974  64                 	db	100
   821  007975  0A                 	db	10
   822  007976  0B                 	db	11
   823  007977  18                 	db	24
   824  007978  1C                 	db	28
   825  007979  0E                 	db	14
   826  00797A  22                 	db	34
   827  00797B  26                 	db	38
   828  00797C  27                 	db	39
   829  00797D  34                 	db	52
   830  00797E  30                 	db	48
   831  00797F  64                 	db	100
   832  007980  64                 	db	100
   833  007981  64                 	db	100
   834  007982  64                 	db	100
   835  007983  64                 	db	100
   836  007984  64                 	db	100
   837  007985  64                 	db	100
   838  007986  64                 	db	100
   839  007987  64                 	db	100
   840  007988  64                 	db	100
   841  007989  64                 	db	100
   842  00798A  64                 	db	100
   843  00798B  64                 	db	100
   844  00798C  64                 	db	100
   845  00798D  64                 	db	100
   846  00798E  64                 	db	100
   847  00798F  0F                 	db	15
   848  007990  23                 	db	35
   849  007991  64                 	db	100
   850  007992  64                 	db	100
   851  007993  64                 	db	100
   852  007994  64                 	db	100
   853  007995  64                 	db	100
   854  007996  64                 	db	100
   855  007997  64                 	db	100
   856  007998  64                 	db	100
   857  007999  64                 	db	100
   858  00799A  64                 	db	100
   859  00799B  64                 	db	100
   860  00799C  64                 	db	100
   861  00799D  64                 	db	100
   862  00799E  64                 	db	100
   863  00799F  64                 	db	100
   864  0079A0  64                 	db	100
   865  0079A1  64                 	db	100
   866  0079A2  64                 	db	100
   867  0079A3  64                 	db	100
   868  0079A4  64                 	db	100
   869  0079A5  64                 	db	100
   870  0079A6  64                 	db	100
   871  0079A7  64                 	db	100
   872  0079A8  64                 	db	100
   873  0079A9                     __end_of_circle:
   874                           	opt stack 0
   875  0079A9                     _show4_3:
   876                           	opt stack 0
   877  0079A9  37                 	db	55
   878  0079AA  3A                 	db	58
   879  0079AB  3D                 	db	61
   880  0079AC  3B                 	db	59
   881  0079AD  3E                 	db	62
   882  0079AE  3F                 	db	63
   883  0079AF  64                 	db	100
   884  0079B0  64                 	db	100
   885  0079B1  33                 	db	51
   886  0079B2  36                 	db	54
   887  0079B3  39                 	db	57
   888  0079B4  3C                 	db	60
   889  0079B5  37                 	db	55
   890  0079B6  3A                 	db	58
   891  0079B7  3D                 	db	61
   892  0079B8  64                 	db	100
   893  0079B9  1F                 	db	31
   894  0079BA  32                 	db	50
   895  0079BB  35                 	db	53
   896  0079BC  38                 	db	56
   897  0079BD  33                 	db	51
   898  0079BE  36                 	db	54
   899  0079BF  39                 	db	57
   900  0079C0  3C                 	db	60
   901  0079C1  1B                 	db	27
   902  0079C2  1E                 	db	30
   903  0079C3  31                 	db	49
   904  0079C4  34                 	db	52
   905  0079C5  1F                 	db	31
   906  0079C6  32                 	db	50
   907  0079C7  35                 	db	53
   908  0079C8  38                 	db	56
   909  0079C9  17                 	db	23
   910  0079CA  1A                 	db	26
   911  0079CB  1D                 	db	29
   912  0079CC  30                 	db	48
   913  0079CD  1B                 	db	27
   914  0079CE  1E                 	db	30
   915  0079CF  31                 	db	49
   916  0079D0  34                 	db	52
   917  0079D1  13                 	db	19
   918  0079D2  16                 	db	22
   919  0079D3  19                 	db	25
   920  0079D4  1C                 	db	28
   921  0079D5  17                 	db	23
   922  0079D6  1A                 	db	26
   923  0079D7  1D                 	db	29
   924  0079D8  30                 	db	48
   925  0079D9  12                 	db	18
   926  0079DA  15                 	db	21
   927  0079DB  18                 	db	24
   928  0079DC  0F                 	db	15
   929  0079DD  13                 	db	19
   930  0079DE  16                 	db	22
   931  0079DF  19                 	db	25
   932  0079E0  1C                 	db	28
   933  0079E1  11                 	db	17
   934  0079E2  14                 	db	20
   935  0079E3  0B                 	db	11
   936  0079E4  0E                 	db	14
   937  0079E5  12                 	db	18
   938  0079E6  15                 	db	21
   939  0079E7  18                 	db	24
   940  0079E8  0F                 	db	15
   941  0079E9  10                 	db	16
   942  0079EA  07                 	db	7
   943  0079EB  0A                 	db	10
   944  0079EC  0D                 	db	13
   945  0079ED  11                 	db	17
   946  0079EE  14                 	db	20
   947  0079EF  0B                 	db	11
   948  0079F0  0E                 	db	14
   949  0079F1  03                 	db	3
   950  0079F2  06                 	db	6
   951  0079F3  09                 	db	9
   952  0079F4  0C                 	db	12
   953  0079F5  10                 	db	16
   954  0079F6  07                 	db	7
   955  0079F7  0A                 	db	10
   956  0079F8  0D                 	db	13
   957  0079F9  02                 	db	2
   958  0079FA  05                 	db	5
   959  0079FB  08                 	db	8
   960  0079FC  03                 	db	3
   961  0079FD  06                 	db	6
   962  0079FE  09                 	db	9
   963  0079FF  0C                 	db	12
   964  007A00  64                 	db	100
   965  007A01  00                 	db	0
   966  007A02  01                 	db	1
   967  007A03  02                 	db	2
   968  007A04  04                 	db	4
   969  007A05  05                 	db	5
   970  007A06  08                 	db	8
   971  007A07  64                 	db	100
   972  007A08  64                 	db	100
   973  007A09                     __end_of_show4_3:
   974                           	opt stack 0
   975  007A09                     _show4_2:
   976                           	opt stack 0
   977  007A09  00                 	db	0
   978  007A0A  01                 	db	1
   979  007A0B  02                 	db	2
   980  007A0C  04                 	db	4
   981  007A0D  05                 	db	5
   982  007A0E  08                 	db	8
   983  007A0F  64                 	db	100
   984  007A10  64                 	db	100
   985  007A11  02                 	db	2
   986  007A12  05                 	db	5
   987  007A13  08                 	db	8
   988  007A14  03                 	db	3
   989  007A15  06                 	db	6
   990  007A16  09                 	db	9
   991  007A17  0C                 	db	12
   992  007A18  64                 	db	100
   993  007A19  03                 	db	3
   994  007A1A  06                 	db	6
   995  007A1B  09                 	db	9
   996  007A1C  0C                 	db	12
   997  007A1D  07                 	db	7
   998  007A1E  0A                 	db	10
   999  007A1F  0D                 	db	13
  1000  007A20  20                 	db	32
  1001  007A21  07                 	db	7
  1002  007A22  0A                 	db	10
  1003  007A23  0D                 	db	13
  1004  007A24  20                 	db	32
  1005  007A25  0B                 	db	11
  1006  007A26  0E                 	db	14
  1007  007A27  21                 	db	33
  1008  007A28  24                 	db	36
  1009  007A29  0B                 	db	11
  1010  007A2A  0E                 	db	14
  1011  007A2B  21                 	db	33
  1012  007A2C  24                 	db	36
  1013  007A2D  0F                 	db	15
  1014  007A2E  22                 	db	34
  1015  007A2F  25                 	db	37
  1016  007A30  28                 	db	40
  1017  007A31  0F                 	db	15
  1018  007A32  22                 	db	34
  1019  007A33  25                 	db	37
  1020  007A34  28                 	db	40
  1021  007A35  23                 	db	35
  1022  007A36  26                 	db	38
  1023  007A37  29                 	db	41
  1024  007A38  2C                 	db	44
  1025  007A39  23                 	db	35
  1026  007A3A  26                 	db	38
  1027  007A3B  29                 	db	41
  1028  007A3C  2C                 	db	44
  1029  007A3D  30                 	db	48
  1030  007A3E  27                 	db	39
  1031  007A3F  2A                 	db	42
  1032  007A40  2D                 	db	45
  1033  007A41  30                 	db	48
  1034  007A42  27                 	db	39
  1035  007A43  2A                 	db	42
  1036  007A44  2D                 	db	45
  1037  007A45  31                 	db	49
  1038  007A46  34                 	db	52
  1039  007A47  2B                 	db	43
  1040  007A48  2E                 	db	46
  1041  007A49  31                 	db	49
  1042  007A4A  34                 	db	52
  1043  007A4B  2B                 	db	43
  1044  007A4C  2E                 	db	46
  1045  007A4D  32                 	db	50
  1046  007A4E  35                 	db	53
  1047  007A4F  38                 	db	56
  1048  007A50  2F                 	db	47
  1049  007A51  32                 	db	50
  1050  007A52  35                 	db	53
  1051  007A53  38                 	db	56
  1052  007A54  2F                 	db	47
  1053  007A55  33                 	db	51
  1054  007A56  36                 	db	54
  1055  007A57  39                 	db	57
  1056  007A58  3C                 	db	60
  1057  007A59  33                 	db	51
  1058  007A5A  36                 	db	54
  1059  007A5B  39                 	db	57
  1060  007A5C  3C                 	db	60
  1061  007A5D  37                 	db	55
  1062  007A5E  3A                 	db	58
  1063  007A5F  3D                 	db	61
  1064  007A60  64                 	db	100
  1065  007A61  37                 	db	55
  1066  007A62  3A                 	db	58
  1067  007A63  3D                 	db	61
  1068  007A64  3B                 	db	59
  1069  007A65  3E                 	db	62
  1070  007A66  3F                 	db	63
  1071  007A67  64                 	db	100
  1072  007A68  64                 	db	100
  1073  007A69                     __end_of_show4_2:
  1074                           	opt stack 0
  1075  007A69                     _show3_1:
  1076                           	opt stack 0
  1077  007A69  00                 	db	0
  1078  007A6A  01                 	db	1
  1079  007A6B  02                 	db	2
  1080  007A6C  03                 	db	3
  1081  007A6D  2F                 	db	47
  1082  007A6E  3C                 	db	60
  1083  007A6F  3D                 	db	61
  1084  007A70  3E                 	db	62
  1085  007A71  01                 	db	1
  1086  007A72  02                 	db	2
  1087  007A73  03                 	db	3
  1088  007A74  10                 	db	16
  1089  007A75  2E                 	db	46
  1090  007A76  2F                 	db	47
  1091  007A77  3C                 	db	60
  1092  007A78  3D                 	db	61
  1093  007A79  02                 	db	2
  1094  007A7A  03                 	db	3
  1095  007A7B  10                 	db	16
  1096  007A7C  11                 	db	17
  1097  007A7D  2D                 	db	45
  1098  007A7E  2E                 	db	46
  1099  007A7F  2F                 	db	47
  1100  007A80  3C                 	db	60
  1101  007A81  03                 	db	3
  1102  007A82  10                 	db	16
  1103  007A83  11                 	db	17
  1104  007A84  12                 	db	18
  1105  007A85  2C                 	db	44
  1106  007A86  2D                 	db	45
  1107  007A87  2E                 	db	46
  1108  007A88  2F                 	db	47
  1109  007A89  10                 	db	16
  1110  007A8A  11                 	db	17
  1111  007A8B  12                 	db	18
  1112  007A8C  16                 	db	22
  1113  007A8D  28                 	db	40
  1114  007A8E  2C                 	db	44
  1115  007A8F  2D                 	db	45
  1116  007A90  2E                 	db	46
  1117  007A91  11                 	db	17
  1118  007A92  12                 	db	18
  1119  007A93  16                 	db	22
  1120  007A94  1A                 	db	26
  1121  007A95  24                 	db	36
  1122  007A96  28                 	db	40
  1123  007A97  2C                 	db	44
  1124  007A98  2D                 	db	45
  1125  007A99  12                 	db	18
  1126  007A9A  16                 	db	22
  1127  007A9B  1A                 	db	26
  1128  007A9C  1E                 	db	30
  1129  007A9D  20                 	db	32
  1130  007A9E  24                 	db	36
  1131  007A9F  28                 	db	40
  1132  007AA0  2C                 	db	44
  1133  007AA1  16                 	db	22
  1134  007AA2  1A                 	db	26
  1135  007AA3  1E                 	db	30
  1136  007AA4  32                 	db	50
  1137  007AA5  0C                 	db	12
  1138  007AA6  20                 	db	32
  1139  007AA7  24                 	db	36
  1140  007AA8  28                 	db	40
  1141  007AA9  1A                 	db	26
  1142  007AAA  1E                 	db	30
  1143  007AAB  32                 	db	50
  1144  007AAC  36                 	db	54
  1145  007AAD  08                 	db	8
  1146  007AAE  0C                 	db	12
  1147  007AAF  20                 	db	32
  1148  007AB0  24                 	db	36
  1149  007AB1  1E                 	db	30
  1150  007AB2  32                 	db	50
  1151  007AB3  36                 	db	54
  1152  007AB4  3A                 	db	58
  1153  007AB5  04                 	db	4
  1154  007AB6  08                 	db	8
  1155  007AB7  0C                 	db	12
  1156  007AB8  20                 	db	32
  1157  007AB9                     __end_of_show3_1:
  1158                           	opt stack 0
  1159  007AB9                     _drum_midi:
  1160                           	opt stack 0
  1161  007AB9  23                 	db	35
  1162  007ABA  24                 	db	36
  1163  007ABB  25                 	db	37
  1164  007ABC  26                 	db	38
  1165  007ABD  27                 	db	39
  1166  007ABE  28                 	db	40
  1167  007ABF  29                 	db	41
  1168  007AC0  00                 	db	0
  1169  007AC1  2A                 	db	42
  1170  007AC2  2B                 	db	43
  1171  007AC3  2C                 	db	44
  1172  007AC4  2D                 	db	45
  1173  007AC5  2E                 	db	46
  1174  007AC6  2F                 	db	47
  1175  007AC7  30                 	db	48
  1176  007AC8  00                 	db	0
  1177  007AC9  31                 	db	49
  1178  007ACA  32                 	db	50
  1179  007ACB  33                 	db	51
  1180  007ACC  34                 	db	52
  1181  007ACD  35                 	db	53
  1182  007ACE  36                 	db	54
  1183  007ACF  37                 	db	55
  1184  007AD0  00                 	db	0
  1185  007AD1  38                 	db	56
  1186  007AD2  39                 	db	57
  1187  007AD3  3A                 	db	58
  1188  007AD4  3B                 	db	59
  1189  007AD5  3C                 	db	60
  1190  007AD6  3D                 	db	61
  1191  007AD7  3E                 	db	62
  1192  007AD8  00                 	db	0
  1193  007AD9  3E                 	db	62
  1194  007ADA  3F                 	db	63
  1195  007ADB  40                 	db	64
  1196  007ADC  41                 	db	65
  1197  007ADD  42                 	db	66
  1198  007ADE  43                 	db	67
  1199  007ADF  44                 	db	68
  1200  007AE0  00                 	db	0
  1201  007AE1  45                 	db	69
  1202  007AE2  46                 	db	70
  1203  007AE3  47                 	db	71
  1204  007AE4  48                 	db	72
  1205  007AE5  49                 	db	73
  1206  007AE6  4A                 	db	74
  1207  007AE7  4B                 	db	75
  1208  007AE8  00                 	db	0
  1209  007AE9  4C                 	db	76
  1210  007AEA  4D                 	db	77
  1211  007AEB  4E                 	db	78
  1212  007AEC  4F                 	db	79
  1213  007AED  50                 	db	80
  1214  007AEE  51                 	db	81
  1215  007AEF  23                 	db	35
  1216  007AF0  00                 	db	0
  1217  007AF1  24                 	db	36
  1218  007AF2  25                 	db	37
  1219  007AF3  26                 	db	38
  1220  007AF4  27                 	db	39
  1221  007AF5  28                 	db	40
  1222  007AF6  29                 	db	41
  1223  007AF7  2A                 	db	42
  1224  007AF8  00                 	db	0
  1225  007AF9                     __end_of_drum_midi:
  1226                           	opt stack 0
  1227  007AF9                     _i2xy64:
  1228                           	opt stack 0
  1229  007AF9  00                 	db	0
  1230  007AFA  10                 	db	16
  1231  007AFB  20                 	db	32
  1232  007AFC  30                 	db	48
  1233  007AFD  01                 	db	1
  1234  007AFE  11                 	db	17
  1235  007AFF  21                 	db	33
  1236  007B00  31                 	db	49
  1237  007B01  02                 	db	2
  1238  007B02  12                 	db	18
  1239  007B03  22                 	db	34
  1240  007B04  32                 	db	50
  1241  007B05  03                 	db	3
  1242  007B06  13                 	db	19
  1243  007B07  23                 	db	35
  1244  007B08  33                 	db	51
  1245  007B09  40                 	db	64
  1246  007B0A  50                 	db	80
  1247  007B0B  60                 	db	96
  1248  007B0C  70                 	db	112
  1249  007B0D  41                 	db	65
  1250  007B0E  51                 	db	81
  1251  007B0F  61                 	db	97
  1252  007B10  71                 	db	113
  1253  007B11  42                 	db	66
  1254  007B12  52                 	db	82
  1255  007B13  62                 	db	98
  1256  007B14  72                 	db	114
  1257  007B15  43                 	db	67
  1258  007B16  53                 	db	83
  1259  007B17  63                 	db	99
  1260  007B18  73                 	db	115
  1261  007B19  04                 	db	4
  1262  007B1A  14                 	db	20
  1263  007B1B  24                 	db	36
  1264  007B1C  34                 	db	52
  1265  007B1D  05                 	db	5
  1266  007B1E  15                 	db	21
  1267  007B1F  25                 	db	37
  1268  007B20  35                 	db	53
  1269  007B21  06                 	db	6
  1270  007B22  16                 	db	22
  1271  007B23  26                 	db	38
  1272  007B24  36                 	db	54
  1273  007B25  07                 	db	7
  1274  007B26  17                 	db	23
  1275  007B27  27                 	db	39
  1276  007B28  37                 	db	55
  1277  007B29  44                 	db	68
  1278  007B2A  54                 	db	84
  1279  007B2B  64                 	db	100
  1280  007B2C  74                 	db	116
  1281  007B2D  45                 	db	69
  1282  007B2E  55                 	db	85
  1283  007B2F  65                 	db	101
  1284  007B30  75                 	db	117
  1285  007B31  46                 	db	70
  1286  007B32  56                 	db	86
  1287  007B33  66                 	db	102
  1288  007B34  76                 	db	118
  1289  007B35  47                 	db	71
  1290  007B36  57                 	db	87
  1291  007B37  67                 	db	103
  1292  007B38  77                 	db	119
  1293  007B39                     __end_of_i2xy64:
  1294                           	opt stack 0
  1295  007B39                     _show5:
  1296                           	opt stack 0
  1297  007B39  00                 	db	0
  1298  007B3A  01                 	db	1
  1299  007B3B  04                 	db	4
  1300  007B3C  05                 	db	5
  1301  007B3D  01                 	db	1
  1302  007B3E  02                 	db	2
  1303  007B3F  05                 	db	5
  1304  007B40  06                 	db	6
  1305  007B41  02                 	db	2
  1306  007B42  03                 	db	3
  1307  007B43  06                 	db	6
  1308  007B44  07                 	db	7
  1309  007B45  03                 	db	3
  1310  007B46  07                 	db	7
  1311  007B47  10                 	db	16
  1312  007B48  14                 	db	20
  1313  007B49  04                 	db	4
  1314  007B4A  05                 	db	5
  1315  007B4B  08                 	db	8
  1316  007B4C  09                 	db	9
  1317  007B4D  05                 	db	5
  1318  007B4E  06                 	db	6
  1319  007B4F  09                 	db	9
  1320  007B50  0A                 	db	10
  1321  007B51  06                 	db	6
  1322  007B52  07                 	db	7
  1323  007B53  0A                 	db	10
  1324  007B54  0B                 	db	11
  1325  007B55  07                 	db	7
  1326  007B56  0B                 	db	11
  1327  007B57  14                 	db	20
  1328  007B58  18                 	db	24
  1329  007B59  08                 	db	8
  1330  007B5A  09                 	db	9
  1331  007B5B  0C                 	db	12
  1332  007B5C  0D                 	db	13
  1333  007B5D  09                 	db	9
  1334  007B5E  0A                 	db	10
  1335  007B5F  0D                 	db	13
  1336  007B60  0E                 	db	14
  1337  007B61  0A                 	db	10
  1338  007B62  0B                 	db	11
  1339  007B63  0E                 	db	14
  1340  007B64  0F                 	db	15
  1341  007B65  0B                 	db	11
  1342  007B66  18                 	db	24
  1343  007B67  0F                 	db	15
  1344  007B68  1C                 	db	28
  1345  007B69  0C                 	db	12
  1346  007B6A  0D                 	db	13
  1347  007B6B  20                 	db	32
  1348  007B6C  21                 	db	33
  1349  007B6D  0D                 	db	13
  1350  007B6E  0E                 	db	14
  1351  007B6F  21                 	db	33
  1352  007B70  22                 	db	34
  1353  007B71  0E                 	db	14
  1354  007B72  0F                 	db	15
  1355  007B73  22                 	db	34
  1356  007B74  23                 	db	35
  1357  007B75  0F                 	db	15
  1358  007B76  1C                 	db	28
  1359  007B77  23                 	db	35
  1360  007B78  30                 	db	48
  1361  007B79                     __end_of_show5:
  1362                           	opt stack 0
  1363  007B79                     _show4_4:
  1364                           	opt stack 0
  1365  007B79  13                 	db	19
  1366  007B7A  2C                 	db	44
  1367  007B7B  64                 	db	100
  1368  007B7C  64                 	db	100
  1369  007B7D  64                 	db	100
  1370  007B7E  64                 	db	100
  1371  007B7F  64                 	db	100
  1372  007B80  64                 	db	100
  1373  007B81  12                 	db	18
  1374  007B82  17                 	db	23
  1375  007B83  28                 	db	40
  1376  007B84  2D                 	db	45
  1377  007B85  64                 	db	100
  1378  007B86  64                 	db	100
  1379  007B87  64                 	db	100
  1380  007B88  64                 	db	100
  1381  007B89  11                 	db	17
  1382  007B8A  16                 	db	22
  1383  007B8B  1B                 	db	27
  1384  007B8C  24                 	db	36
  1385  007B8D  29                 	db	41
  1386  007B8E  2E                 	db	46
  1387  007B8F  64                 	db	100
  1388  007B90  64                 	db	100
  1389  007B91  10                 	db	16
  1390  007B92  15                 	db	21
  1391  007B93  1A                 	db	26
  1392  007B94  1F                 	db	31
  1393  007B95  20                 	db	32
  1394  007B96  25                 	db	37
  1395  007B97  2A                 	db	42
  1396  007B98  2F                 	db	47
  1397  007B99  03                 	db	3
  1398  007B9A  14                 	db	20
  1399  007B9B  19                 	db	25
  1400  007B9C  1E                 	db	30
  1401  007B9D  21                 	db	33
  1402  007B9E  26                 	db	38
  1403  007B9F  2B                 	db	43
  1404  007BA0  0C                 	db	12
  1405  007BA1  02                 	db	2
  1406  007BA2  07                 	db	7
  1407  007BA3  18                 	db	24
  1408  007BA4  1D                 	db	29
  1409  007BA5  08                 	db	8
  1410  007BA6  0D                 	db	13
  1411  007BA7  22                 	db	34
  1412  007BA8  27                 	db	39
  1413  007BA9  01                 	db	1
  1414  007BAA  06                 	db	6
  1415  007BAB  0B                 	db	11
  1416  007BAC  1C                 	db	28
  1417  007BAD  04                 	db	4
  1418  007BAE  09                 	db	9
  1419  007BAF  0E                 	db	14
  1420  007BB0  23                 	db	35
  1421  007BB1  00                 	db	0
  1422  007BB2  05                 	db	5
  1423  007BB3  0A                 	db	10
  1424  007BB4  0F                 	db	15
  1425  007BB5  64                 	db	100
  1426  007BB6  64                 	db	100
  1427  007BB7  64                 	db	100
  1428  007BB8  64                 	db	100
  1429  007BB9                     __end_of_show4_4:
  1430                           	opt stack 0
  1431  007BB9                     _show4_1:
  1432                           	opt stack 0
  1433  007BB9  13                 	db	19
  1434  007BBA  2C                 	db	44
  1435  007BBB  64                 	db	100
  1436  007BBC  64                 	db	100
  1437  007BBD  64                 	db	100
  1438  007BBE  64                 	db	100
  1439  007BBF  64                 	db	100
  1440  007BC0  64                 	db	100
  1441  007BC1  12                 	db	18
  1442  007BC2  17                 	db	23
  1443  007BC3  28                 	db	40
  1444  007BC4  2D                 	db	45
  1445  007BC5  64                 	db	100
  1446  007BC6  64                 	db	100
  1447  007BC7  64                 	db	100
  1448  007BC8  64                 	db	100
  1449  007BC9  11                 	db	17
  1450  007BCA  16                 	db	22
  1451  007BCB  1B                 	db	27
  1452  007BCC  24                 	db	36
  1453  007BCD  29                 	db	41
  1454  007BCE  2E                 	db	46
  1455  007BCF  64                 	db	100
  1456  007BD0  64                 	db	100
  1457  007BD1  10                 	db	16
  1458  007BD2  15                 	db	21
  1459  007BD3  1A                 	db	26
  1460  007BD4  1F                 	db	31
  1461  007BD5  20                 	db	32
  1462  007BD6  25                 	db	37
  1463  007BD7  2A                 	db	42
  1464  007BD8  2F                 	db	47
  1465  007BD9  14                 	db	20
  1466  007BDA  19                 	db	25
  1467  007BDB  1E                 	db	30
  1468  007BDC  33                 	db	51
  1469  007BDD  21                 	db	33
  1470  007BDE  26                 	db	38
  1471  007BDF  2B                 	db	43
  1472  007BE0  3C                 	db	60
  1473  007BE1  18                 	db	24
  1474  007BE2  1D                 	db	29
  1475  007BE3  32                 	db	50
  1476  007BE4  37                 	db	55
  1477  007BE5  22                 	db	34
  1478  007BE6  27                 	db	39
  1479  007BE7  38                 	db	56
  1480  007BE8  3D                 	db	61
  1481  007BE9  1C                 	db	28
  1482  007BEA  31                 	db	49
  1483  007BEB  36                 	db	54
  1484  007BEC  3B                 	db	59
  1485  007BED  23                 	db	35
  1486  007BEE  34                 	db	52
  1487  007BEF  39                 	db	57
  1488  007BF0  3E                 	db	62
  1489  007BF1  30                 	db	48
  1490  007BF2  35                 	db	53
  1491  007BF3  3A                 	db	58
  1492  007BF4  3F                 	db	63
  1493  007BF5  64                 	db	100
  1494  007BF6  64                 	db	100
  1495  007BF7  64                 	db	100
  1496  007BF8  64                 	db	100
  1497  007BF9                     __end_of_show4_1:
  1498                           	opt stack 0
  1499  007BF9                     _Buttons:
  1500                           	opt stack 0
  1501  007BF9  00                 	db	0
  1502  007BFA  01                 	db	1
  1503  007BFB  02                 	db	2
  1504  007BFC  03                 	db	3
  1505  007BFD  10                 	db	16
  1506  007BFE  11                 	db	17
  1507  007BFF  12                 	db	18
  1508  007C00  13                 	db	19
  1509  007C01  04                 	db	4
  1510  007C02  05                 	db	5
  1511  007C03  06                 	db	6
  1512  007C04  07                 	db	7
  1513  007C05  14                 	db	20
  1514  007C06  15                 	db	21
  1515  007C07  16                 	db	22
  1516  007C08  17                 	db	23
  1517  007C09  08                 	db	8
  1518  007C0A  09                 	db	9
  1519  007C0B  0A                 	db	10
  1520  007C0C  0B                 	db	11
  1521  007C0D  18                 	db	24
  1522  007C0E  19                 	db	25
  1523  007C0F  1A                 	db	26
  1524  007C10  1B                 	db	27
  1525  007C11  0C                 	db	12
  1526  007C12  0D                 	db	13
  1527  007C13  0E                 	db	14
  1528  007C14  0F                 	db	15
  1529  007C15  1C                 	db	28
  1530  007C16  1D                 	db	29
  1531  007C17  1E                 	db	30
  1532  007C18  1F                 	db	31
  1533  007C19  20                 	db	32
  1534  007C1A  21                 	db	33
  1535  007C1B  22                 	db	34
  1536  007C1C  23                 	db	35
  1537  007C1D  30                 	db	48
  1538  007C1E  31                 	db	49
  1539  007C1F  32                 	db	50
  1540  007C20  33                 	db	51
  1541  007C21  24                 	db	36
  1542  007C22  25                 	db	37
  1543  007C23  26                 	db	38
  1544  007C24  27                 	db	39
  1545  007C25  34                 	db	52
  1546  007C26  35                 	db	53
  1547  007C27  36                 	db	54
  1548  007C28  37                 	db	55
  1549  007C29  28                 	db	40
  1550  007C2A  29                 	db	41
  1551  007C2B  2A                 	db	42
  1552  007C2C  2B                 	db	43
  1553  007C2D  38                 	db	56
  1554  007C2E  39                 	db	57
  1555  007C2F  3A                 	db	58
  1556  007C30  3B                 	db	59
  1557  007C31  2C                 	db	44
  1558  007C32  2D                 	db	45
  1559  007C33  2E                 	db	46
  1560  007C34  2F                 	db	47
  1561  007C35  3C                 	db	60
  1562  007C36  3D                 	db	61
  1563  007C37  3E                 	db	62
  1564  007C38  3F                 	db	63
  1565  007C39                     __end_of_Buttons:
  1566                           	opt stack 0
  1567  007C39                     _show3_2:
  1568                           	opt stack 0
  1569  007C39  05                 	db	5
  1570  007C3A  06                 	db	6
  1571  007C3B  07                 	db	7
  1572  007C3C  2B                 	db	43
  1573  007C3D  38                 	db	56
  1574  007C3E  39                 	db	57
  1575  007C3F  06                 	db	6
  1576  007C40  07                 	db	7
  1577  007C41  14                 	db	20
  1578  007C42  2A                 	db	42
  1579  007C43  2B                 	db	43
  1580  007C44  38                 	db	56
  1581  007C45  07                 	db	7
  1582  007C46  14                 	db	20
  1583  007C47  15                 	db	21
  1584  007C48  29                 	db	41
  1585  007C49  2A                 	db	42
  1586  007C4A  2B                 	db	43
  1587  007C4B  14                 	db	20
  1588  007C4C  15                 	db	21
  1589  007C4D  19                 	db	25
  1590  007C4E  25                 	db	37
  1591  007C4F  29                 	db	41
  1592  007C50  2A                 	db	42
  1593  007C51  15                 	db	21
  1594  007C52  19                 	db	25
  1595  007C53  1D                 	db	29
  1596  007C54  21                 	db	33
  1597  007C55  25                 	db	37
  1598  007C56  29                 	db	41
  1599  007C57  19                 	db	25
  1600  007C58  1D                 	db	29
  1601  007C59  31                 	db	49
  1602  007C5A  0D                 	db	13
  1603  007C5B  21                 	db	33
  1604  007C5C  25                 	db	37
  1605  007C5D  1D                 	db	29
  1606  007C5E  31                 	db	49
  1607  007C5F  35                 	db	53
  1608  007C60  09                 	db	9
  1609  007C61  0D                 	db	13
  1610  007C62  21                 	db	33
  1611  007C63                     __end_of_show3_2:
  1612                           	opt stack 0
  1613  007C63                     _show0_2:
  1614                           	opt stack 0
  1615  007C63  00                 	db	0
  1616  007C64  04                 	db	4
  1617  007C65  08                 	db	8
  1618  007C66  0C                 	db	12
  1619  007C67  20                 	db	32
  1620  007C68  24                 	db	36
  1621  007C69  28                 	db	40
  1622  007C6A  2C                 	db	44
  1623  007C6B  29                 	db	41
  1624  007C6C  25                 	db	37
  1625  007C6D  21                 	db	33
  1626  007C6E  0D                 	db	13
  1627  007C6F  09                 	db	9
  1628  007C70  05                 	db	5
  1629  007C71  0A                 	db	10
  1630  007C72  0E                 	db	14
  1631  007C73  22                 	db	34
  1632  007C74  26                 	db	38
  1633  007C75  23                 	db	35
  1634  007C76  0F                 	db	15
  1635  007C77  1C                 	db	28
  1636  007C78  30                 	db	48
  1637  007C79  35                 	db	53
  1638  007C7A  31                 	db	49
  1639  007C7B  1D                 	db	29
  1640  007C7C  19                 	db	25
  1641  007C7D  16                 	db	22
  1642  007C7E  1A                 	db	26
  1643  007C7F  1E                 	db	30
  1644  007C80  32                 	db	50
  1645  007C81  36                 	db	54
  1646  007C82  3A                 	db	58
  1647  007C83  3F                 	db	63
  1648  007C84  3B                 	db	59
  1649  007C85  37                 	db	55
  1650  007C86  33                 	db	51
  1651  007C87  1F                 	db	31
  1652  007C88  1B                 	db	27
  1653  007C89  17                 	db	23
  1654  007C8A  13                 	db	19
  1655  007C8B                     __end_of_show0_2:
  1656                           	opt stack 0
  1657  007C8B                     _show0_1:
  1658                           	opt stack 0
  1659  007C8B  00                 	db	0
  1660  007C8C  01                 	db	1
  1661  007C8D  02                 	db	2
  1662  007C8E  03                 	db	3
  1663  007C8F  10                 	db	16
  1664  007C90  11                 	db	17
  1665  007C91  12                 	db	18
  1666  007C92  13                 	db	19
  1667  007C93  16                 	db	22
  1668  007C94  15                 	db	21
  1669  007C95  14                 	db	20
  1670  007C96  07                 	db	7
  1671  007C97  06                 	db	6
  1672  007C98  05                 	db	5
  1673  007C99  0A                 	db	10
  1674  007C9A  0B                 	db	11
  1675  007C9B  18                 	db	24
  1676  007C9C  19                 	db	25
  1677  007C9D  1C                 	db	28
  1678  007C9E  0F                 	db	15
  1679  007C9F  23                 	db	35
  1680  007CA0  30                 	db	48
  1681  007CA1  35                 	db	53
  1682  007CA2  34                 	db	52
  1683  007CA3  27                 	db	39
  1684  007CA4  26                 	db	38
  1685  007CA5  29                 	db	41
  1686  007CA6  2A                 	db	42
  1687  007CA7  2B                 	db	43
  1688  007CA8  38                 	db	56
  1689  007CA9  39                 	db	57
  1690  007CAA  3A                 	db	58
  1691  007CAB  3F                 	db	63
  1692  007CAC  3E                 	db	62
  1693  007CAD  3D                 	db	61
  1694  007CAE  3C                 	db	60
  1695  007CAF  2F                 	db	47
  1696  007CB0  2E                 	db	46
  1697  007CB1  2D                 	db	45
  1698  007CB2  2C                 	db	44
  1699  007CB3                     __end_of_show0_1:
  1700                           	opt stack 0
  1701  007CB3                     _horizental_flash:
  1702                           	opt stack 0
  1703  007CB3  00                 	db	0
  1704  007CB4  01                 	db	1
  1705  007CB5  02                 	db	2
  1706  007CB6  01                 	db	1
  1707  007CB7  02                 	db	2
  1708  007CB8  03                 	db	3
  1709  007CB9  02                 	db	2
  1710  007CBA  03                 	db	3
  1711  007CBB  10                 	db	16
  1712  007CBC  03                 	db	3
  1713  007CBD  10                 	db	16
  1714  007CBE  11                 	db	17
  1715  007CBF  10                 	db	16
  1716  007CC0  11                 	db	17
  1717  007CC1  12                 	db	18
  1718  007CC2  11                 	db	17
  1719  007CC3  12                 	db	18
  1720  007CC4  13                 	db	19
  1721  007CC5  12                 	db	18
  1722  007CC6  13                 	db	19
  1723  007CC7  64                 	db	100
  1724  007CC8  13                 	db	19
  1725  007CC9  64                 	db	100
  1726  007CCA  64                 	db	100
  1727  007CCB                     __end_of_horizental_flash:
  1728                           	opt stack 0
  1729  007CCB                     _show3_3:
  1730                           	opt stack 0
  1731  007CCB  0A                 	db	10
  1732  007CCC  0B                 	db	11
  1733  007CCD  27                 	db	39
  1734  007CCE  34                 	db	52
  1735  007CCF  0B                 	db	11
  1736  007CD0  18                 	db	24
  1737  007CD1  26                 	db	38
  1738  007CD2  27                 	db	39
  1739  007CD3  18                 	db	24
  1740  007CD4  1C                 	db	28
  1741  007CD5  22                 	db	34
  1742  007CD6  26                 	db	38
  1743  007CD7  1C                 	db	28
  1744  007CD8  30                 	db	48
  1745  007CD9  0E                 	db	14
  1746  007CDA  22                 	db	34
  1747  007CDB  0A                 	db	10
  1748  007CDC  0E                 	db	14
  1749  007CDD  30                 	db	48
  1750  007CDE  34                 	db	52
  1751  007CDF                     __end_of_show3_3:
  1752                           	opt stack 0
  1753  007CDF                     _buttonLUT:
  1754                           	opt stack 0
  1755  007CDF  07                 	db	7
  1756  007CE0  04                 	db	4
  1757  007CE1  02                 	db	2
  1758  007CE2  22                 	db	34
  1759  007CE3  05                 	db	5
  1760  007CE4  06                 	db	6
  1761  007CE5  00                 	db	0
  1762  007CE6  01                 	db	1
  1763  007CE7  03                 	db	3
  1764  007CE8  10                 	db	16
  1765  007CE9  30                 	db	48
  1766  007CEA  21                 	db	33
  1767  007CEB  13                 	db	19
  1768  007CEC  12                 	db	18
  1769  007CED  11                 	db	17
  1770  007CEE  31                 	db	49
  1771  007CEF                     __end_of_buttonLUT:
  1772                           	opt stack 0
  1773  007CEF                     _ledLUT:
  1774                           	opt stack 0
  1775  007CEF  3A                 	db	58
  1776  007CF0  37                 	db	55
  1777  007CF1  35                 	db	53
  1778  007CF2  34                 	db	52
  1779  007CF3  28                 	db	40
  1780  007CF4  29                 	db	41
  1781  007CF5  23                 	db	35
  1782  007CF6  24                 	db	36
  1783  007CF7  16                 	db	22
  1784  007CF8  1B                 	db	27
  1785  007CF9  11                 	db	17
  1786  007CFA  10                 	db	16
  1787  007CFB  0E                 	db	14
  1788  007CFC  0D                 	db	13
  1789  007CFD  0C                 	db	12
  1790  007CFE  02                 	db	2
  1791  007CFF                     __end_of_ledLUT:
  1792                           	opt stack 0
  1793  0000                     _TRISCbits	set	3988
  1794  0000                     _PIR2bits	set	4001
  1795  0000                     _SSPSTAT	set	4039
  1796  0000                     _SSPCON1bits	set	4038
  1797  0000                     _SSPBUF	set	4041
  1798  0000                     _SSPSTATbits	set	4039
  1799  0000                     _SSPCON2	set	4037
  1800  0000                     _SSPCON1	set	4038
  1801  0000                     _SSPCON2bits	set	4037
  1802  0000                     _TXREG	set	4013
  1803  0000                     _PIR1bits	set	3998
  1804  0000                     _RCSTAbits	set	4011
  1805  0000                     _SPBRG	set	4015
  1806  0000                     _TXSTAbits	set	4012
  1807  0000                     _BAUDCONbits	set	4024
  1808  0000                     _SSPADD	set	4040
  1809  0000                     _OSCCONbits	set	4051
  1810  0000                     _TRMT	set	32097
  1811                           
  1812                           ; #config settings
  1813  007CFF  00                 	db	0	; dummy byte at the end
  1814  0000                     
  1815                           	psect	cinit
  1816  00447A                     __pcinit:
  1817                           	opt stack 0
  1818  00447A                     start_initialization:
  1819                           	opt stack 0
  1820  00447A                     __initialization:
  1821                           	opt stack 0
  1822                           
  1823                           ; Initialize objects allocated to COMRAM (2 bytes)
  1824                           ; load TBLPTR registers with __pidataCOMRAM
  1825  00447A  0E4C               	movlw	low __pidataCOMRAM
  1826  00447C  6EF6               	movwf	tblptrl,c
  1827  00447E  0E43               	movlw	high __pidataCOMRAM
  1828  004480  6EF7               	movwf	tblptrh,c
  1829  004482  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1830  004484  6EF8               	movwf	tblptru,c
  1831  004486  0009               	tblrd		*+	;fetch initializer
  1832  004488  CFF5 F07C          	movff	tablat,__pdataCOMRAM
  1833  00448C  0009               	tblrd		*+	;fetch initializer
  1834  00448E  CFF5 F07D          	movff	tablat,__pdataCOMRAM+1
  1835                           
  1836                           ; Clear objects allocated to BANK1 (128 bytes)
  1837  004492  EE01  F000         	lfsr	0,__pbssBANK1
  1838  004496  0E80               	movlw	128
  1839  004498                     clear_0:
  1840  004498  6AEE               	clrf	postinc0,c
  1841  00449A  06E8               	decf	wreg,f,c
  1842  00449C  E1FD               	bnz	clear_0
  1843                           
  1844                           ; Clear objects allocated to BANK0 (116 bytes)
  1845  00449E  EE00  F080         	lfsr	0,__pbssBANK0
  1846  0044A2  0E74               	movlw	116
  1847  0044A4                     clear_1:
  1848  0044A4  6AEE               	clrf	postinc0,c
  1849  0044A6  06E8               	decf	wreg,f,c
  1850  0044A8  E1FD               	bnz	clear_1
  1851                           
  1852                           ; Clear objects allocated to COMRAM (66 bytes)
  1853  0044AA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1854  0044AE  0E42               	movlw	66
  1855  0044B0                     clear_2:
  1856  0044B0  6AEE               	clrf	postinc0,c
  1857  0044B2  06E8               	decf	wreg,f,c
  1858  0044B4  E1FD               	bnz	clear_2
  1859  0044B6                     end_of_initialization:
  1860                           	opt stack 0
  1861  0044B6                     __end_of__initialization:
  1862                           	opt stack 0
  1863  0044B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1864  0044B8  6EF8               	movwf	tblptru,c
  1865  0044BA  0100               	movlb	0
  1866  0044BC  EF0A  F037         	goto	_main	;jump to C main() function
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           postinc0	equ	0xFEE
  1872                           wreg	equ	0xFE8
  1873                           
  1874                           	psect	bssCOMRAM
  1875  000001                     __pbssCOMRAM:
  1876                           	opt stack 0
  1877  000001                     _temp:
  1878                           	opt stack 0
  1879  000001                     	ds	64
  1880  000041                     _count:
  1881                           	opt stack 0
  1882  000041                     	ds	2
  1883                           tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           
  1890                           	psect	dataCOMRAM
  1891  00007C                     __pdataCOMRAM:
  1892                           	opt stack 0
  1893  00007C                     _play_mode:
  1894                           	opt stack 0
  1895  00007C                     	ds	2
  1896                           tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           postinc0	equ	0xFEE
  1901                           wreg	equ	0xFE8
  1902                           
  1903                           	psect	bssBANK0
  1904  000080                     __pbssBANK0:
  1905                           	opt stack 0
  1906  000080                     _matrices:
  1907                           	opt stack 0
  1908  000080                     	ds	116
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           
  1916                           	psect	bssBANK1
  1917  000100                     __pbssBANK1:
  1918                           	opt stack 0
  1919  000100                     _press:
  1920                           	opt stack 0
  1921  000100                     	ds	128
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           
  1929                           	psect	cstackCOMRAM
  1930  000043                     __pcstackCOMRAM:
  1931                           	opt stack 0
  1932  000043                     ??_MyIdleI2C:
  1933  000043                     ?___wmul:
  1934                           	opt stack 0
  1935  000043                     send_note@two:
  1936                           	opt stack 0
  1937  000043                     MyOpenI2C@slew:
  1938                           	opt stack 0
  1939  000043                     ___wmul@multiplier:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x0
  1943  000043                     	ds	1
  1944  000044                     send_note@three:
  1945                           	opt stack 0
  1946  000044                     MyWriteI2C@data_out:
  1947                           	opt stack 0
  1948  000044                     MyOpenI2C@sync_mode:
  1949                           	opt stack 0
  1950                           
  1951                           ; 1 bytes @ 0x1
  1952  000044                     	ds	1
  1953  000045                     send_note@one:
  1954                           	opt stack 0
  1955  000045                     write@data:
  1956                           	opt stack 0
  1957  000045                     ___wmul@multiplicand:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x2
  1961  000045                     	ds	1
  1962  000046                     write@data_out:
  1963                           	opt stack 0
  1964                           
  1965                           ; 1 bytes @ 0x3
  1966  000046                     	ds	1
  1967  000047                     write@status:
  1968                           	opt stack 0
  1969  000047                     ___wmul@product:
  1970                           	opt stack 0
  1971                           
  1972                           ; 2 bytes @ 0x4
  1973  000047                     	ds	2
  1974  000049                     ??_set_led:
  1975  000049                     ??_write_display:
  1976  000049                     ??_clr_led:
  1977  000049                     ??_is_key_pressed:
  1978  000049                     ??_was_key_pressed:
  1979  000049                     MygetsI2C@rdptr:
  1980                           	opt stack 0
  1981  000049                     memcpy@d1:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x6
  1985  000049                     	ds	2
  1986  00004B                     MygetsI2C@length:
  1987                           	opt stack 0
  1988  00004B                     memcpy@s1:
  1989                           	opt stack 0
  1990                           
  1991                           ; 2 bytes @ 0x8
  1992  00004B                     	ds	1
  1993  00004C                     
  1994                           ; 1 bytes @ 0x9
  1995  00004C                     	ds	1
  1996  00004D                     memcpy@n:
  1997                           	opt stack 0
  1998                           
  1999                           ; 2 bytes @ 0xA
  2000  00004D                     	ds	2
  2001  00004F                     write_display@j:
  2002                           	opt stack 0
  2003  00004F                     memcpy@d:
  2004                           	opt stack 0
  2005                           
  2006                           ; 2 bytes @ 0xC
  2007  00004F                     	ds	2
  2008  000051                     write_display@i:
  2009                           	opt stack 0
  2010  000051                     set_led@matrix:
  2011                           	opt stack 0
  2012  000051                     is_key_pressed@matrix:
  2013                           	opt stack 0
  2014  000051                     was_key_pressed@matrix:
  2015                           	opt stack 0
  2016  000051                     memcpy@s:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0xE
  2020  000051                     	ds	2
  2021  000053                     memcpy@tmp:
  2022                           	opt stack 0
  2023  000053                     clr_led@matrix:
  2024                           	opt stack 0
  2025  000053                     set_led@led:
  2026                           	opt stack 0
  2027  000053                     is_key_pressed@led:
  2028                           	opt stack 0
  2029  000053                     was_key_pressed@led:
  2030                           	opt stack 0
  2031                           
  2032                           ; 2 bytes @ 0x10
  2033  000053                     	ds	1
  2034  000054                     ??_read_switch:
  2035                           
  2036                           ; 1 bytes @ 0x11
  2037  000054                     	ds	1
  2038  000055                     set_led@i:
  2039                           	opt stack 0
  2040  000055                     is_key_pressed@k:
  2041                           	opt stack 0
  2042  000055                     was_key_pressed@k:
  2043                           	opt stack 0
  2044  000055                     clr_led@led:
  2045                           	opt stack 0
  2046                           
  2047                           ; 2 bytes @ 0x12
  2048  000055                     	ds	2
  2049  000057                     clr_led@i:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0x14
  2053  000057                     	ds	1
  2054  000058                     ??_animation3:
  2055  000058                     ??_animation7:
  2056  000058                     animation0@n:
  2057                           	opt stack 0
  2058  000058                     animation1@n:
  2059                           	opt stack 0
  2060  000058                     animation2@n:
  2061                           	opt stack 0
  2062  000058                     animation4@h:
  2063                           	opt stack 0
  2064  000058                     animation5@n:
  2065                           	opt stack 0
  2066  000058                     animation6@n:
  2067                           	opt stack 0
  2068                           
  2069                           ; 1 bytes @ 0x15
  2070  000058                     	ds	1
  2071  000059                     ??_animation0:
  2072  000059                     ??_animation1:
  2073  000059                     ??_animation4:
  2074  000059                     ??_animation6:
  2075  000059                     animation2@h:
  2076                           	opt stack 0
  2077  000059                     animation5@h:
  2078                           	opt stack 0
  2079                           
  2080                           ; 1 bytes @ 0x16
  2081  000059                     	ds	1
  2082  00005A                     ??_animation2:
  2083  00005A                     ??_animation5:
  2084  00005A                     animation7@h:
  2085                           	opt stack 0
  2086                           
  2087                           ; 1 bytes @ 0x17
  2088  00005A                     	ds	1
  2089  00005B                     animation4@m:
  2090                           	opt stack 0
  2091  00005B                     animation0@x:
  2092                           	opt stack 0
  2093  00005B                     animation7@i:
  2094                           	opt stack 0
  2095                           
  2096                           ; 2 bytes @ 0x18
  2097  00005B                     	ds	1
  2098  00005C                     animation1@m:
  2099                           	opt stack 0
  2100  00005C                     animation3@m:
  2101                           	opt stack 0
  2102  00005C                     animation4@i:
  2103                           	opt stack 0
  2104  00005C                     animation5@m:
  2105                           	opt stack 0
  2106                           
  2107                           ; 1 bytes @ 0x19
  2108  00005C                     	ds	1
  2109  00005D                     animation0@m:
  2110                           	opt stack 0
  2111  00005D                     animation1@x:
  2112                           	opt stack 0
  2113  00005D                     animation4@j:
  2114                           	opt stack 0
  2115  00005D                     animation5@j:
  2116                           	opt stack 0
  2117  00005D                     animation6@x:
  2118                           	opt stack 0
  2119  00005D                     animation3@i:
  2120                           	opt stack 0
  2121  00005D                     animation7@j:
  2122                           	opt stack 0
  2123                           
  2124                           ; 2 bytes @ 0x1A
  2125  00005D                     	ds	1
  2126  00005E                     animation0@j:
  2127                           	opt stack 0
  2128  00005E                     animation1@i:
  2129                           	opt stack 0
  2130  00005E                     animation5@i:
  2131                           	opt stack 0
  2132  00005E                     animation2@col:
  2133                           	opt stack 0
  2134  00005E                     animation6@a:
  2135                           	opt stack 0
  2136  00005E                     read_switch@i:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x1B
  2140  00005E                     	ds	1
  2141  00005F                     animation0@i:
  2142                           	opt stack 0
  2143  00005F                     animation1@j:
  2144                           	opt stack 0
  2145  00005F                     animation5@x:
  2146                           	opt stack 0
  2147  00005F                     animation3@j:
  2148                           	opt stack 0
  2149                           
  2150                           ; 2 bytes @ 0x1C
  2151  00005F                     	ds	1
  2152  000060                     animation2@m:
  2153                           	opt stack 0
  2154  000060                     animation6@b:
  2155                           	opt stack 0
  2156  000060                     read_switch@j:
  2157                           	opt stack 0
  2158                           
  2159                           ; 2 bytes @ 0x1D
  2160  000060                     	ds	1
  2161  000061                     animation2@row:
  2162                           	opt stack 0
  2163                           
  2164                           ; 2 bytes @ 0x1E
  2165  000061                     	ds	1
  2166  000062                     animation6@c:
  2167                           	opt stack 0
  2168                           
  2169                           ; 2 bytes @ 0x1F
  2170  000062                     	ds	1
  2171  000063                     animation2@x:
  2172                           	opt stack 0
  2173                           
  2174                           ; 2 bytes @ 0x20
  2175  000063                     	ds	1
  2176  000064                     animation6@d:
  2177                           	opt stack 0
  2178                           
  2179                           ; 2 bytes @ 0x21
  2180  000064                     	ds	1
  2181  000065                     animation2@i:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x22
  2185  000065                     	ds	1
  2186  000066                     animation6@m:
  2187                           	opt stack 0
  2188                           
  2189                           ; 1 bytes @ 0x23
  2190  000066                     	ds	1
  2191  000067                     animation2@j:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x24
  2195  000067                     	ds	2
  2196  000069                     ??_main:
  2197                           
  2198                           ; 1 bytes @ 0x26
  2199  000069                     	ds	4
  2200  00006D                     main@x:
  2201                           	opt stack 0
  2202                           
  2203                           ; 1 bytes @ 0x2A
  2204  00006D                     	ds	1
  2205  00006E                     main@y:
  2206                           	opt stack 0
  2207                           
  2208                           ; 1 bytes @ 0x2B
  2209  00006E                     	ds	1
  2210  00006F                     main@sync_mode:
  2211                           	opt stack 0
  2212                           
  2213                           ; 1 bytes @ 0x2C
  2214  00006F                     	ds	1
  2215  000070                     main@slew:
  2216                           	opt stack 0
  2217                           
  2218                           ; 1 bytes @ 0x2D
  2219  000070                     	ds	1
  2220  000071                     main@note:
  2221                           	opt stack 0
  2222                           
  2223                           ; 1 bytes @ 0x2E
  2224  000071                     	ds	1
  2225  000072                     main@k:
  2226                           	opt stack 0
  2227                           
  2228                           ; 1 bytes @ 0x2F
  2229  000072                     	ds	1
  2230  000073                     main@n:
  2231                           	opt stack 0
  2232                           
  2233                           ; 1 bytes @ 0x30
  2234  000073                     	ds	1
  2235  000074                     main@rightbutton:
  2236                           	opt stack 0
  2237                           
  2238                           ; 1 bytes @ 0x31
  2239  000074                     	ds	1
  2240  000075                     main@column:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0x32
  2244  000075                     	ds	1
  2245  000076                     main@m:
  2246                           	opt stack 0
  2247                           
  2248                           ; 1 bytes @ 0x33
  2249  000076                     	ds	1
  2250  000077                     main@j:
  2251                           	opt stack 0
  2252                           
  2253                           ; 2 bytes @ 0x34
  2254  000077                     	ds	2
  2255  000079                     main@h:
  2256                           	opt stack 0
  2257                           
  2258                           ; 1 bytes @ 0x36
  2259  000079                     	ds	1
  2260  00007A                     main@i:
  2261                           	opt stack 0
  2262                           
  2263                           ; 2 bytes @ 0x37
  2264  00007A                     	ds	2
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           
  2272 ;;
  2273 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2274 ;;
  2275 ;; *************** function _main *****************
  2276 ;; Defined at:
  2277 ;;		line 409 in file "newmain.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  note            1   46[COMRAM] unsigned char 
  2282 ;;  y               1   43[COMRAM] unsigned char 
  2283 ;;  x               1   42[COMRAM] unsigned char 
  2284 ;;  i               2   55[COMRAM] int 
  2285 ;;  j               2   52[COMRAM] int 
  2286 ;;  h               1   54[COMRAM] unsigned char 
  2287 ;;  m               1   51[COMRAM] unsigned char 
  2288 ;;  column          1   50[COMRAM] unsigned char 
  2289 ;;  rightbutton     1   49[COMRAM] unsigned char 
  2290 ;;  n               1   48[COMRAM] unsigned char 
  2291 ;;  k               1   47[COMRAM] unsigned char 
  2292 ;;  slew            1   45[COMRAM] unsigned char 
  2293 ;;  sync_mode       1   44[COMRAM] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2303 ;;      Params:         0       0       0       0       0       0       0
  2304 ;;      Locals:        15       0       0       0       0       0       0
  2305 ;;      Temps:          4       0       0       0       0       0       0
  2306 ;;      Totals:        19       0       0       0       0       0       0
  2307 ;;Total ram usage:       19 bytes
  2308 ;; Hardware stack levels required when called:    5
  2309 ;; This function calls:
  2310 ;;		_MyCloseI2C
  2311 ;;		_MyIdleI2C
  2312 ;;		_MyOpenI2C
  2313 ;;		_MyStartI2C
  2314 ;;		_MyStopI2C
  2315 ;;		_Myusartinit
  2316 ;;		___wmul
  2317 ;;		_animation0
  2318 ;;		_animation1
  2319 ;;		_animation2
  2320 ;;		_animation3
  2321 ;;		_animation4
  2322 ;;		_animation5
  2323 ;;		_animation6
  2324 ;;		_animation7
  2325 ;;		_clr_led
  2326 ;;		_is_key_pressed
  2327 ;;		_read_switch
  2328 ;;		_send_note
  2329 ;;		_set_led
  2330 ;;		_was_key_pressed
  2331 ;;		_write
  2332 ;;		_write_display
  2333 ;; This function is called by:
  2334 ;;		Startup code after reset
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text0
  2339  006E14                     __ptext0:
  2340                           	opt stack 0
  2341  006E14                     _main:
  2342                           	opt stack 26
  2343                           
  2344                           ;newmain.c: 411: unsigned char sync_mode = 0, slew = 0;
  2345                           
  2346                           ;incstack = 0
  2347  006E14  0E00               	movlw	0
  2348  006E16  6E6F               	movwf	main@sync_mode,c
  2349  006E18  0E00               	movlw	0
  2350  006E1A  6E70               	movwf	main@slew,c
  2351                           
  2352                           ;newmain.c: 412: int i, j;
  2353                           ;newmain.c: 413: matrices[0].address = 0x70 << 1;
  2354  006E1C  0EE0               	movlw	224
  2355  006E1E  0100               	movlb	0	; () banked
  2356  006E20  6F80               	movwf	_matrices& (0+255),b
  2357                           
  2358                           ;newmain.c: 414: matrices[1].address = 0x71 << 1;
  2359  006E22  0EE2               	movlw	226
  2360  006E24  6F9D               	movwf	(_matrices+29)& (0+255),b
  2361                           
  2362                           ;newmain.c: 415: matrices[2].address = 0x72 << 1;
  2363  006E26  0EE4               	movlw	228
  2364  006E28  6FBA               	movwf	(_matrices+58)& (0+255),b
  2365                           
  2366                           ;newmain.c: 416: matrices[3].address = 0x73 << 1;
  2367  006E2A  0EE6               	movlw	230
  2368  006E2C  6FD7               	movwf	(_matrices+87)& (0+255),b
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;newmain.c: 418: Myusartinit();
  2372  006E2E  ECB9  F021         	call	_Myusartinit	;wreg free
  2373                           
  2374                           ;newmain.c: 420: MyCloseI2C();
  2375  006E32  ECA7  F021         	call	_MyCloseI2C	;wreg free
  2376                           
  2377                           ;newmain.c: 422: sync_mode = 0b00001000;
  2378  006E36  0E08               	movlw	8
  2379  006E38  6E6F               	movwf	main@sync_mode,c
  2380                           
  2381                           ;newmain.c: 423: slew = 0b10000000;
  2382  006E3A  0E80               	movlw	128
  2383  006E3C  6E70               	movwf	main@slew,c
  2384                           
  2385                           ;newmain.c: 424: MyOpenI2C(sync_mode, slew);
  2386  006E3E  C070  F043         	movff	main@slew,MyOpenI2C@slew
  2387  006E42  506F               	movf	main@sync_mode,w,c
  2388  006E44  ECD1  F021         	call	_MyOpenI2C
  2389                           
  2390                           ;newmain.c: 426: OSCCONbits.IRCF = 6;
  2391  006E48  50D3               	movf	4051,w,c	;volatile
  2392  006E4A  0B8F               	andlw	-113
  2393  006E4C  0960               	iorlw	96
  2394  006E4E  6ED3               	movwf	4051,c	;volatile
  2395                           
  2396                           ;newmain.c: 427: SSPADD = 9;
  2397  006E50  0E09               	movlw	9
  2398  006E52  6EC8               	movwf	4040,c	;volatile
  2399                           
  2400                           ;newmain.c: 429: _delay((unsigned long)((1)*(4000000/4000.0)));
  2401  006E54  0EC8               	movlw	200
  2402  006E56                     u6937:
  2403  006E56  D000               	nop2	
  2404  006E58  2EE8               	decfsz	wreg,f,c
  2405  006E5A  D7FD               	bra	u6937
  2406                           
  2407                           ;newmain.c: 430: for (i = 0; i < 4; i++) {
  2408  006E5C  0E00               	movlw	0
  2409  006E5E  6E7B               	movwf	main@i+1,c
  2410  006E60  0E00               	movlw	0
  2411  006E62  6E7A               	movwf	main@i,c
  2412  006E64                     l4720:
  2413  006E64  BE7B               	btfsc	main@i+1,7,c
  2414  006E66  D006               	goto	l143
  2415  006E68  507B               	movf	main@i+1,w,c
  2416  006E6A  E14B               	bnz	l4758
  2417  006E6C  0E04               	movlw	4
  2418  006E6E  5C7A               	subwf	main@i,w,c
  2419  006E70  B0D8               	btfsc	status,0,c
  2420  006E72  D047               	goto	u6200
  2421  006E74                     l143:
  2422                           
  2423                           ;newmain.c: 432: MyIdleI2C();
  2424  006E74  ECB0  F021         	call	_MyIdleI2C	;wreg free
  2425                           
  2426                           ;newmain.c: 433: MyStartI2C();
  2427  006E78  ECA9  F021         	call	_MyStartI2C	;wreg free
  2428                           
  2429                           ;newmain.c: 434: MyIdleI2C();
  2430  006E7C  ECB0  F021         	call	_MyIdleI2C	;wreg free
  2431                           
  2432                           ;newmain.c: 435: write(matrices[i].address | 0x00);
  2433  006E80  C07A  F043         	movff	main@i,___wmul@multiplier
  2434  006E84  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  2435  006E88  0E00               	movlw	0
  2436  006E8A  6E46               	movwf	___wmul@multiplicand+1,c
  2437  006E8C  0E1D               	movlw	29
  2438  006E8E  6E45               	movwf	___wmul@multiplicand,c
  2439  006E90  ECF1  F021         	call	___wmul	;wreg free
  2440  006E94  0E80               	movlw	low _matrices
  2441  006E96  2443               	addwf	?___wmul,w,c
  2442  006E98  6ED9               	movwf	fsr2l,c
  2443  006E9A  0E00               	movlw	high _matrices
  2444  006E9C  2044               	addwfc	?___wmul+1,w,c
  2445  006E9E  6EDA               	movwf	fsr2h,c
  2446  006EA0  50DF               	movf	indf2,w,c
  2447  006EA2  EC04  F022         	call	_write
  2448                           
  2449                           ;newmain.c: 436: MyIdleI2C();
  2450  006EA6  ECB0  F021         	call	_MyIdleI2C	;wreg free
  2451                           
  2452                           ;newmain.c: 437: write(0x21);
  2453  006EAA  0E21               	movlw	33
  2454  006EAC  EC04  F022         	call	_write
  2455                           
  2456                           ;newmain.c: 438: MyIdleI2C();
  2457  006EB0  ECB0  F021         	call	_MyIdleI2C	;wreg free
  2458                           
  2459                           ;newmain.c: 439: MyStopI2C();
  2460  006EB4  ECAB  F021         	call	_MyStopI2C	;wreg free
  2461                           
  2462                           ;newmain.c: 442: MyIdleI2C();
  2463  006EB8  ECB0  F021         	call	_MyIdleI2C	;wreg free
  2464                           
  2465                           ;newmain.c: 443: MyStartI2C();
  2466  006EBC  ECA9  F021         	call	_MyStartI2C	;wreg free
  2467                           
  2468                           ;newmain.c: 444: MyIdleI2C();
  2469  006EC0  ECB0  F021         	call	_MyIdleI2C	;wreg free
  2470                           
  2471                           ;newmain.c: 445: write(matrices[i].address | 0x00);
  2472  006EC4  C07A  F043         	movff	main@i,___wmul@multiplier
  2473  006EC8  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  2474  006ECC  0E00               	movlw	0
  2475  006ECE  6E46               	movwf	___wmul@multiplicand+1,c
  2476  006ED0  0E1D               	movlw	29
  2477  006ED2  6E45               	movwf	___wmul@multiplicand,c
  2478  006ED4  ECF1  F021         	call	___wmul	;wreg free
  2479  006ED8  0E80               	movlw	low _matrices
  2480  006EDA  2443               	addwf	?___wmul,w,c
  2481  006EDC  6ED9               	movwf	fsr2l,c
  2482  006EDE  0E00               	movlw	high _matrices
  2483  006EE0  2044               	addwfc	?___wmul+1,w,c
  2484  006EE2  6EDA               	movwf	fsr2h,c
  2485  006EE4  50DF               	movf	indf2,w,c
  2486  006EE6  EC04  F022         	call	_write
  2487                           
  2488                           ;newmain.c: 446: MyIdleI2C();
  2489  006EEA  ECB0  F021         	call	_MyIdleI2C	;wreg free
  2490                           
  2491                           ;newmain.c: 447: write(0b10000001);
  2492  006EEE  0E81               	movlw	129
  2493  006EF0  EC04  F022         	call	_write
  2494                           
  2495                           ;newmain.c: 448: MyIdleI2C();
  2496  006EF4  ECB0  F021         	call	_MyIdleI2C	;wreg free
  2497                           
  2498                           ;newmain.c: 449: MyStopI2C();
  2499  006EF8  ECAB  F021         	call	_MyStopI2C	;wreg free
  2500  006EFC  4A7A               	infsnz	main@i,f,c
  2501  006EFE  2A7B               	incf	main@i+1,f,c
  2502  006F00  D7B1               	goto	l4720
  2503  006F02                     u6200:
  2504  006F02                     l4758:
  2505                           
  2506                           ;newmain.c: 450: }
  2507                           ;newmain.c: 452: uint8_t column = 0, rightbutton = 0, m = 0, n = 0, h = 0, k = 0;
  2508  006F02  0E00               	movlw	0
  2509  006F04  6E75               	movwf	main@column,c
  2510  006F06  0E00               	movlw	0
  2511  006F08  6E74               	movwf	main@rightbutton,c
  2512  006F0A  0E00               	movlw	0
  2513  006F0C  6E76               	movwf	main@m,c
  2514  006F0E  0E00               	movlw	0
  2515  006F10  6E73               	movwf	main@n,c
  2516  006F12  0E00               	movlw	0
  2517  006F14  6E79               	movwf	main@h,c
  2518  006F16  0E00               	movlw	0
  2519  006F18  6E72               	movwf	main@k,c
  2520                           
  2521                           ;newmain.c: 454: for (i = 0; i < 8; i++)
  2522  006F1A  0E00               	movlw	0
  2523  006F1C  6E7B               	movwf	main@i+1,c
  2524  006F1E  0E00               	movlw	0
  2525  006F20  6E7A               	movwf	main@i,c
  2526  006F22                     l4760:
  2527  006F22  BE7B               	btfsc	main@i+1,7,c
  2528  006F24  D006               	goto	l145
  2529  006F26  507B               	movf	main@i+1,w,c
  2530  006F28  E137               	bnz	l4780
  2531  006F2A  0E08               	movlw	8
  2532  006F2C  5C7A               	subwf	main@i,w,c
  2533  006F2E  B0D8               	btfsc	status,0,c
  2534  006F30  D033               	goto	u6240
  2535  006F32                     l145:
  2536                           
  2537                           ;newmain.c: 455: for (j = 0; j < 8; j++)
  2538  006F32  0E00               	movlw	0
  2539  006F34  6E78               	movwf	main@j+1,c
  2540  006F36  0E00               	movlw	0
  2541  006F38  6E77               	movwf	main@j,c
  2542  006F3A                     l4766:
  2543  006F3A  BE78               	btfsc	main@j+1,7,c
  2544  006F3C  D006               	goto	l147
  2545  006F3E  5078               	movf	main@j+1,w,c
  2546  006F40  E128               	bnz	l4776
  2547  006F42  0E08               	movlw	8
  2548  006F44  5C77               	subwf	main@j,w,c
  2549  006F46  B0D8               	btfsc	status,0,c
  2550  006F48  D024               	goto	u6230
  2551  006F4A                     l147:
  2552                           
  2553                           ;newmain.c: 456: set_led(Buttons[i][j]);
  2554  006F4A  C07A  F069         	movff	main@i,??_main
  2555  006F4E  C07B  F06A         	movff	main@i+1,??_main+1
  2556  006F52  90D8               	bcf	status,0,c
  2557  006F54  3669               	rlcf	??_main,f,c
  2558  006F56  366A               	rlcf	??_main+1,f,c
  2559  006F58  90D8               	bcf	status,0,c
  2560  006F5A  3669               	rlcf	??_main,f,c
  2561  006F5C  366A               	rlcf	??_main+1,f,c
  2562  006F5E  90D8               	bcf	status,0,c
  2563  006F60  3669               	rlcf	??_main,f,c
  2564  006F62  366A               	rlcf	??_main+1,f,c
  2565  006F64  0EF9               	movlw	low _Buttons
  2566  006F66  6E6B               	movwf	(??_main+2)& (0+255),c
  2567  006F68  0E7B               	movlw	high _Buttons
  2568  006F6A  6E6C               	movwf	(??_main+3)& (0+255),c
  2569  006F6C  5069               	movf	??_main,w,c
  2570  006F6E  266B               	addwf	??_main+2,f,c
  2571  006F70  506A               	movf	??_main+1,w,c
  2572  006F72  226C               	addwfc	??_main+3,f,c
  2573  006F74  5077               	movf	main@j,w,c
  2574  006F76  266B               	addwf	??_main+2,f,c
  2575  006F78  5078               	movf	main@j+1,w,c
  2576  006F7A  226C               	addwfc	??_main+3,f,c
  2577  006F7C  C06B  FFF6         	movff	??_main+2,tblptrl
  2578  006F80  C06C  FFF7         	movff	??_main+3,tblptrh
  2579  006F84                     	if	0	;tblptru may be non-zero
  2580  006F84                     	endif
  2581  006F84                     	if	0	;tblptru may be non-zero
  2582  006F84                     	endif
  2583  006F84  0008               	tblrd		*
  2584  006F86  50F5               	movf	tablat,w,c
  2585  006F88  EC58  F023         	call	_set_led
  2586  006F8C  4A77               	infsnz	main@j,f,c
  2587  006F8E  2A78               	incf	main@j+1,f,c
  2588  006F90  D7D4               	goto	l4766
  2589  006F92                     u6230:
  2590  006F92                     l4776:
  2591  006F92  4A7A               	infsnz	main@i,f,c
  2592  006F94  2A7B               	incf	main@i+1,f,c
  2593  006F96  D7C5               	goto	l4760
  2594  006F98                     u6240:
  2595  006F98                     l4780:
  2596                           
  2597                           ;newmain.c: 457: write_display();
  2598  006F98  EC0A  F024         	call	_write_display	;wreg free
  2599                           
  2600                           ;newmain.c: 458: _delay((unsigned long)((50)*(4000000/4000.0)));
  2601  006F9C  0E41               	movlw	65
  2602  006F9E  6E69               	movwf	??_main& (0+255),c
  2603  006FA0  0EEE               	movlw	238
  2604  006FA2                     u6947:
  2605  006FA2  2EE8               	decfsz	wreg,f,c
  2606  006FA4  D7FE               	bra	u6947
  2607  006FA6  2E69               	decfsz	??_main& (0+255),f,c
  2608  006FA8  D7FC               	bra	u6947
  2609  006FAA  D000               	nop2	
  2610                           
  2611                           ;newmain.c: 459: for (i = 0; i < 64; i++)
  2612  006FAC  0E00               	movlw	0
  2613  006FAE  6E7B               	movwf	main@i+1,c
  2614  006FB0  0E00               	movlw	0
  2615  006FB2  6E7A               	movwf	main@i,c
  2616  006FB4                     l4786:
  2617  006FB4  BE7B               	btfsc	main@i+1,7,c
  2618  006FB6  D006               	goto	l149
  2619  006FB8  507B               	movf	main@i+1,w,c
  2620  006FBA  E10A               	bnz	l4796
  2621  006FBC  0E40               	movlw	64
  2622  006FBE  5C7A               	subwf	main@i,w,c
  2623  006FC0  B0D8               	btfsc	status,0,c
  2624  006FC2  D006               	goto	u6260
  2625  006FC4                     l149:
  2626                           
  2627                           ;newmain.c: 460: clr_led(i);
  2628  006FC4  507A               	movf	main@i,w,c
  2629  006FC6  ECAF  F023         	call	_clr_led
  2630  006FCA  4A7A               	infsnz	main@i,f,c
  2631  006FCC  2A7B               	incf	main@i+1,f,c
  2632  006FCE  D7F2               	goto	l4786
  2633  006FD0                     u6260:
  2634  006FD0                     l4796:
  2635                           
  2636                           ;newmain.c: 461: write_display();
  2637  006FD0  EC0A  F024         	call	_write_display	;wreg free
  2638  006FD4                     
  2639                           ;newmain.c: 465: if (read_switch()) {
  2640  006FD4  EC56  F025         	call	_read_switch	;wreg free
  2641  006FD8  0900               	iorlw	0
  2642  006FDA  B4D8               	btfsc	status,2,c
  2643  006FDC  D7FB               	goto	l151
  2644                           
  2645                           ;newmain.c: 466: for (h = 0; h < 64; h++) {
  2646  006FDE  0E00               	movlw	0
  2647  006FE0  6E79               	movwf	main@h,c
  2648  006FE2                     l4802:
  2649  006FE2  0E3F               	movlw	63
  2650  006FE4  6479               	cpfsgt	main@h,c
  2651  006FE6  D001               	goto	l153
  2652  006FE8  D7F5               	goto	l151
  2653  006FEA                     l153:
  2654                           
  2655                           ;newmain.c: 467: uint8_t x, y, note;
  2656                           ;newmain.c: 468: x = i2xy64[h] >> 4;
  2657  006FEA  5079               	movf	main@h,w,c
  2658  006FEC  0D01               	mullw	1
  2659  006FEE  0EF9               	movlw	low _i2xy64
  2660  006FF0  24F3               	addwf	prodl,w,c
  2661  006FF2  6EF6               	movwf	tblptrl,c
  2662  006FF4  0E7A               	movlw	high _i2xy64
  2663  006FF6  20F4               	addwfc	prodh,w,c
  2664  006FF8  6EF7               	movwf	tblptrh,c
  2665  006FFA                     	if	0	;There are less than 3 active tblptr bytes
  2666  006FFA                     	endif
  2667  006FFA  0008               	tblrd		*
  2668  006FFC  CFF5 F069          	movff	tablat,??_main
  2669  007000  3869               	swapf	??_main,w,c
  2670  007002  0B0F               	andlw	15
  2671  007004  6E6D               	movwf	main@x,c
  2672                           
  2673                           ;newmain.c: 469: y = i2xy64[h]&15;
  2674  007006  5079               	movf	main@h,w,c
  2675  007008  0D01               	mullw	1
  2676  00700A  0EF9               	movlw	low _i2xy64
  2677  00700C  24F3               	addwf	prodl,w,c
  2678  00700E  6EF6               	movwf	tblptrl,c
  2679  007010  0E7A               	movlw	high _i2xy64
  2680  007012  20F4               	addwfc	prodh,w,c
  2681  007014  6EF7               	movwf	tblptrh,c
  2682  007016                     	if	0	;There are less than 3 active tblptr bytes
  2683  007016                     	endif
  2684  007016  0008               	tblrd		*
  2685  007018  50F5               	movf	tablat,w,c
  2686  00701A  0B0F               	andlw	15
  2687  00701C  6E6E               	movwf	main@y,c
  2688                           
  2689                           ;newmain.c: 470: note = 32 + y * 8 + x;
  2690  00701E  506E               	movf	main@y,w,c
  2691  007020  0D08               	mullw	8
  2692  007022  50F3               	movf	prodl,w,c
  2693  007024  246D               	addwf	main@x,w,c
  2694  007026  0F20               	addlw	32
  2695  007028  6E71               	movwf	main@note,c
  2696                           
  2697                           ;newmain.c: 471: if (is_key_pressed(h)&&(!was_key_pressed(h))) {
  2698  00702A  5079               	movf	main@h,w,c
  2699  00702C  ECB6  F022         	call	_is_key_pressed
  2700  007030  0900               	iorlw	0
  2701  007032  B4D8               	btfsc	status,2,c
  2702  007034  D338               	goto	l155
  2703  007036  5079               	movf	main@h,w,c
  2704  007038  EC07  F023         	call	_was_key_pressed
  2705  00703C  0900               	iorlw	0
  2706  00703E  A4D8               	btfss	status,2,c
  2707  007040  D332               	goto	l155
  2708                           
  2709                           ;newmain.c: 472: if (press[h] == 0) {
  2710  007042  5079               	movf	main@h,w,c
  2711  007044  0D02               	mullw	2
  2712  007046  0E00               	movlw	low _press
  2713  007048  24F3               	addwf	prodl,w,c
  2714  00704A  6ED9               	movwf	fsr2l,c
  2715  00704C  0E01               	movlw	high _press
  2716  00704E  20F4               	addwfc	prodh,w,c
  2717  007050  6EDA               	movwf	fsr2h,c
  2718  007052  50DE               	movf	postinc2,w,c
  2719  007054  10DE               	iorwf	postinc2,w,c
  2720  007056  A4D8               	btfss	status,2,c
  2721  007058  D034               	goto	l156
  2722                           
  2723                           ;newmain.c: 473: if (play_mode == 0 || play_mode == 2) {
  2724  00705A  507C               	movf	_play_mode,w,c
  2725  00705C  107D               	iorwf	_play_mode+1,w,c
  2726  00705E  B4D8               	btfsc	status,2,c
  2727  007060  D005               	goto	u6330
  2728  007062  0E02               	movlw	2
  2729  007064  187C               	xorwf	_play_mode,w,c
  2730  007066  107D               	iorwf	_play_mode+1,w,c
  2731  007068  A4D8               	btfss	status,2,c
  2732  00706A  D011               	goto	l157
  2733  00706C                     u6330:
  2734                           
  2735                           ;newmain.c: 474: send_note(0x99, drum_midi[h], 0x40);
  2736  00706C  5079               	movf	main@h,w,c
  2737  00706E  0D01               	mullw	1
  2738  007070  0EB9               	movlw	low _drum_midi
  2739  007072  24F3               	addwf	prodl,w,c
  2740  007074  6EF6               	movwf	tblptrl,c
  2741  007076  0E7A               	movlw	high _drum_midi
  2742  007078  20F4               	addwfc	prodh,w,c
  2743  00707A  6EF7               	movwf	tblptrh,c
  2744  00707C                     	if	0	;There are less than 3 active tblptr bytes
  2745  00707C                     	endif
  2746  00707C  0008               	tblrd		*
  2747  00707E  CFF5 F043          	movff	tablat,send_note@two
  2748  007082  0E40               	movlw	64
  2749  007084  6E44               	movwf	send_note@three,c
  2750  007086  0E99               	movlw	153
  2751  007088  ECE0  F021         	call	_send_note
  2752                           
  2753                           ;newmain.c: 475: } else if (play_mode == 1 || play_mode == 3) {
  2754  00708C  D010               	goto	l161
  2755  00708E                     l157:
  2756  00708E  047C               	decf	_play_mode,w,c
  2757  007090  107D               	iorwf	_play_mode+1,w,c
  2758  007092  B4D8               	btfsc	status,2,c
  2759  007094  D005               	goto	u6350
  2760  007096  0E03               	movlw	3
  2761  007098  187C               	xorwf	_play_mode,w,c
  2762  00709A  107D               	iorwf	_play_mode+1,w,c
  2763  00709C  A4D8               	btfss	status,2,c
  2764  00709E  D007               	goto	l161
  2765  0070A0                     u6350:
  2766                           
  2767                           ;newmain.c: 476: send_note(0x90, note, 127);
  2768  0070A0  C071  F043         	movff	main@note,send_note@two
  2769  0070A4  0E7F               	movlw	127
  2770  0070A6  6E44               	movwf	send_note@three,c
  2771  0070A8  0E90               	movlw	144
  2772  0070AA  ECE0  F021         	call	_send_note
  2773  0070AE                     l161:
  2774                           
  2775                           ;newmain.c: 477: }
  2776                           ;newmain.c: 478: press[h] = 1;
  2777  0070AE  5079               	movf	main@h,w,c
  2778  0070B0  0D02               	mullw	2
  2779  0070B2  0E00               	movlw	low _press
  2780  0070B4  24F3               	addwf	prodl,w,c
  2781  0070B6  6ED9               	movwf	fsr2l,c
  2782  0070B8  0E01               	movlw	high _press
  2783  0070BA  20F4               	addwfc	prodh,w,c
  2784  0070BC  6EDA               	movwf	fsr2h,c
  2785  0070BE  0E01               	movlw	1
  2786  0070C0  D04C               	goto	L1
  2787  0070C2                     l156:
  2788                           
  2789                           ;newmain.c: 480: if (play_mode == 0) {
  2790  0070C2  507C               	movf	_play_mode,w,c
  2791  0070C4  107D               	iorwf	_play_mode+1,w,c
  2792  0070C6  A4D8               	btfss	status,2,c
  2793  0070C8  D011               	goto	l165
  2794                           
  2795                           ;newmain.c: 481: send_note(0x99, drum_midi[h], 0x40);
  2796  0070CA  5079               	movf	main@h,w,c
  2797  0070CC  0D01               	mullw	1
  2798  0070CE  0EB9               	movlw	low _drum_midi
  2799  0070D0  24F3               	addwf	prodl,w,c
  2800  0070D2  6EF6               	movwf	tblptrl,c
  2801  0070D4  0E7A               	movlw	high _drum_midi
  2802  0070D6  20F4               	addwfc	prodh,w,c
  2803  0070D8  6EF7               	movwf	tblptrh,c
  2804  0070DA                     	if	0	;There are less than 3 active tblptr bytes
  2805  0070DA                     	endif
  2806  0070DA  0008               	tblrd		*
  2807  0070DC  CFF5 F043          	movff	tablat,send_note@two
  2808  0070E0  0E40               	movlw	64
  2809  0070E2  6E44               	movwf	send_note@three,c
  2810  0070E4  0E99               	movlw	153
  2811  0070E6  ECE0  F021         	call	_send_note
  2812                           
  2813                           ;newmain.c: 482: } else if (play_mode == 1) {
  2814  0070EA  D02E               	goto	l171
  2815  0070EC                     l165:
  2816  0070EC  047C               	decf	_play_mode,w,c
  2817  0070EE  107D               	iorwf	_play_mode+1,w,c
  2818  0070F0  A4D8               	btfss	status,2,c
  2819  0070F2  D008               	goto	l167
  2820                           
  2821                           ;newmain.c: 483: send_note(0x90, note, 127);
  2822  0070F4  C071  F043         	movff	main@note,send_note@two
  2823  0070F8  0E7F               	movlw	127
  2824  0070FA  6E44               	movwf	send_note@three,c
  2825  0070FC  0E90               	movlw	144
  2826  0070FE  ECE0  F021         	call	_send_note
  2827                           
  2828                           ;newmain.c: 484: } else if (play_mode == 2) {
  2829  007102  D022               	goto	l171
  2830  007104                     l167:
  2831  007104  0E02               	movlw	2
  2832  007106  187C               	xorwf	_play_mode,w,c
  2833  007108  107D               	iorwf	_play_mode+1,w,c
  2834  00710A  A4D8               	btfss	status,2,c
  2835  00710C  D011               	goto	l169
  2836                           
  2837                           ;newmain.c: 485: send_note(0x89, drum_midi[h], 0x00);
  2838  00710E  5079               	movf	main@h,w,c
  2839  007110  0D01               	mullw	1
  2840  007112  0EB9               	movlw	low _drum_midi
  2841  007114  24F3               	addwf	prodl,w,c
  2842  007116  6EF6               	movwf	tblptrl,c
  2843  007118  0E7A               	movlw	high _drum_midi
  2844  00711A  20F4               	addwfc	prodh,w,c
  2845  00711C  6EF7               	movwf	tblptrh,c
  2846  00711E                     	if	0	;There are less than 3 active tblptr bytes
  2847  00711E                     	endif
  2848  00711E  0008               	tblrd		*
  2849  007120  CFF5 F043          	movff	tablat,send_note@two
  2850  007124  0E00               	movlw	0
  2851  007126  6E44               	movwf	send_note@three,c
  2852  007128  0E89               	movlw	137
  2853  00712A  ECE0  F021         	call	_send_note
  2854                           
  2855                           ;newmain.c: 486: } else if (play_mode == 3) {
  2856  00712E  D00C               	goto	l171
  2857  007130                     l169:
  2858  007130  0E03               	movlw	3
  2859  007132  187C               	xorwf	_play_mode,w,c
  2860  007134  107D               	iorwf	_play_mode+1,w,c
  2861  007136  A4D8               	btfss	status,2,c
  2862  007138  D007               	goto	l171
  2863                           
  2864                           ;newmain.c: 487: send_note(0x80, note, 127);
  2865  00713A  C071  F043         	movff	main@note,send_note@two
  2866  00713E  0E7F               	movlw	127
  2867  007140  6E44               	movwf	send_note@three,c
  2868  007142  0E80               	movlw	128
  2869  007144  ECE0  F021         	call	_send_note
  2870  007148                     l171:
  2871                           
  2872                           ;newmain.c: 488: }
  2873                           ;newmain.c: 489: press[h] = 0;
  2874  007148  5079               	movf	main@h,w,c
  2875  00714A  0D02               	mullw	2
  2876  00714C  0E00               	movlw	low _press
  2877  00714E  24F3               	addwf	prodl,w,c
  2878  007150  6ED9               	movwf	fsr2l,c
  2879  007152  0E01               	movlw	high _press
  2880  007154  20F4               	addwfc	prodh,w,c
  2881  007156  6EDA               	movwf	fsr2h,c
  2882  007158  0E00               	movlw	0
  2883  00715A                     L1:
  2884  00715A  6EDE               	movwf	postinc2,c
  2885  00715C  0E00               	movlw	0
  2886  00715E  6EDD               	movwf	postdec2,c
  2887                           
  2888                           ;newmain.c: 490: }
  2889                           ;newmain.c: 491: for (i = 0; i < 8; i++) {
  2890  007160  0E00               	movlw	0
  2891  007162  6E7B               	movwf	main@i+1,c
  2892  007164  0E00               	movlw	0
  2893  007166  6E7A               	movwf	main@i,c
  2894  007168                     l4850:
  2895  007168  BE7B               	btfsc	main@i+1,7,c
  2896  00716A  D006               	goto	l172
  2897  00716C  507B               	movf	main@i+1,w,c
  2898  00716E  E15B               	bnz	l4864
  2899  007170  0E08               	movlw	8
  2900  007172  5C7A               	subwf	main@i,w,c
  2901  007174  B0D8               	btfsc	status,0,c
  2902  007176  D057               	goto	u6420
  2903  007178                     l172:
  2904                           
  2905                           ;newmain.c: 492: if (h == Buttons[i][7]) {
  2906  007178  C07A  F069         	movff	main@i,??_main
  2907  00717C  C07B  F06A         	movff	main@i+1,??_main+1
  2908  007180  90D8               	bcf	status,0,c
  2909  007182  3669               	rlcf	??_main,f,c
  2910  007184  366A               	rlcf	??_main+1,f,c
  2911  007186  90D8               	bcf	status,0,c
  2912  007188  3669               	rlcf	??_main,f,c
  2913  00718A  366A               	rlcf	??_main+1,f,c
  2914  00718C  90D8               	bcf	status,0,c
  2915  00718E  3669               	rlcf	??_main,f,c
  2916  007190  366A               	rlcf	??_main+1,f,c
  2917  007192  0E07               	movlw	7
  2918  007194  2669               	addwf	??_main,f,c
  2919  007196  0E00               	movlw	0
  2920  007198  226A               	addwfc	??_main+1,f,c
  2921  00719A  0EF9               	movlw	low _Buttons
  2922  00719C  2469               	addwf	??_main,w,c
  2923  00719E  6EF6               	movwf	tblptrl,c
  2924  0071A0  0E7B               	movlw	high _Buttons
  2925  0071A2  206A               	addwfc	??_main+1,w,c
  2926  0071A4  6EF7               	movwf	tblptrh,c
  2927  0071A6                     	if	0	;There are less than 3 active tblptr bytes
  2928  0071A6                     	endif
  2929  0071A6  0008               	tblrd		*
  2930  0071A8  50F5               	movf	tablat,w,c
  2931  0071AA  1879               	xorwf	main@h,w,c
  2932  0071AC  A4D8               	btfss	status,2,c
  2933  0071AE  D014               	goto	l174
  2934                           
  2935                           ;newmain.c: 493: rightbutton = (h - 19) >> 2;
  2936  0071B0  0EED               	movlw	237
  2937  0071B2  6E69               	movwf	??_main& (0+255),c
  2938  0071B4  0EFF               	movlw	255
  2939  0071B6  6E6A               	movwf	(??_main+1)& (0+255),c
  2940  0071B8  5079               	movf	main@h,w,c
  2941  0071BA  6E6B               	movwf	(??_main+2)& (0+255),c
  2942  0071BC  6A6C               	clrf	(??_main+3)& (0+255),c
  2943  0071BE  5069               	movf	??_main,w,c
  2944  0071C0  266B               	addwf	??_main+2,f,c
  2945  0071C2  506A               	movf	??_main+1,w,c
  2946  0071C4  226C               	addwfc	??_main+3,f,c
  2947  0071C6  346C               	rlcf	??_main+3,w,c
  2948  0071C8  326C               	rrcf	??_main+3,f,c
  2949  0071CA  326B               	rrcf	??_main+2,f,c
  2950  0071CC  346C               	rlcf	??_main+3,w,c
  2951  0071CE  326C               	rrcf	??_main+3,f,c
  2952  0071D0  326B               	rrcf	??_main+2,f,c
  2953  0071D2  506B               	movf	??_main+2,w,c
  2954  0071D4  6E74               	movwf	main@rightbutton,c
  2955                           
  2956                           ;newmain.c: 494: }else{
  2957  0071D6  D024               	goto	l175
  2958  0071D8                     l174:
  2959                           
  2960                           ;newmain.c: 495: press[Buttons[i][7]] = 0;
  2961  0071D8  C07A  F069         	movff	main@i,??_main
  2962  0071DC  C07B  F06A         	movff	main@i+1,??_main+1
  2963  0071E0  90D8               	bcf	status,0,c
  2964  0071E2  3669               	rlcf	??_main,f,c
  2965  0071E4  366A               	rlcf	??_main+1,f,c
  2966  0071E6  90D8               	bcf	status,0,c
  2967  0071E8  3669               	rlcf	??_main,f,c
  2968  0071EA  366A               	rlcf	??_main+1,f,c
  2969  0071EC  90D8               	bcf	status,0,c
  2970  0071EE  3669               	rlcf	??_main,f,c
  2971  0071F0  366A               	rlcf	??_main+1,f,c
  2972  0071F2  0E07               	movlw	7
  2973  0071F4  2669               	addwf	??_main,f,c
  2974  0071F6  0E00               	movlw	0
  2975  0071F8  226A               	addwfc	??_main+1,f,c
  2976  0071FA  0EF9               	movlw	low _Buttons
  2977  0071FC  2469               	addwf	??_main,w,c
  2978  0071FE  6EF6               	movwf	tblptrl,c
  2979  007200  0E7B               	movlw	high _Buttons
  2980  007202  206A               	addwfc	??_main+1,w,c
  2981  007204  6EF7               	movwf	tblptrh,c
  2982  007206                     	if	0	;There are less than 3 active tblptr bytes
  2983  007206                     	endif
  2984  007206  0008               	tblrd		*
  2985  007208  50F5               	movf	tablat,w,c
  2986  00720A  0D02               	mullw	2
  2987  00720C  0E00               	movlw	low _press
  2988  00720E  24F3               	addwf	prodl,w,c
  2989  007210  6ED9               	movwf	fsr2l,c
  2990  007212  0E01               	movlw	high _press
  2991  007214  20F4               	addwfc	prodh,w,c
  2992  007216  6EDA               	movwf	fsr2h,c
  2993  007218  0E00               	movlw	0
  2994  00721A  6EDE               	movwf	postinc2,c
  2995  00721C  0E00               	movlw	0
  2996  00721E  6EDD               	movwf	postdec2,c
  2997  007220                     l175:
  2998  007220  4A7A               	infsnz	main@i,f,c
  2999  007222  2A7B               	incf	main@i+1,f,c
  3000  007224  D7A1               	goto	l4850
  3001  007226                     u6420:
  3002  007226                     l4864:
  3003                           
  3004                           ;newmain.c: 496: }
  3005                           ;newmain.c: 497: }
  3006                           ;newmain.c: 499: for (i = 0; i < 8; i++) {
  3007  007226  0E00               	movlw	0
  3008  007228  6E7B               	movwf	main@i+1,c
  3009  00722A  0E00               	movlw	0
  3010  00722C  6E7A               	movwf	main@i,c
  3011  00722E                     l4866:
  3012  00722E  BE7B               	btfsc	main@i+1,7,c
  3013  007230  D006               	goto	l176
  3014  007232  507B               	movf	main@i+1,w,c
  3015  007234  E141               	bnz	l4888
  3016  007236  0E08               	movlw	8
  3017  007238  5C7A               	subwf	main@i,w,c
  3018  00723A  B0D8               	btfsc	status,0,c
  3019  00723C  D03D               	goto	u6470
  3020  00723E                     l176:
  3021                           
  3022                           ;newmain.c: 500: for (j = 0; j < 8; j++) {
  3023  00723E  0E00               	movlw	0
  3024  007240  6E78               	movwf	main@j+1,c
  3025  007242  0E00               	movlw	0
  3026  007244  6E77               	movwf	main@j,c
  3027  007246                     l4872:
  3028  007246  BE78               	btfsc	main@j+1,7,c
  3029  007248  D006               	goto	l178
  3030  00724A  5078               	movf	main@j+1,w,c
  3031  00724C  E132               	bnz	l4884
  3032  00724E  0E08               	movlw	8
  3033  007250  5C77               	subwf	main@j,w,c
  3034  007252  B0D8               	btfsc	status,0,c
  3035  007254  D02E               	goto	u6460
  3036  007256                     l178:
  3037                           
  3038                           ;newmain.c: 501: if (h == Buttons[i][j]) {
  3039  007256  C07A  F069         	movff	main@i,??_main
  3040  00725A  C07B  F06A         	movff	main@i+1,??_main+1
  3041  00725E  90D8               	bcf	status,0,c
  3042  007260  3669               	rlcf	??_main,f,c
  3043  007262  366A               	rlcf	??_main+1,f,c
  3044  007264  90D8               	bcf	status,0,c
  3045  007266  3669               	rlcf	??_main,f,c
  3046  007268  366A               	rlcf	??_main+1,f,c
  3047  00726A  90D8               	bcf	status,0,c
  3048  00726C  3669               	rlcf	??_main,f,c
  3049  00726E  366A               	rlcf	??_main+1,f,c
  3050  007270  0EF9               	movlw	low _Buttons
  3051  007272  6E6B               	movwf	(??_main+2)& (0+255),c
  3052  007274  0E7B               	movlw	high _Buttons
  3053  007276  6E6C               	movwf	(??_main+3)& (0+255),c
  3054  007278  5069               	movf	??_main,w,c
  3055  00727A  266B               	addwf	??_main+2,f,c
  3056  00727C  506A               	movf	??_main+1,w,c
  3057  00727E  226C               	addwfc	??_main+3,f,c
  3058  007280  5077               	movf	main@j,w,c
  3059  007282  266B               	addwf	??_main+2,f,c
  3060  007284  5078               	movf	main@j+1,w,c
  3061  007286  226C               	addwfc	??_main+3,f,c
  3062  007288  C06B  FFF6         	movff	??_main+2,tblptrl
  3063  00728C  C06C  FFF7         	movff	??_main+3,tblptrh
  3064  007290                     	if	0	;tblptru may be non-zero
  3065  007290                     	endif
  3066  007290                     	if	0	;tblptru may be non-zero
  3067  007290                     	endif
  3068  007290  0008               	tblrd		*
  3069  007292  50F5               	movf	tablat,w,c
  3070  007294  1879               	xorwf	main@h,w,c
  3071  007296  A4D8               	btfss	status,2,c
  3072  007298  D009               	goto	l180
  3073                           
  3074                           ;newmain.c: 502: column = Buttons[0][j];
  3075  00729A  0EF9               	movlw	low _Buttons
  3076  00729C  2477               	addwf	main@j,w,c
  3077  00729E  6EF6               	movwf	tblptrl,c
  3078  0072A0  0E7B               	movlw	high _Buttons
  3079  0072A2  2078               	addwfc	main@j+1,w,c
  3080  0072A4  6EF7               	movwf	tblptrh,c
  3081  0072A6                     	if	0	;There are less than 3 active tblptr bytes
  3082  0072A6                     	endif
  3083  0072A6  0008               	tblrd		*
  3084  0072A8  CFF5 F075          	movff	tablat,main@column
  3085  0072AC                     l180:
  3086  0072AC  4A77               	infsnz	main@j,f,c
  3087  0072AE  2A78               	incf	main@j+1,f,c
  3088  0072B0  D7CA               	goto	l4872
  3089  0072B2                     u6460:
  3090  0072B2                     l4884:
  3091  0072B2  4A7A               	infsnz	main@i,f,c
  3092  0072B4  2A7B               	incf	main@i+1,f,c
  3093  0072B6  D7BB               	goto	l4866
  3094  0072B8                     u6470:
  3095  0072B8                     l4888:
  3096                           
  3097                           ;newmain.c: 503: }
  3098                           ;newmain.c: 504: }
  3099                           ;newmain.c: 505: }
  3100                           ;newmain.c: 508: if (column == 19) {
  3101  0072B8  0E13               	movlw	19
  3102  0072BA  1875               	xorwf	main@column,w,c
  3103  0072BC  A4D8               	btfss	status,2,c
  3104  0072BE  D014               	goto	l181
  3105                           
  3106                           ;newmain.c: 509: for (i = 0; i < 64; i++)
  3107  0072C0  0E00               	movlw	0
  3108  0072C2  6E7B               	movwf	main@i+1,c
  3109  0072C4  0E00               	movlw	0
  3110  0072C6  6E7A               	movwf	main@i,c
  3111  0072C8                     l4892:
  3112  0072C8  BE7B               	btfsc	main@i+1,7,c
  3113  0072CA  D006               	goto	l182
  3114  0072CC  507B               	movf	main@i+1,w,c
  3115  0072CE  E10A               	bnz	l4902
  3116  0072D0  0E40               	movlw	64
  3117  0072D2  5C7A               	subwf	main@i,w,c
  3118  0072D4  B0D8               	btfsc	status,0,c
  3119  0072D6  D006               	goto	u6500
  3120  0072D8                     l182:
  3121                           
  3122                           ;newmain.c: 510: clr_led(i);
  3123  0072D8  507A               	movf	main@i,w,c
  3124  0072DA  ECAF  F023         	call	_clr_led
  3125  0072DE  4A7A               	infsnz	main@i,f,c
  3126  0072E0  2A7B               	incf	main@i+1,f,c
  3127  0072E2  D7F2               	goto	l4892
  3128  0072E4                     u6500:
  3129  0072E4                     l4902:
  3130                           
  3131                           ;newmain.c: 511: write_display();
  3132  0072E4  EC0A  F024         	call	_write_display	;wreg free
  3133  0072E8                     l181:
  3134                           
  3135                           ;newmain.c: 512: }
  3136                           ;newmain.c: 514: if (rightbutton == 0 && column != 19) {
  3137  0072E8  5074               	movf	main@rightbutton,w,c
  3138  0072EA  A4D8               	btfss	status,2,c
  3139  0072EC  D0AA               	goto	l184
  3140  0072EE  0E13               	movlw	19
  3141  0072F0  1875               	xorwf	main@column,w,c
  3142  0072F2  B4D8               	btfsc	status,2,c
  3143  0072F4  D0A6               	goto	l184
  3144                           
  3145                           ;newmain.c: 515: for (i = 0; i < 14; i++) {
  3146  0072F6  0E00               	movlw	0
  3147  0072F8  6E7B               	movwf	main@i+1,c
  3148  0072FA  0E00               	movlw	0
  3149  0072FC  6E7A               	movwf	main@i,c
  3150  0072FE                     l4910:
  3151  0072FE  BE7B               	btfsc	main@i+1,7,c
  3152  007300  D006               	goto	l185
  3153  007302  507B               	movf	main@i+1,w,c
  3154  007304  E156               	bnz	l4948
  3155  007306  0E0E               	movlw	14
  3156  007308  5C7A               	subwf	main@i,w,c
  3157  00730A  B0D8               	btfsc	status,0,c
  3158  00730C  D052               	goto	u6580
  3159  00730E                     l185:
  3160                           
  3161                           ;newmain.c: 516: if (h == show0_1[i]) {
  3162  00730E  0E8B               	movlw	low _show0_1
  3163  007310  247A               	addwf	main@i,w,c
  3164  007312  6EF6               	movwf	tblptrl,c
  3165  007314  0E7C               	movlw	high _show0_1
  3166  007316  207B               	addwfc	main@i+1,w,c
  3167  007318  6EF7               	movwf	tblptrh,c
  3168  00731A                     	if	0	;There are less than 3 active tblptr bytes
  3169  00731A                     	endif
  3170  00731A  0008               	tblrd		*
  3171  00731C  50F5               	movf	tablat,w,c
  3172  00731E  1879               	xorwf	main@h,w,c
  3173  007320  A4D8               	btfss	status,2,c
  3174  007322  D002               	goto	l187
  3175                           
  3176                           ;newmain.c: 517: m = 1;
  3177  007324  0E01               	movlw	1
  3178  007326  D03E               	goto	L4
  3179  007328                     l187:
  3180  007328  C07A  F069         	movff	main@i,??_main
  3181  00732C  C07B  F06A         	movff	main@i+1,??_main+1
  3182  007330  1E69               	comf	??_main,f,c
  3183  007332  1E6A               	comf	??_main+1,f,c
  3184  007334  4A69               	infsnz	??_main,f,c
  3185  007336  2A6A               	incf	??_main+1,f,c
  3186  007338  0E27               	movlw	39
  3187  00733A  2669               	addwf	??_main,f,c
  3188  00733C  0E00               	movlw	0
  3189  00733E  226A               	addwfc	??_main+1,f,c
  3190  007340  0E8B               	movlw	low _show0_1
  3191  007342  2469               	addwf	??_main,w,c
  3192  007344  6EF6               	movwf	tblptrl,c
  3193  007346  0E7C               	movlw	high _show0_1
  3194  007348  206A               	addwfc	??_main+1,w,c
  3195  00734A  6EF7               	movwf	tblptrh,c
  3196  00734C                     	if	0	;There are less than 3 active tblptr bytes
  3197  00734C                     	endif
  3198  00734C  0008               	tblrd		*
  3199  00734E  50F5               	movf	tablat,w,c
  3200  007350  1879               	xorwf	main@h,w,c
  3201  007352  A4D8               	btfss	status,2,c
  3202  007354  D002               	goto	l189
  3203                           
  3204                           ;newmain.c: 521: m = 2;
  3205  007356  0E02               	movlw	2
  3206  007358  D025               	goto	L4
  3207  00735A                     l189:
  3208  00735A  0E63               	movlw	low _show0_2
  3209  00735C  247A               	addwf	main@i,w,c
  3210  00735E  6EF6               	movwf	tblptrl,c
  3211  007360  0E7C               	movlw	high _show0_2
  3212  007362  207B               	addwfc	main@i+1,w,c
  3213  007364  6EF7               	movwf	tblptrh,c
  3214  007366                     	if	0	;There are less than 3 active tblptr bytes
  3215  007366                     	endif
  3216  007366  0008               	tblrd		*
  3217  007368  50F5               	movf	tablat,w,c
  3218  00736A  1879               	xorwf	main@h,w,c
  3219  00736C  A4D8               	btfss	status,2,c
  3220  00736E  D002               	goto	l191
  3221                           
  3222                           ;newmain.c: 525: m = 3;
  3223  007370  0E03               	movlw	3
  3224  007372  D018               	goto	L4
  3225  007374                     l191:
  3226  007374  C07A  F069         	movff	main@i,??_main
  3227  007378  C07B  F06A         	movff	main@i+1,??_main+1
  3228  00737C  1E69               	comf	??_main,f,c
  3229  00737E  1E6A               	comf	??_main+1,f,c
  3230  007380  4A69               	infsnz	??_main,f,c
  3231  007382  2A6A               	incf	??_main+1,f,c
  3232  007384  0E27               	movlw	39
  3233  007386  2669               	addwf	??_main,f,c
  3234  007388  0E00               	movlw	0
  3235  00738A  226A               	addwfc	??_main+1,f,c
  3236  00738C  0E63               	movlw	low _show0_2
  3237  00738E  2469               	addwf	??_main,w,c
  3238  007390  6EF6               	movwf	tblptrl,c
  3239  007392  0E7C               	movlw	high _show0_2
  3240  007394  206A               	addwfc	??_main+1,w,c
  3241  007396  6EF7               	movwf	tblptrh,c
  3242  007398                     	if	0	;There are less than 3 active tblptr bytes
  3243  007398                     	endif
  3244  007398  0008               	tblrd		*
  3245  00739A  50F5               	movf	tablat,w,c
  3246  00739C  1879               	xorwf	main@h,w,c
  3247  00739E  A4D8               	btfss	status,2,c
  3248  0073A0  D005               	goto	l193
  3249                           
  3250                           ;newmain.c: 529: m = 4;
  3251  0073A2  0E04               	movlw	4
  3252  0073A4                     L4:
  3253  0073A4  6E76               	movwf	main@m,c
  3254                           
  3255                           ;newmain.c: 530: n = i;
  3256  0073A6  C07A  F073         	movff	main@i,main@n
  3257                           
  3258                           ;newmain.c: 531: break;
  3259  0073AA  D003               	goto	u6580
  3260  0073AC                     l193:
  3261  0073AC  4A7A               	infsnz	main@i,f,c
  3262  0073AE  2A7B               	incf	main@i+1,f,c
  3263  0073B0  D7A6               	goto	l4910
  3264  0073B2                     u6580:
  3265  0073B2                     l4948:
  3266                           
  3267                           ;newmain.c: 532: }
  3268                           ;newmain.c: 533: }
  3269                           ;newmain.c: 534: for (i = 0; i < 2; i++) {
  3270  0073B2  0E00               	movlw	0
  3271  0073B4  6E7B               	movwf	main@i+1,c
  3272  0073B6  0E00               	movlw	0
  3273  0073B8  6E7A               	movwf	main@i,c
  3274  0073BA                     l4950:
  3275  0073BA  BE7B               	btfsc	main@i+1,7,c
  3276  0073BC  D006               	goto	l194
  3277  0073BE  507B               	movf	main@i+1,w,c
  3278  0073C0  E13A               	bnz	l4974
  3279  0073C2  0E02               	movlw	2
  3280  0073C4  5C7A               	subwf	main@i,w,c
  3281  0073C6  B0D8               	btfsc	status,0,c
  3282  0073C8  D036               	goto	u6630
  3283  0073CA                     l194:
  3284                           
  3285                           ;newmain.c: 535: for (j = 0; j < 8; j++) {
  3286  0073CA  0E00               	movlw	0
  3287  0073CC  6E78               	movwf	main@j+1,c
  3288  0073CE  0E00               	movlw	0
  3289  0073D0  6E77               	movwf	main@j,c
  3290  0073D2                     l4956:
  3291  0073D2  BE78               	btfsc	main@j+1,7,c
  3292  0073D4  D006               	goto	l196
  3293  0073D6  5078               	movf	main@j+1,w,c
  3294  0073D8  E12B               	bnz	l4970
  3295  0073DA  0E08               	movlw	8
  3296  0073DC  5C77               	subwf	main@j,w,c
  3297  0073DE  B0D8               	btfsc	status,0,c
  3298  0073E0  D027               	goto	u6620
  3299  0073E2                     l196:
  3300                           
  3301                           ;newmain.c: 536: if (h == show0_3[i][j]) {
  3302  0073E2  C07A  F043         	movff	main@i,___wmul@multiplier
  3303  0073E6  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  3304  0073EA  0E00               	movlw	0
  3305  0073EC  6E46               	movwf	___wmul@multiplicand+1,c
  3306  0073EE  0E14               	movlw	20
  3307  0073F0  6E45               	movwf	___wmul@multiplicand,c
  3308  0073F2  ECF1  F021         	call	___wmul	;wreg free
  3309  0073F6  0E55               	movlw	low _show0_3
  3310  0073F8  6E69               	movwf	??_main& (0+255),c
  3311  0073FA  0E78               	movlw	high _show0_3
  3312  0073FC  6E6A               	movwf	(??_main+1)& (0+255),c
  3313  0073FE  5043               	movf	?___wmul,w,c
  3314  007400  2669               	addwf	??_main,f,c
  3315  007402  5044               	movf	?___wmul+1,w,c
  3316  007404  226A               	addwfc	??_main+1,f,c
  3317  007406  5077               	movf	main@j,w,c
  3318  007408  2669               	addwf	??_main,f,c
  3319  00740A  5078               	movf	main@j+1,w,c
  3320  00740C  226A               	addwfc	??_main+1,f,c
  3321  00740E  C069  FFF6         	movff	??_main,tblptrl
  3322  007412  C06A  FFF7         	movff	??_main+1,tblptrh
  3323  007416                     	if	0	;tblptru may be non-zero
  3324  007416                     	endif
  3325  007416                     	if	0	;tblptru may be non-zero
  3326  007416                     	endif
  3327  007416  0008               	tblrd		*
  3328  007418  50F5               	movf	tablat,w,c
  3329  00741A  1879               	xorwf	main@h,w,c
  3330  00741C  A4D8               	btfss	status,2,c
  3331  00741E  D005               	goto	l198
  3332                           
  3333                           ;newmain.c: 537: m = 5;
  3334  007420  0E05               	movlw	5
  3335  007422  6E76               	movwf	main@m,c
  3336                           
  3337                           ;newmain.c: 538: n = i;
  3338  007424  C07A  F073         	movff	main@i,main@n
  3339                           
  3340                           ;newmain.c: 539: break;
  3341  007428  D003               	goto	u6620
  3342  00742A                     l198:
  3343  00742A  4A77               	infsnz	main@j,f,c
  3344  00742C  2A78               	incf	main@j+1,f,c
  3345  00742E  D7D1               	goto	l4956
  3346  007430                     u6620:
  3347  007430                     l4970:
  3348  007430  4A7A               	infsnz	main@i,f,c
  3349  007432  2A7B               	incf	main@i+1,f,c
  3350  007434  D7C2               	goto	l4950
  3351  007436                     u6630:
  3352  007436                     l4974:
  3353                           
  3354                           ;newmain.c: 540: }
  3355                           ;newmain.c: 541: }
  3356                           ;newmain.c: 542: }
  3357                           ;newmain.c: 543: animation0(m, n);
  3358  007436  C073  F058         	movff	main@n,animation0@n
  3359  00743A  5076               	movf	main@m,w,c
  3360  00743C  EC3A  F029         	call	_animation0
  3361                           
  3362                           ;newmain.c: 544: } else if (rightbutton == 1 && column != 19) {
  3363  007440  D118               	goto	l224
  3364  007442                     l184:
  3365  007442  0474               	decf	main@rightbutton,w,c
  3366  007444  A4D8               	btfss	status,2,c
  3367  007446  D010               	goto	l200
  3368  007448  0E13               	movlw	19
  3369  00744A  1875               	xorwf	main@column,w,c
  3370  00744C  B4D8               	btfsc	status,2,c
  3371  00744E  D00C               	goto	l200
  3372                           
  3373                           ;newmain.c: 546: m = h >> 4;
  3374  007450  3879               	swapf	main@h,w,c
  3375  007452  0B0F               	andlw	15
  3376  007454  6E76               	movwf	main@m,c
  3377                           
  3378                           ;newmain.c: 547: n = h & 0x0f;
  3379  007456  5079               	movf	main@h,w,c
  3380  007458  0B0F               	andlw	15
  3381  00745A  6E73               	movwf	main@n,c
  3382                           
  3383                           ;newmain.c: 548: animation1(m, n);
  3384  00745C  C073  F058         	movff	main@n,animation1@n
  3385  007460  5076               	movf	main@m,w,c
  3386  007462  ECA4  F024         	call	_animation1
  3387                           
  3388                           ;newmain.c: 549: } else if (rightbutton == 2 && column != 19) {
  3389  007466  D105               	goto	l224
  3390  007468                     l200:
  3391  007468  0E02               	movlw	2
  3392  00746A  1874               	xorwf	main@rightbutton,w,c
  3393  00746C  A4D8               	btfss	status,2,c
  3394  00746E  D012               	goto	l202
  3395  007470  0E13               	movlw	19
  3396  007472  1875               	xorwf	main@column,w,c
  3397  007474  B4D8               	btfsc	status,2,c
  3398  007476  D00E               	goto	l202
  3399                           
  3400                           ;newmain.c: 550: m = h >> 4;
  3401  007478  3879               	swapf	main@h,w,c
  3402  00747A  0B0F               	andlw	15
  3403  00747C  6E76               	movwf	main@m,c
  3404                           
  3405                           ;newmain.c: 551: n = h & 0x0f;
  3406  00747E  5079               	movf	main@h,w,c
  3407  007480  0B0F               	andlw	15
  3408  007482  6E73               	movwf	main@n,c
  3409                           
  3410                           ;newmain.c: 552: animation2(m, n, h);
  3411  007484  C073  F058         	movff	main@n,animation2@n
  3412  007488  C079  F059         	movff	main@h,animation2@h
  3413  00748C  5076               	movf	main@m,w,c
  3414  00748E  ECD6  F02F         	call	_animation2
  3415                           
  3416                           ;newmain.c: 553: } else if (rightbutton == 3 && column != 19) {
  3417  007492  D0EF               	goto	l224
  3418  007494                     l202:
  3419  007494  0E03               	movlw	3
  3420  007496  1874               	xorwf	main@rightbutton,w,c
  3421  007498  A4D8               	btfss	status,2,c
  3422  00749A  D067               	goto	l204
  3423  00749C  0E13               	movlw	19
  3424  00749E  1875               	xorwf	main@column,w,c
  3425  0074A0  B4D8               	btfsc	status,2,c
  3426  0074A2  D063               	goto	l204
  3427                           
  3428                           ;newmain.c: 554: for (i = 0; i < 4; i++)
  3429  0074A4  0E00               	movlw	0
  3430  0074A6  6E7B               	movwf	main@i+1,c
  3431  0074A8  0E00               	movlw	0
  3432  0074AA  6E7A               	movwf	main@i,c
  3433  0074AC                     l4998:
  3434  0074AC  BE7B               	btfsc	main@i+1,7,c
  3435  0074AE  D006               	goto	l205
  3436  0074B0  507B               	movf	main@i+1,w,c
  3437  0074B2  E157               	bnz	l5022
  3438  0074B4  0E04               	movlw	4
  3439  0074B6  5C7A               	subwf	main@i,w,c
  3440  0074B8  B0D8               	btfsc	status,0,c
  3441  0074BA  D053               	goto	u6750
  3442  0074BC                     l205:
  3443                           
  3444                           ;newmain.c: 555: for (j = 0; j < 26; j++)
  3445  0074BC  0E00               	movlw	0
  3446  0074BE  6E78               	movwf	main@j+1,c
  3447  0074C0  0E00               	movlw	0
  3448  0074C2  6E77               	movwf	main@j,c
  3449  0074C4                     l5004:
  3450  0074C4  BE78               	btfsc	main@j+1,7,c
  3451  0074C6  D006               	goto	l207
  3452  0074C8  5078               	movf	main@j+1,w,c
  3453  0074CA  E148               	bnz	l5018
  3454  0074CC  0E1A               	movlw	26
  3455  0074CE  5C77               	subwf	main@j,w,c
  3456  0074D0  B0D8               	btfsc	status,0,c
  3457  0074D2  D044               	goto	u6740
  3458  0074D4                     l207:
  3459                           
  3460                           ;newmain.c: 556: if (circle[i][j] != 100) {
  3461  0074D4  C07A  F043         	movff	main@i,___wmul@multiplier
  3462  0074D8  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  3463  0074DC  0E00               	movlw	0
  3464  0074DE  6E46               	movwf	___wmul@multiplicand+1,c
  3465  0074E0  0E1A               	movlw	26
  3466  0074E2  6E45               	movwf	___wmul@multiplicand,c
  3467  0074E4  ECF1  F021         	call	___wmul	;wreg free
  3468  0074E8  0E41               	movlw	low _circle
  3469  0074EA  6E69               	movwf	??_main& (0+255),c
  3470  0074EC  0E79               	movlw	high _circle
  3471  0074EE  6E6A               	movwf	(??_main+1)& (0+255),c
  3472  0074F0  5043               	movf	?___wmul,w,c
  3473  0074F2  2669               	addwf	??_main,f,c
  3474  0074F4  5044               	movf	?___wmul+1,w,c
  3475  0074F6  226A               	addwfc	??_main+1,f,c
  3476  0074F8  5077               	movf	main@j,w,c
  3477  0074FA  2669               	addwf	??_main,f,c
  3478  0074FC  5078               	movf	main@j+1,w,c
  3479  0074FE  226A               	addwfc	??_main+1,f,c
  3480  007500  C069  FFF6         	movff	??_main,tblptrl
  3481  007504  C06A  FFF7         	movff	??_main+1,tblptrh
  3482  007508                     	if	0	;tblptru may be non-zero
  3483  007508                     	endif
  3484  007508                     	if	0	;tblptru may be non-zero
  3485  007508                     	endif
  3486  007508  0008               	tblrd		*
  3487  00750A  50F5               	movf	tablat,w,c
  3488  00750C  0A64               	xorlw	100
  3489  00750E  B4D8               	btfsc	status,2,c
  3490  007510  D022               	goto	l210
  3491                           
  3492                           ;newmain.c: 557: if (h == circle[i][j]) {
  3493  007512  C07A  F043         	movff	main@i,___wmul@multiplier
  3494  007516  C07B  F044         	movff	main@i+1,___wmul@multiplier+1
  3495  00751A  0E00               	movlw	0
  3496  00751C  6E46               	movwf	___wmul@multiplicand+1,c
  3497  00751E  0E1A               	movlw	26
  3498  007520  6E45               	movwf	___wmul@multiplicand,c
  3499  007522  ECF1  F021         	call	___wmul	;wreg free
  3500  007526  0E41               	movlw	low _circle
  3501  007528  6E69               	movwf	??_main& (0+255),c
  3502  00752A  0E79               	movlw	high _circle
  3503  00752C  6E6A               	movwf	(??_main+1)& (0+255),c
  3504  00752E  5043               	movf	?___wmul,w,c
  3505  007530  2669               	addwf	??_main,f,c
  3506  007532  5044               	movf	?___wmul+1,w,c
  3507  007534  226A               	addwfc	??_main+1,f,c
  3508  007536  5077               	movf	main@j,w,c
  3509  007538  2669               	addwf	??_main,f,c
  3510  00753A  5078               	movf	main@j+1,w,c
  3511  00753C  226A               	addwfc	??_main+1,f,c
  3512  00753E  C069  FFF6         	movff	??_main,tblptrl
  3513  007542  C06A  FFF7         	movff	??_main+1,tblptrh
  3514  007546                     	if	0	;tblptru may be non-zero
  3515  007546                     	endif
  3516  007546                     	if	0	;tblptru may be non-zero
  3517  007546                     	endif
  3518  007546  0008               	tblrd		*
  3519  007548  50F5               	movf	tablat,w,c
  3520  00754A  1879               	xorwf	main@h,w,c
  3521  00754C  A4D8               	btfss	status,2,c
  3522  00754E  D003               	goto	l210
  3523                           
  3524                           ;newmain.c: 558: m = i;
  3525  007550  C07A  F076         	movff	main@i,main@m
  3526                           
  3527                           ;newmain.c: 559: goto A;
  3528  007554  D006               	goto	u6750
  3529  007556                     l210:
  3530  007556  4A77               	infsnz	main@j,f,c
  3531  007558  2A78               	incf	main@j+1,f,c
  3532  00755A  D7B4               	goto	l5004
  3533  00755C                     u6740:
  3534  00755C                     l5018:
  3535  00755C  4A7A               	infsnz	main@i,f,c
  3536  00755E  2A7B               	incf	main@i+1,f,c
  3537  007560  D7A5               	goto	l4998
  3538  007562                     u6750:
  3539  007562                     l5022:
  3540                           
  3541                           ;newmain.c: 563: animation3(m);
  3542  007562  5076               	movf	main@m,w,c
  3543  007564  EC54  F033         	call	_animation3
  3544                           
  3545                           ;newmain.c: 564: } else if (rightbutton == 8 && column != 19) {
  3546  007568  D084               	goto	l224
  3547  00756A                     l204:
  3548  00756A  0E08               	movlw	8
  3549  00756C  1874               	xorwf	main@rightbutton,w,c
  3550  00756E  A4D8               	btfss	status,2,c
  3551  007570  D00D               	goto	l213
  3552  007572  0E13               	movlw	19
  3553  007574  1875               	xorwf	main@column,w,c
  3554  007576  B4D8               	btfsc	status,2,c
  3555  007578  D009               	goto	l213
  3556                           
  3557                           ;newmain.c: 565: m = h >> 4;
  3558  00757A  3879               	swapf	main@h,w,c
  3559  00757C  0B0F               	andlw	15
  3560  00757E  6E76               	movwf	main@m,c
  3561                           
  3562                           ;newmain.c: 566: animation4(m, h);
  3563  007580  C079  F058         	movff	main@h,animation4@h
  3564  007584  5076               	movf	main@m,w,c
  3565  007586  EC27  F02B         	call	_animation4
  3566                           
  3567                           ;newmain.c: 567: } else if (rightbutton == 9 && column != 19) {
  3568  00758A  D073               	goto	l224
  3569  00758C                     l213:
  3570  00758C  0E09               	movlw	9
  3571  00758E  1874               	xorwf	main@rightbutton,w,c
  3572  007590  A4D8               	btfss	status,2,c
  3573  007592  D012               	goto	l215
  3574  007594  0E13               	movlw	19
  3575  007596  1875               	xorwf	main@column,w,c
  3576  007598  B4D8               	btfsc	status,2,c
  3577  00759A  D00E               	goto	l215
  3578                           
  3579                           ;newmain.c: 569: m = h >> 4;
  3580  00759C  3879               	swapf	main@h,w,c
  3581  00759E  0B0F               	andlw	15
  3582  0075A0  6E76               	movwf	main@m,c
  3583                           
  3584                           ;newmain.c: 570: n = h & 0x0f;
  3585  0075A2  5079               	movf	main@h,w,c
  3586  0075A4  0B0F               	andlw	15
  3587  0075A6  6E73               	movwf	main@n,c
  3588                           
  3589                           ;newmain.c: 571: animation5(m, n, h);
  3590  0075A8  C073  F058         	movff	main@n,animation5@n
  3591  0075AC  C079  F059         	movff	main@h,animation5@h
  3592  0075B0  5076               	movf	main@m,w,c
  3593  0075B2  ECB2  F027         	call	_animation5
  3594                           
  3595                           ;newmain.c: 573: } else if (rightbutton == 10 && column != 19) {
  3596  0075B6  D05D               	goto	l224
  3597  0075B8                     l215:
  3598  0075B8  0E0A               	movlw	10
  3599  0075BA  1874               	xorwf	main@rightbutton,w,c
  3600  0075BC  A4D8               	btfss	status,2,c
  3601  0075BE  D04E               	goto	l217
  3602  0075C0  0E13               	movlw	19
  3603  0075C2  1875               	xorwf	main@column,w,c
  3604  0075C4  B4D8               	btfsc	status,2,c
  3605  0075C6  D04A               	goto	l217
  3606                           
  3607                           ;newmain.c: 574: for (i = 0; i < 8; i++) {
  3608  0075C8  0E00               	movlw	0
  3609  0075CA  6E7B               	movwf	main@i+1,c
  3610  0075CC  0E00               	movlw	0
  3611  0075CE  6E7A               	movwf	main@i,c
  3612  0075D0                     l5046:
  3613  0075D0  BE7B               	btfsc	main@i+1,7,c
  3614  0075D2  D006               	goto	l218
  3615  0075D4  507B               	movf	main@i+1,w,c
  3616  0075D6  E13C               	bnz	l5068
  3617  0075D8  0E08               	movlw	8
  3618  0075DA  5C7A               	subwf	main@i,w,c
  3619  0075DC  B0D8               	btfsc	status,0,c
  3620  0075DE  D038               	goto	u6860
  3621  0075E0                     l218:
  3622                           
  3623                           ;newmain.c: 575: for (j = 0; j < 8; j++) {
  3624  0075E0  0E00               	movlw	0
  3625  0075E2  6E78               	movwf	main@j+1,c
  3626  0075E4  0E00               	movlw	0
  3627  0075E6  6E77               	movwf	main@j,c
  3628  0075E8                     l5052:
  3629  0075E8  BE78               	btfsc	main@j+1,7,c
  3630  0075EA  D006               	goto	l220
  3631  0075EC  5078               	movf	main@j+1,w,c
  3632  0075EE  E12D               	bnz	l5064
  3633  0075F0  0E08               	movlw	8
  3634  0075F2  5C77               	subwf	main@j,w,c
  3635  0075F4  B0D8               	btfsc	status,0,c
  3636  0075F6  D029               	goto	u6850
  3637  0075F8                     l220:
  3638                           
  3639                           ;newmain.c: 576: if (h == Buttons[i][j]) {
  3640  0075F8  C07A  F069         	movff	main@i,??_main
  3641  0075FC  C07B  F06A         	movff	main@i+1,??_main+1
  3642  007600  90D8               	bcf	status,0,c
  3643  007602  3669               	rlcf	??_main,f,c
  3644  007604  366A               	rlcf	??_main+1,f,c
  3645  007606  90D8               	bcf	status,0,c
  3646  007608  3669               	rlcf	??_main,f,c
  3647  00760A  366A               	rlcf	??_main+1,f,c
  3648  00760C  90D8               	bcf	status,0,c
  3649  00760E  3669               	rlcf	??_main,f,c
  3650  007610  366A               	rlcf	??_main+1,f,c
  3651  007612  0EF9               	movlw	low _Buttons
  3652  007614  6E6B               	movwf	(??_main+2)& (0+255),c
  3653  007616  0E7B               	movlw	high _Buttons
  3654  007618  6E6C               	movwf	(??_main+3)& (0+255),c
  3655  00761A  5069               	movf	??_main,w,c
  3656  00761C  266B               	addwf	??_main+2,f,c
  3657  00761E  506A               	movf	??_main+1,w,c
  3658  007620  226C               	addwfc	??_main+3,f,c
  3659  007622  5077               	movf	main@j,w,c
  3660  007624  266B               	addwf	??_main+2,f,c
  3661  007626  5078               	movf	main@j+1,w,c
  3662  007628  226C               	addwfc	??_main+3,f,c
  3663  00762A  C06B  FFF6         	movff	??_main+2,tblptrl
  3664  00762E  C06C  FFF7         	movff	??_main+3,tblptrh
  3665  007632                     	if	0	;tblptru may be non-zero
  3666  007632                     	endif
  3667  007632                     	if	0	;tblptru may be non-zero
  3668  007632                     	endif
  3669  007632  0008               	tblrd		*
  3670  007634  50F5               	movf	tablat,w,c
  3671  007636  1879               	xorwf	main@h,w,c
  3672  007638  A4D8               	btfss	status,2,c
  3673  00763A  D004               	goto	l222
  3674                           
  3675                           ;newmain.c: 577: m = i;
  3676  00763C  C07A  F076         	movff	main@i,main@m
  3677                           
  3678                           ;newmain.c: 578: n = j;
  3679  007640  C077  F073         	movff	main@j,main@n
  3680  007644                     l222:
  3681  007644  4A77               	infsnz	main@j,f,c
  3682  007646  2A78               	incf	main@j+1,f,c
  3683  007648  D7CF               	goto	l5052
  3684  00764A                     u6850:
  3685  00764A                     l5064:
  3686  00764A  4A7A               	infsnz	main@i,f,c
  3687  00764C  2A7B               	incf	main@i+1,f,c
  3688  00764E  D7C0               	goto	l5046
  3689  007650                     u6860:
  3690  007650                     l5068:
  3691                           
  3692                           ;newmain.c: 579: }
  3693                           ;newmain.c: 580: }
  3694                           ;newmain.c: 581: }
  3695                           ;newmain.c: 582: animation6(m, n);
  3696  007650  C073  F058         	movff	main@n,animation6@n
  3697  007654  5076               	movf	main@m,w,c
  3698  007656  EC49  F026         	call	_animation6
  3699                           
  3700                           ;newmain.c: 583: } else if (rightbutton == 11 && column != 19) {
  3701  00765A  D00B               	goto	l224
  3702  00765C                     l217:
  3703  00765C  0E0B               	movlw	11
  3704  00765E  1874               	xorwf	main@rightbutton,w,c
  3705  007660  A4D8               	btfss	status,2,c
  3706  007662  D007               	goto	l224
  3707  007664  0E13               	movlw	19
  3708  007666  1875               	xorwf	main@column,w,c
  3709  007668  B4D8               	btfsc	status,2,c
  3710  00766A  D003               	goto	l224
  3711                           
  3712                           ;newmain.c: 584: animation7(h);
  3713  00766C  5079               	movf	main@h,w,c
  3714  00766E  EC5D  F02D         	call	_animation7
  3715  007672                     l224:
  3716                           
  3717                           ;newmain.c: 585: }
  3718                           ;newmain.c: 588: for (k = 0; k < 64; k++) {
  3719  007672  0E00               	movlw	0
  3720  007674  6E72               	movwf	main@k,c
  3721  007676                     l5078:
  3722  007676  0E3F               	movlw	63
  3723  007678  6472               	cpfsgt	main@k,c
  3724  00767A  D001               	goto	l225
  3725  00767C  D011               	goto	u6910
  3726  00767E                     l225:
  3727                           
  3728                           ;newmain.c: 589: if (press[k] == 1) {
  3729  00767E  5072               	movf	main@k,w,c
  3730  007680  0D02               	mullw	2
  3731  007682  0E00               	movlw	low _press
  3732  007684  24F3               	addwf	prodl,w,c
  3733  007686  6ED9               	movwf	fsr2l,c
  3734  007688  0E01               	movlw	high _press
  3735  00768A  20F4               	addwfc	prodh,w,c
  3736  00768C  6EDA               	movwf	fsr2h,c
  3737  00768E  04DE               	decf	postinc2,w,c
  3738  007690  10DE               	iorwf	postinc2,w,c
  3739  007692  A4D8               	btfss	status,2,c
  3740  007694  D003               	goto	l227
  3741                           
  3742                           ;newmain.c: 590: set_led(k);
  3743  007696  5072               	movf	main@k,w,c
  3744  007698  EC58  F023         	call	_set_led
  3745  00769C                     l227:
  3746  00769C  2A72               	incf	main@k,f,c
  3747  00769E  D7EB               	goto	l5078
  3748  0076A0                     u6910:
  3749                           
  3750                           ;newmain.c: 591: }
  3751                           ;newmain.c: 592: }
  3752                           ;newmain.c: 593: write_display();
  3753  0076A0  EC0A  F024         	call	_write_display	;wreg free
  3754                           
  3755                           ;newmain.c: 594: break;
  3756  0076A4  D497               	goto	l151
  3757  0076A6                     l155:
  3758  0076A6  2A79               	incf	main@h,f,c
  3759  0076A8  D49C               	goto	l4802
  3760  0076AA                     
  3761                           ;newmain.c: 595: }
  3762                           ;newmain.c: 596: }
  3763                           ;newmain.c: 598: }
  3764                           ;newmain.c: 599: }
  3765                           ;newmain.c: 601: while (1);
  3766  0076AA  D7FF               	goto	l229
  3767  0076AC                     __end_of_main:
  3768                           	opt stack 0
  3769                           tblptru	equ	0xFF8
  3770                           tblptrh	equ	0xFF7
  3771                           tblptrl	equ	0xFF6
  3772                           tablat	equ	0xFF5
  3773                           prodh	equ	0xFF4
  3774                           prodl	equ	0xFF3
  3775                           postinc0	equ	0xFEE
  3776                           wreg	equ	0xFE8
  3777                           indf2	equ	0xFDF
  3778                           postinc2	equ	0xFDE
  3779                           postdec2	equ	0xFDD
  3780                           fsr2h	equ	0xFDA
  3781                           fsr2l	equ	0xFD9
  3782                           status	equ	0xFD8
  3783                           
  3784 ;; *************** function _was_key_pressed *****************
  3785 ;; Defined at:
  3786 ;;		line 1219 in file "newmain.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  k               1    wreg     unsigned char 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  k               1   18[COMRAM] unsigned char 
  3791 ;;  led             2   16[COMRAM] int 
  3792 ;;  matrix          2   14[COMRAM] int 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      unsigned char 
  3795 ;; Registers used:
  3796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3802 ;;      Params:         0       0       0       0       0       0       0
  3803 ;;      Locals:         5       0       0       0       0       0       0
  3804 ;;      Temps:          8       0       0       0       0       0       0
  3805 ;;      Totals:        13       0       0       0       0       0       0
  3806 ;;Total ram usage:       13 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    1
  3809 ;; This function calls:
  3810 ;;		___wmul
  3811 ;; This function is called by:
  3812 ;;		_main
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text1
  3817  00460E                     __ptext1:
  3818                           	opt stack 0
  3819  00460E                     _was_key_pressed:
  3820                           	opt stack 29
  3821                           
  3822                           ;incstack = 0
  3823                           ;was_key_pressed@k stored from wreg
  3824  00460E  6E55               	movwf	was_key_pressed@k,c
  3825                           
  3826                           ;newmain.c: 1220: int matrix = k >> 4;
  3827  004610  C055  F049         	movff	was_key_pressed@k,??_was_key_pressed
  3828  004614  3A49               	swapf	??_was_key_pressed,f,c
  3829  004616  0E0F               	movlw	15
  3830  004618  1649               	andwf	??_was_key_pressed,f,c
  3831  00461A  5049               	movf	??_was_key_pressed,w,c
  3832  00461C  6E51               	movwf	was_key_pressed@matrix,c
  3833  00461E  6A52               	clrf	was_key_pressed@matrix+1,c
  3834                           
  3835                           ;newmain.c: 1221: int led = k & 0b1111;
  3836  004620  C055  F049         	movff	was_key_pressed@k,??_was_key_pressed
  3837  004624  0E0F               	movlw	15
  3838  004626  1649               	andwf	??_was_key_pressed,f,c
  3839  004628  5049               	movf	??_was_key_pressed,w,c
  3840  00462A  6E53               	movwf	was_key_pressed@led,c
  3841  00462C  6A54               	clrf	was_key_pressed@led+1,c
  3842                           
  3843                           ;newmain.c: 1222: return (matrices[matrix].last_keys[buttonLUT[led] >> 4]&(1 << (buttonL
      +                          UT[led]&0x0f)));
  3844  00462E  C051  F043         	movff	was_key_pressed@matrix,___wmul@multiplier
  3845  004632  C052  F044         	movff	was_key_pressed@matrix+1,___wmul@multiplier+1
  3846  004636  0E00               	movlw	0
  3847  004638  6E46               	movwf	___wmul@multiplicand+1,c
  3848  00463A  0E1D               	movlw	29
  3849  00463C  6E45               	movwf	___wmul@multiplicand,c
  3850  00463E  ECF1  F021         	call	___wmul	;wreg free
  3851  004642  0EDF               	movlw	low _buttonLUT
  3852  004644  2453               	addwf	was_key_pressed@led,w,c
  3853  004646  6EF6               	movwf	tblptrl,c
  3854  004648  0E7C               	movlw	high _buttonLUT
  3855  00464A  2054               	addwfc	was_key_pressed@led+1,w,c
  3856  00464C  6EF7               	movwf	tblptrh,c
  3857  00464E                     	if	0	;There are less than 3 active tblptr bytes
  3858  00464E                     	endif
  3859  00464E  0008               	tblrd		*
  3860  004650  CFF5 F049          	movff	tablat,??_was_key_pressed
  3861  004654  3849               	swapf	??_was_key_pressed,w,c
  3862  004656  0B0F               	andlw	15
  3863  004658  6E4A               	movwf	(??_was_key_pressed+1)& (0+255),c
  3864  00465A  6A4B               	clrf	(??_was_key_pressed+2)& (0+255),c
  3865  00465C  0E07               	movlw	7
  3866  00465E  264A               	addwf	??_was_key_pressed+1,f,c
  3867  004660  0E00               	movlw	0
  3868  004662  224B               	addwfc	??_was_key_pressed+2,f,c
  3869  004664  0E80               	movlw	low _matrices
  3870  004666  6E4C               	movwf	(??_was_key_pressed+3)& (0+255),c
  3871  004668  0E00               	movlw	high _matrices
  3872  00466A  6E4D               	movwf	(??_was_key_pressed+4)& (0+255),c
  3873  00466C  504A               	movf	??_was_key_pressed+1,w,c
  3874  00466E  264C               	addwf	??_was_key_pressed+3,f,c
  3875  004670  504B               	movf	??_was_key_pressed+2,w,c
  3876  004672  224D               	addwfc	??_was_key_pressed+4,f,c
  3877  004674  5043               	movf	?___wmul,w,c
  3878  004676  244C               	addwf	??_was_key_pressed+3,w,c
  3879  004678  6ED9               	movwf	fsr2l,c
  3880  00467A  5044               	movf	?___wmul+1,w,c
  3881  00467C  204D               	addwfc	??_was_key_pressed+4,w,c
  3882  00467E  6EDA               	movwf	fsr2h,c
  3883  004680  50DF               	movf	indf2,w,c
  3884  004682  6E4E               	movwf	(??_was_key_pressed+5)& (0+255),c
  3885  004684  0EDF               	movlw	low _buttonLUT
  3886  004686  2453               	addwf	was_key_pressed@led,w,c
  3887  004688  6EF6               	movwf	tblptrl,c
  3888  00468A  0E7C               	movlw	high _buttonLUT
  3889  00468C  2054               	addwfc	was_key_pressed@led+1,w,c
  3890  00468E  6EF7               	movwf	tblptrh,c
  3891  004690                     	if	0	;There are less than 3 active tblptr bytes
  3892  004690                     	endif
  3893  004690  0008               	tblrd		*
  3894  004692  CFF5 F04F          	movff	tablat,??_was_key_pressed+6
  3895  004696  0E0F               	movlw	15
  3896  004698  164F               	andwf	??_was_key_pressed+6,f,c
  3897  00469A  0E01               	movlw	1
  3898  00469C  6E50               	movwf	(??_was_key_pressed+7)& (0+255),c
  3899  00469E  2A4F               	incf	??_was_key_pressed+6,f,c
  3900  0046A0  D002               	goto	u3854
  3901  0046A2                     u3855:
  3902  0046A2  90D8               	bcf	status,0,c
  3903  0046A4  3650               	rlcf	??_was_key_pressed+7,f,c
  3904  0046A6                     u3854:
  3905  0046A6  2E4F               	decfsz	??_was_key_pressed+6,f,c
  3906  0046A8  D7FC               	goto	u3855
  3907  0046AA  5050               	movf	??_was_key_pressed+7,w,c
  3908  0046AC  144E               	andwf	??_was_key_pressed+5,w,c
  3909  0046AE  0012               	return	
  3910  0046B0                     __end_of_was_key_pressed:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           postinc0	equ	0xFEE
  3919                           wreg	equ	0xFE8
  3920                           indf2	equ	0xFDF
  3921                           postinc2	equ	0xFDE
  3922                           postdec2	equ	0xFDD
  3923                           fsr2h	equ	0xFDA
  3924                           fsr2l	equ	0xFD9
  3925                           status	equ	0xFD8
  3926                           
  3927 ;; *************** function _send_note *****************
  3928 ;; Defined at:
  3929 ;;		line 624 in file "newmain.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  one             1    wreg     unsigned char 
  3932 ;;  two             1    0[COMRAM] unsigned char 
  3933 ;;  three           1    1[COMRAM] unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  one             1    2[COMRAM] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3945 ;;      Params:         2       0       0       0       0       0       0
  3946 ;;      Locals:         1       0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0
  3948 ;;      Totals:         3       0       0       0       0       0       0
  3949 ;;Total ram usage:        3 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text2
  3959  0043C0                     __ptext2:
  3960                           	opt stack 0
  3961  0043C0                     _send_note:
  3962                           	opt stack 30
  3963                           
  3964                           ;incstack = 0
  3965                           ;send_note@one stored from wreg
  3966  0043C0  6E45               	movwf	send_note@one,c
  3967  0043C2                     
  3968                           ;newmain.c: 625: while (!PIR1bits.TXIF || !TRMT);
  3969  0043C2  B89E               	btfsc	3998,4,c	;volatile
  3970  0043C4  A2AC               	btfss	4012,1,c	;volatile
  3971  0043C6  D7FD               	goto	l3454
  3972                           
  3973                           ;newmain.c: 626: TXREG = one;
  3974  0043C8  C045  FFAD         	movff	send_note@one,4013	;volatile
  3975  0043CC  B89E               	btfsc	3998,4,c	;volatile
  3976  0043CE  A2AC               	btfss	4012,1,c	;volatile
  3977  0043D0  D7FD               	goto	l243
  3978                           
  3979                           ;newmain.c: 628: TXREG = two;
  3980  0043D2  C043  FFAD         	movff	send_note@two,4013	;volatile
  3981  0043D6  B89E               	btfsc	3998,4,c	;volatile
  3982  0043D8  A2AC               	btfss	4012,1,c	;volatile
  3983  0043DA  D7FD               	goto	l246
  3984                           
  3985                           ;newmain.c: 630: TXREG = three;
  3986  0043DC  C044  FFAD         	movff	send_note@three,4013	;volatile
  3987  0043E0  0012               	return		;funcret
  3988  0043E2                     __end_of_send_note:
  3989                           	opt stack 0
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           prodh	equ	0xFF4
  3995                           prodl	equ	0xFF3
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           indf2	equ	0xFDF
  3999                           postinc2	equ	0xFDE
  4000                           postdec2	equ	0xFDD
  4001                           fsr2h	equ	0xFDA
  4002                           fsr2l	equ	0xFD9
  4003                           status	equ	0xFD8
  4004                           
  4005 ;; *************** function _read_switch *****************
  4006 ;; Defined at:
  4007 ;;		line 1225 in file "newmain.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  j               2   29[COMRAM] int 
  4012 ;;  i               2   27[COMRAM] int 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      unsigned char 
  4015 ;; Registers used:
  4016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4022 ;;      Params:         0       0       0       0       0       0       0
  4023 ;;      Locals:         4       0       0       0       0       0       0
  4024 ;;      Temps:         10       0       0       0       0       0       0
  4025 ;;      Totals:        14       0       0       0       0       0       0
  4026 ;;Total ram usage:       14 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    3
  4029 ;; This function calls:
  4030 ;;		_MyIdleI2C
  4031 ;;		_MyNotAckI2C
  4032 ;;		_MyStartI2C
  4033 ;;		_MyStopI2C
  4034 ;;		_MygetsI2C
  4035 ;;		___wmul
  4036 ;;		_memcpy
  4037 ;;		_write
  4038 ;; This function is called by:
  4039 ;;		_main
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text3
  4044  004AAC                     __ptext3:
  4045                           	opt stack 0
  4046  004AAC                     _read_switch:
  4047                           	opt stack 27
  4048                           
  4049                           ;newmain.c: 1226: int i, j;
  4050                           ;newmain.c: 1227: for (j = 0; j < 4; j++) {
  4051                           
  4052                           ;incstack = 0
  4053  004AAC  0E00               	movlw	0
  4054  004AAE  6E61               	movwf	read_switch@j+1,c
  4055  004AB0  0E00               	movlw	0
  4056  004AB2  6E60               	movwf	read_switch@j,c
  4057  004AB4  BE61               	btfsc	read_switch@j+1,7,c
  4058  004AB6  D008               	goto	l573
  4059  004AB8  5061               	movf	read_switch@j+1,w,c
  4060  004ABA  E105               	bnz	u3780
  4061  004ABC  0E04               	movlw	4
  4062  004ABE  5C60               	subwf	read_switch@j,w,c
  4063  004AC0  B0D8               	btfsc	status,0,c
  4064  004AC2  D0E5               	goto	u3830
  4065  004AC4  D001               	goto	l573
  4066  004AC6                     u3780:
  4067  004AC6  D0E3               	goto	u3830
  4068  004AC8                     l573:
  4069                           
  4070                           ;newmain.c: 1228: memcpy(matrices[j].last_keys, matrices[j].keys, sizeof (matrices[j].ke
      +                          ys));
  4071  004AC8  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4072  004ACC  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4073  004AD0  0E00               	movlw	0
  4074  004AD2  6E46               	movwf	___wmul@multiplicand+1,c
  4075  004AD4  0E1D               	movlw	29
  4076  004AD6  6E45               	movwf	___wmul@multiplicand,c
  4077  004AD8  ECF1  F021         	call	___wmul	;wreg free
  4078  004ADC  0E07               	movlw	7
  4079  004ADE  2643               	addwf	?___wmul,f,c
  4080  004AE0  0E00               	movlw	0
  4081  004AE2  2244               	addwfc	?___wmul+1,f,c
  4082  004AE4  0E80               	movlw	low _matrices
  4083  004AE6  2443               	addwf	?___wmul,w,c
  4084  004AE8  6E49               	movwf	memcpy@d1,c
  4085  004AEA  0E00               	movlw	high _matrices
  4086  004AEC  2044               	addwfc	?___wmul+1,w,c
  4087  004AEE  6E4A               	movwf	memcpy@d1+1,c
  4088  004AF0  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4089  004AF4  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4090  004AF8  0E00               	movlw	0
  4091  004AFA  6E46               	movwf	___wmul@multiplicand+1,c
  4092  004AFC  0E1D               	movlw	29
  4093  004AFE  6E45               	movwf	___wmul@multiplicand,c
  4094  004B00  ECF1  F021         	call	___wmul	;wreg free
  4095  004B04  0E01               	movlw	1
  4096  004B06  2643               	addwf	?___wmul,f,c
  4097  004B08  0E00               	movlw	0
  4098  004B0A  2244               	addwfc	?___wmul+1,f,c
  4099  004B0C  0E80               	movlw	low _matrices
  4100  004B0E  2443               	addwf	?___wmul,w,c
  4101  004B10  6E4B               	movwf	memcpy@s1,c
  4102  004B12  0E00               	movlw	high _matrices
  4103  004B14  2044               	addwfc	?___wmul+1,w,c
  4104  004B16  6E4C               	movwf	memcpy@s1+1,c
  4105  004B18  0E00               	movlw	0
  4106  004B1A  6E4E               	movwf	memcpy@n+1,c
  4107  004B1C  0E06               	movlw	6
  4108  004B1E  6E4D               	movwf	memcpy@n,c
  4109  004B20  EC1B  F022         	call	_memcpy	;wreg free
  4110                           
  4111                           ;newmain.c: 1230: MyIdleI2C();
  4112  004B24  ECB0  F021         	call	_MyIdleI2C	;wreg free
  4113                           
  4114                           ;newmain.c: 1231: MyStartI2C();
  4115  004B28  ECA9  F021         	call	_MyStartI2C	;wreg free
  4116                           
  4117                           ;newmain.c: 1232: MyIdleI2C();
  4118  004B2C  ECB0  F021         	call	_MyIdleI2C	;wreg free
  4119                           
  4120                           ;newmain.c: 1233: write(matrices[j].address | 0x00);
  4121  004B30  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4122  004B34  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4123  004B38  0E00               	movlw	0
  4124  004B3A  6E46               	movwf	___wmul@multiplicand+1,c
  4125  004B3C  0E1D               	movlw	29
  4126  004B3E  6E45               	movwf	___wmul@multiplicand,c
  4127  004B40  ECF1  F021         	call	___wmul	;wreg free
  4128  004B44  0E80               	movlw	low _matrices
  4129  004B46  2443               	addwf	?___wmul,w,c
  4130  004B48  6ED9               	movwf	fsr2l,c
  4131  004B4A  0E00               	movlw	high _matrices
  4132  004B4C  2044               	addwfc	?___wmul+1,w,c
  4133  004B4E  6EDA               	movwf	fsr2h,c
  4134  004B50  50DF               	movf	indf2,w,c
  4135  004B52  EC04  F022         	call	_write
  4136                           
  4137                           ;newmain.c: 1234: MyIdleI2C();
  4138  004B56  ECB0  F021         	call	_MyIdleI2C	;wreg free
  4139                           
  4140                           ;newmain.c: 1235: write(0x40);
  4141  004B5A  0E40               	movlw	64
  4142  004B5C  EC04  F022         	call	_write
  4143                           
  4144                           ;newmain.c: 1236: MyIdleI2C();
  4145  004B60  ECB0  F021         	call	_MyIdleI2C	;wreg free
  4146                           
  4147                           ;newmain.c: 1237: MyStopI2C();
  4148  004B64  ECAB  F021         	call	_MyStopI2C	;wreg free
  4149                           
  4150                           ;newmain.c: 1239: MyIdleI2C();
  4151  004B68  ECB0  F021         	call	_MyIdleI2C	;wreg free
  4152                           
  4153                           ;newmain.c: 1240: MyStartI2C();
  4154  004B6C  ECA9  F021         	call	_MyStartI2C	;wreg free
  4155                           
  4156                           ;newmain.c: 1241: MyIdleI2C();
  4157  004B70  ECB0  F021         	call	_MyIdleI2C	;wreg free
  4158                           
  4159                           ;newmain.c: 1242: write(matrices[j].address | 0x01);
  4160  004B74  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4161  004B78  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4162  004B7C  0E00               	movlw	0
  4163  004B7E  6E46               	movwf	___wmul@multiplicand+1,c
  4164  004B80  0E1D               	movlw	29
  4165  004B82  6E45               	movwf	___wmul@multiplicand,c
  4166  004B84  ECF1  F021         	call	___wmul	;wreg free
  4167  004B88  0E80               	movlw	low _matrices
  4168  004B8A  2443               	addwf	?___wmul,w,c
  4169  004B8C  6ED9               	movwf	fsr2l,c
  4170  004B8E  0E00               	movlw	high _matrices
  4171  004B90  2044               	addwfc	?___wmul+1,w,c
  4172  004B92  6EDA               	movwf	fsr2h,c
  4173  004B94  50DF               	movf	indf2,w,c
  4174  004B96  0901               	iorlw	1
  4175  004B98  EC04  F022         	call	_write
  4176                           
  4177                           ;newmain.c: 1243: MyIdleI2C();
  4178  004B9C  ECB0  F021         	call	_MyIdleI2C	;wreg free
  4179  004BA0  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4180  004BA4  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4181  004BA8  0E00               	movlw	0
  4182  004BAA  6E46               	movwf	___wmul@multiplicand+1,c
  4183  004BAC  0E1D               	movlw	29
  4184  004BAE  6E45               	movwf	___wmul@multiplicand,c
  4185  004BB0  ECF1  F021         	call	___wmul	;wreg free
  4186  004BB4  0E01               	movlw	1
  4187  004BB6  2643               	addwf	?___wmul,f,c
  4188  004BB8  0E00               	movlw	0
  4189  004BBA  2244               	addwfc	?___wmul+1,f,c
  4190  004BBC  0E80               	movlw	low _matrices
  4191  004BBE  2443               	addwf	?___wmul,w,c
  4192  004BC0  6E49               	movwf	MygetsI2C@rdptr,c
  4193  004BC2  0E00               	movlw	high _matrices
  4194  004BC4  2044               	addwfc	?___wmul+1,w,c
  4195  004BC6  6E4A               	movwf	MygetsI2C@rdptr+1,c
  4196  004BC8  0E06               	movlw	6
  4197  004BCA  6E4B               	movwf	MygetsI2C@length,c
  4198  004BCC  EC60  F022         	call	_MygetsI2C	;wreg free
  4199  004BD0  0900               	iorlw	0
  4200  004BD2  A4D8               	btfss	status,2,c
  4201  004BD4  D7E5               	goto	l576
  4202                           
  4203                           ;newmain.c: 1245: MyNotAckI2C();
  4204  004BD6  ECAD  F021         	call	_MyNotAckI2C	;wreg free
  4205                           
  4206                           ;newmain.c: 1246: MyStopI2C();
  4207  004BDA  ECAB  F021         	call	_MyStopI2C	;wreg free
  4208                           
  4209                           ;newmain.c: 1248: for (i = 0; i < 6; i++) {
  4210  004BDE  0E00               	movlw	0
  4211  004BE0  6E5F               	movwf	read_switch@i+1,c
  4212  004BE2  0E00               	movlw	0
  4213  004BE4  6E5E               	movwf	read_switch@i,c
  4214  004BE6                     l3420:
  4215  004BE6  BE5F               	btfsc	read_switch@i+1,7,c
  4216  004BE8  D006               	goto	l578
  4217  004BEA  505F               	movf	read_switch@i+1,w,c
  4218  004BEC  E149               	bnz	l3434
  4219  004BEE  0E06               	movlw	6
  4220  004BF0  5C5E               	subwf	read_switch@i,w,c
  4221  004BF2  B0D8               	btfsc	status,0,c
  4222  004BF4  D045               	goto	u3820
  4223  004BF6                     l578:
  4224                           
  4225                           ;newmain.c: 1249: if (matrices[j].keys[i] != matrices[j].last_keys[i]) {
  4226  004BF6  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4227  004BFA  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4228  004BFE  0E00               	movlw	0
  4229  004C00  6E46               	movwf	___wmul@multiplicand+1,c
  4230  004C02  0E1D               	movlw	29
  4231  004C04  6E45               	movwf	___wmul@multiplicand,c
  4232  004C06  ECF1  F021         	call	___wmul	;wreg free
  4233  004C0A  0E07               	movlw	7
  4234  004C0C  245E               	addwf	read_switch@i,w,c
  4235  004C0E  6E54               	movwf	??_read_switch& (0+255),c
  4236  004C10  0E00               	movlw	0
  4237  004C12  205F               	addwfc	read_switch@i+1,w,c
  4238  004C14  6E55               	movwf	(??_read_switch+1)& (0+255),c
  4239  004C16  0E80               	movlw	low _matrices
  4240  004C18  6E56               	movwf	(??_read_switch+2)& (0+255),c
  4241  004C1A  0E00               	movlw	high _matrices
  4242  004C1C  6E57               	movwf	(??_read_switch+3)& (0+255),c
  4243  004C1E  5054               	movf	??_read_switch,w,c
  4244  004C20  2656               	addwf	??_read_switch+2,f,c
  4245  004C22  5055               	movf	??_read_switch+1,w,c
  4246  004C24  2257               	addwfc	??_read_switch+3,f,c
  4247  004C26  5043               	movf	?___wmul,w,c
  4248  004C28  2456               	addwf	??_read_switch+2,w,c
  4249  004C2A  6ED9               	movwf	fsr2l,c
  4250  004C2C  5044               	movf	?___wmul+1,w,c
  4251  004C2E  2057               	addwfc	??_read_switch+3,w,c
  4252  004C30  6EDA               	movwf	fsr2h,c
  4253  004C32  C060  F043         	movff	read_switch@j,___wmul@multiplier
  4254  004C36  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  4255  004C3A  0E00               	movlw	0
  4256  004C3C  6E46               	movwf	___wmul@multiplicand+1,c
  4257  004C3E  0E1D               	movlw	29
  4258  004C40  6E45               	movwf	___wmul@multiplicand,c
  4259  004C42  ECF1  F021         	call	___wmul	;wreg free
  4260  004C46  0E01               	movlw	1
  4261  004C48  245E               	addwf	read_switch@i,w,c
  4262  004C4A  6E59               	movwf	(??_read_switch+5)& (0+255),c
  4263  004C4C  0E00               	movlw	0
  4264  004C4E  205F               	addwfc	read_switch@i+1,w,c
  4265  004C50  6E5A               	movwf	(??_read_switch+6)& (0+255),c
  4266  004C52  0E80               	movlw	low _matrices
  4267  004C54  6E5B               	movwf	(??_read_switch+7)& (0+255),c
  4268  004C56  0E00               	movlw	high _matrices
  4269  004C58  6E5C               	movwf	(??_read_switch+8)& (0+255),c
  4270  004C5A  5059               	movf	??_read_switch+5,w,c
  4271  004C5C  265B               	addwf	??_read_switch+7,f,c
  4272  004C5E  505A               	movf	??_read_switch+6,w,c
  4273  004C60  225C               	addwfc	??_read_switch+8,f,c
  4274  004C62  5043               	movf	?___wmul,w,c
  4275  004C64  245B               	addwf	??_read_switch+7,w,c
  4276  004C66  6EE1               	movwf	fsr1l,c
  4277  004C68  5044               	movf	?___wmul+1,w,c
  4278  004C6A  205C               	addwfc	??_read_switch+8,w,c
  4279  004C6C  6EE2               	movwf	fsr1h,c
  4280  004C6E  50DE               	movf	postinc2,w,c
  4281  004C70  18E6               	xorwf	postinc1,w,c
  4282  004C72  B4D8               	btfsc	status,2,c
  4283  004C74  D002               	goto	l580
  4284                           
  4285                           ;newmain.c: 1250: return 1;
  4286  004C76  0E01               	movlw	1
  4287  004C78  0012               	return	
  4288  004C7A                     l580:
  4289  004C7A  4A5E               	infsnz	read_switch@i,f,c
  4290  004C7C  2A5F               	incf	read_switch@i+1,f,c
  4291  004C7E  D7B3               	goto	l3420
  4292  004C80                     u3820:
  4293  004C80                     l3434:
  4294  004C80  4A60               	infsnz	read_switch@j,f,c
  4295  004C82  2A61               	incf	read_switch@j+1,f,c
  4296  004C84  BE61               	btfsc	read_switch@j+1,7,c
  4297  004C86  D720               	goto	l573
  4298  004C88  5061               	movf	read_switch@j+1,w,c
  4299  004C8A  E101               	bnz	l3438
  4300  004C8C  D717               	goto	L5
  4301  004C8E                     u3830:
  4302  004C8E                     l3438:
  4303                           
  4304                           ;newmain.c: 1251: }
  4305                           ;newmain.c: 1252: }
  4306                           ;newmain.c: 1254: }
  4307                           ;newmain.c: 1255: return 0;
  4308  004C8E  0E00               	movlw	0
  4309  004C90  0012               	return	
  4310  004C92                     __end_of_read_switch:
  4311                           	opt stack 0
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           postinc0	equ	0xFEE
  4319                           wreg	equ	0xFE8
  4320                           postinc1	equ	0xFE6
  4321                           fsr1h	equ	0xFE2
  4322                           fsr1l	equ	0xFE1
  4323                           indf2	equ	0xFDF
  4324                           postinc2	equ	0xFDE
  4325                           postdec2	equ	0xFDD
  4326                           fsr2h	equ	0xFDA
  4327                           fsr2l	equ	0xFD9
  4328                           status	equ	0xFD8
  4329                           
  4330 ;; *************** function _memcpy *****************
  4331 ;; Defined at:
  4332 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  d1              2    6[COMRAM] PTR void 
  4335 ;;		 -> matrices(116), 
  4336 ;;  s1              2    8[COMRAM] PTR const void 
  4337 ;;		 -> matrices.keys(6), matrices(116), 
  4338 ;;  n               2   10[COMRAM] unsigned int 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4341 ;;		 -> matrices.keys(6), matrices(116), 
  4342 ;;  d               2   12[COMRAM] PTR unsigned char 
  4343 ;;		 -> matrices(116), 
  4344 ;;  tmp             1   16[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    6[COMRAM] PTR void 
  4347 ;; Registers used:
  4348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4354 ;;      Params:         6       0       0       0       0       0       0
  4355 ;;      Locals:         5       0       0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0
  4357 ;;      Totals:        11       0       0       0       0       0       0
  4358 ;;Total ram usage:       11 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_read_switch
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text4
  4368  004436                     __ptext4:
  4369                           	opt stack 0
  4370  004436                     _memcpy:
  4371                           	opt stack 29
  4372                           
  4373                           ;incstack = 0
  4374  004436  C04B  F051         	movff	memcpy@s1,memcpy@s
  4375  00443A  C04C  F052         	movff	memcpy@s1+1,memcpy@s+1
  4376  00443E  C049  F04F         	movff	memcpy@d1,memcpy@d
  4377  004442  C04A  F050         	movff	memcpy@d1+1,memcpy@d+1
  4378  004446  D010               	goto	l1082
  4379  004448                     l3320:
  4380  004448  C051  FFD9         	movff	memcpy@s,fsr2l
  4381  00444C  C052  FFDA         	movff	memcpy@s+1,fsr2h
  4382  004450  50DF               	movf	indf2,w,c
  4383  004452  6E53               	movwf	memcpy@tmp,c
  4384  004454  4A51               	infsnz	memcpy@s,f,c
  4385  004456  2A52               	incf	memcpy@s+1,f,c
  4386  004458  C04F  FFD9         	movff	memcpy@d,fsr2l
  4387  00445C  C050  FFDA         	movff	memcpy@d+1,fsr2h
  4388  004460  C053  FFDF         	movff	memcpy@tmp,indf2
  4389  004464  4A4F               	infsnz	memcpy@d,f,c
  4390  004466  2A50               	incf	memcpy@d+1,f,c
  4391  004468                     l1082:
  4392  004468  064D               	decf	memcpy@n,f,c
  4393  00446A  A0D8               	btfss	status,0,c
  4394  00446C  064E               	decf	memcpy@n+1,f,c
  4395  00446E  284D               	incf	memcpy@n,w,c
  4396  004470  E1EB               	bnz	l3320
  4397  004472  284E               	incf	memcpy@n+1,w,c
  4398  004474  B4D8               	btfsc	status,2,c
  4399  004476  0012               	return	
  4400  004478  D7E7               	goto	l1083
  4401  00447A                     __end_of_memcpy:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           postinc0	equ	0xFEE
  4410                           wreg	equ	0xFE8
  4411                           postinc1	equ	0xFE6
  4412                           fsr1h	equ	0xFE2
  4413                           fsr1l	equ	0xFE1
  4414                           indf2	equ	0xFDF
  4415                           postinc2	equ	0xFDE
  4416                           postdec2	equ	0xFDD
  4417                           fsr2h	equ	0xFDA
  4418                           fsr2l	equ	0xFD9
  4419                           status	equ	0xFD8
  4420                           
  4421 ;; *************** function _MygetsI2C *****************
  4422 ;; Defined at:
  4423 ;;		line 1328 in file "newmain.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  rdptr           2    6[COMRAM] PTR unsigned char 
  4426 ;;		 -> matrices(116), 
  4427 ;;  length          1    8[COMRAM] unsigned char 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      char 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4439 ;;      Params:         3       0       0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0
  4442 ;;      Totals:         3       0       0       0       0       0       0
  4443 ;;Total ram usage:        3 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    1
  4446 ;; This function calls:
  4447 ;;		_MyReadI2C
  4448 ;; This function is called by:
  4449 ;;		_read_switch
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text5
  4454  0044C0                     __ptext5:
  4455                           	opt stack 0
  4456  0044C0                     _MygetsI2C:
  4457                           	opt stack 28
  4458                           
  4459                           ;newmain.c: 1329: while (length--)
  4460                           
  4461                           ;incstack = 0
  4462  0044C0  D020               	goto	u3760
  4463  0044C2                     
  4464                           ;newmain.c: 1330: {
  4465                           ;newmain.c: 1331: *rdptr++ = MyReadI2C();
  4466  0044C2  ECC3  F021         	call	_MyReadI2C	;wreg free
  4467  0044C6  C049  FFD9         	movff	MygetsI2C@rdptr,fsr2l
  4468  0044CA  C04A  FFDA         	movff	MygetsI2C@rdptr+1,fsr2h
  4469  0044CE  6EDF               	movwf	indf2,c
  4470  0044D0  4A49               	infsnz	MygetsI2C@rdptr,f,c
  4471  0044D2  2A4A               	incf	MygetsI2C@rdptr+1,f,c
  4472  0044D4  B6C5               	btfsc	4037,3,c	;volatile
  4473  0044D6  D7FE               	goto	l631
  4474                           
  4475                           ;newmain.c: 1334: if (PIR2bits.BCLIF)
  4476  0044D8  A6A1               	btfss	4001,3,c	;volatile
  4477  0044DA  D002               	goto	l633
  4478                           
  4479                           ;newmain.c: 1335: {
  4480                           ;newmain.c: 1336: return ( -1);
  4481  0044DC  0EFF               	movlw	255
  4482  0044DE  0012               	return	
  4483  0044E0                     l633:
  4484                           
  4485                           ;newmain.c: 1337: }
  4486                           ;newmain.c: 1339: if (((SSPCON1 & 0x0F) == 0x08) || ((SSPCON1 & 0x0F) == 0x0B))
  4487  0044E0  50C6               	movf	4038,w,c	;volatile
  4488  0044E2  0B0F               	andlw	15
  4489  0044E4  0A08               	xorlw	8
  4490  0044E6  B4D8               	btfsc	status,2,c
  4491  0044E8  D005               	goto	u3740
  4492  0044EA  50C6               	movf	4038,w,c	;volatile
  4493  0044EC  0B0F               	andlw	15
  4494  0044EE  0A0B               	xorlw	11
  4495  0044F0  A4D8               	btfss	status,2,c
  4496  0044F2  D007               	goto	u3760
  4497  0044F4                     u3740:
  4498                           
  4499                           ;newmain.c: 1340: {
  4500                           ;newmain.c: 1341: if (length)
  4501  0044F4  504B               	movf	MygetsI2C@length,w,c
  4502  0044F6  B4D8               	btfsc	status,2,c
  4503  0044F8  D004               	goto	u3760
  4504                           
  4505                           ;newmain.c: 1342: {
  4506                           ;newmain.c: 1343: SSPCON2bits.ACKDT = 0;
  4507  0044FA  9AC5               	bcf	4037,5,c	;volatile
  4508                           
  4509                           ;newmain.c: 1344: SSPCON2bits.ACKEN = 1;
  4510  0044FC  88C5               	bsf	4037,4,c	;volatile
  4511  0044FE  B8C5               	btfsc	4037,4,c	;volatile
  4512  004500  D7FE               	goto	l640
  4513  004502                     u3760:
  4514  004502  064B               	decf	MygetsI2C@length,f,c
  4515  004504  284B               	incf	MygetsI2C@length,w,c
  4516  004506  A4D8               	btfss	status,2,c
  4517  004508  D7DC               	goto	l629
  4518                           
  4519                           ;newmain.c: 1346: }
  4520                           ;newmain.c: 1347: }
  4521                           ;newmain.c: 1349: }
  4522                           ;newmain.c: 1350: return ( 0);
  4523  00450A  0E00               	movlw	0
  4524  00450C  0012               	return	
  4525  00450E                     __end_of_MygetsI2C:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           postinc0	equ	0xFEE
  4534                           wreg	equ	0xFE8
  4535                           postinc1	equ	0xFE6
  4536                           fsr1h	equ	0xFE2
  4537                           fsr1l	equ	0xFE1
  4538                           indf2	equ	0xFDF
  4539                           postinc2	equ	0xFDE
  4540                           postdec2	equ	0xFDD
  4541                           fsr2h	equ	0xFDA
  4542                           fsr2l	equ	0xFD9
  4543                           status	equ	0xFD8
  4544                           
  4545 ;; *************** function _MyReadI2C *****************
  4546 ;; Defined at:
  4547 ;;		line 1358 in file "newmain.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      unsigned char 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4561 ;;      Params:         0       0       0       0       0       0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0
  4564 ;;      Totals:         0       0       0       0       0       0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_MygetsI2C
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text6
  4575  004386                     __ptext6:
  4576                           	opt stack 0
  4577  004386                     _MyReadI2C:
  4578                           	opt stack 28
  4579                           
  4580                           ;newmain.c: 1359: if (((SSPCON1 & 0x0F) == 0x08) || ((SSPCON1 & 0x0F) == 0x0B))
  4581                           
  4582                           ;incstack = 0
  4583  004386  50C6               	movf	4038,w,c	;volatile
  4584  004388  0B0F               	andlw	15
  4585  00438A  0A08               	xorlw	8
  4586  00438C  B4D8               	btfsc	status,2,c
  4587  00438E  D004               	goto	u3620
  4588  004390  50C6               	movf	4038,w,c	;volatile
  4589  004392  0B0F               	andlw	15
  4590  004394  0A0B               	xorlw	11
  4591  004396  B4D8               	btfsc	status,2,c
  4592  004398                     u3620:
  4593                           
  4594                           ;newmain.c: 1360: SSPCON2bits.RCEN = 1;
  4595  004398  86C5               	bsf	4037,3,c	;volatile
  4596  00439A                     
  4597                           ;newmain.c: 1361: while (!SSPSTATbits.BF);
  4598  00439A  A0C7               	btfss	4039,0,c	;volatile
  4599  00439C  D7FE               	goto	l648
  4600                           
  4601                           ;newmain.c: 1362: return ( SSPBUF);
  4602  00439E  50C9               	movf	4041,w,c	;volatile
  4603  0043A0  0012               	return	
  4604  0043A2                     __end_of_MyReadI2C:
  4605                           	opt stack 0
  4606                           tblptru	equ	0xFF8
  4607                           tblptrh	equ	0xFF7
  4608                           tblptrl	equ	0xFF6
  4609                           tablat	equ	0xFF5
  4610                           prodh	equ	0xFF4
  4611                           prodl	equ	0xFF3
  4612                           postinc0	equ	0xFEE
  4613                           wreg	equ	0xFE8
  4614                           postinc1	equ	0xFE6
  4615                           fsr1h	equ	0xFE2
  4616                           fsr1l	equ	0xFE1
  4617                           indf2	equ	0xFDF
  4618                           postinc2	equ	0xFDE
  4619                           postdec2	equ	0xFDD
  4620                           fsr2h	equ	0xFDA
  4621                           fsr2l	equ	0xFD9
  4622                           status	equ	0xFD8
  4623                           
  4624 ;; *************** function _MyNotAckI2C *****************
  4625 ;; Defined at:
  4626 ;;		line 1353 in file "newmain.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		None
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4640 ;;      Params:         0       0       0       0       0       0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0
  4643 ;;      Totals:         0       0       0       0       0       0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_read_switch
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text7
  4654  00435A                     __ptext7:
  4655                           	opt stack 0
  4656  00435A                     _MyNotAckI2C:
  4657                           	opt stack 29
  4658                           
  4659                           ;newmain.c: 1354: SSPCON2bits.ACKDT = 1;
  4660                           
  4661                           ;incstack = 0
  4662  00435A  8AC5               	bsf	4037,5,c	;volatile
  4663                           
  4664                           ;newmain.c: 1355: SSPCON2bits.ACKEN = 1;
  4665  00435C  88C5               	bsf	4037,4,c	;volatile
  4666  00435E  0012               	return		;funcret
  4667  004360                     __end_of_MyNotAckI2C:
  4668                           	opt stack 0
  4669                           tblptru	equ	0xFF8
  4670                           tblptrh	equ	0xFF7
  4671                           tblptrl	equ	0xFF6
  4672                           tablat	equ	0xFF5
  4673                           prodh	equ	0xFF4
  4674                           prodl	equ	0xFF3
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           postinc1	equ	0xFE6
  4678                           fsr1h	equ	0xFE2
  4679                           fsr1l	equ	0xFE1
  4680                           indf2	equ	0xFDF
  4681                           postinc2	equ	0xFDE
  4682                           postdec2	equ	0xFDD
  4683                           fsr2h	equ	0xFDA
  4684                           fsr2l	equ	0xFD9
  4685                           status	equ	0xFD8
  4686                           
  4687 ;; *************** function _is_key_pressed *****************
  4688 ;; Defined at:
  4689 ;;		line 1213 in file "newmain.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  k               1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  k               1   18[COMRAM] unsigned char 
  4694 ;;  led             2   16[COMRAM] int 
  4695 ;;  matrix          2   14[COMRAM] int 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4705 ;;      Params:         0       0       0       0       0       0       0
  4706 ;;      Locals:         5       0       0       0       0       0       0
  4707 ;;      Temps:          8       0       0       0       0       0       0
  4708 ;;      Totals:        13       0       0       0       0       0       0
  4709 ;;Total ram usage:       13 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    1
  4712 ;; This function calls:
  4713 ;;		___wmul
  4714 ;; This function is called by:
  4715 ;;		_main
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text8
  4720  00456C                     __ptext8:
  4721                           	opt stack 0
  4722  00456C                     _is_key_pressed:
  4723                           	opt stack 29
  4724                           
  4725                           ;incstack = 0
  4726                           ;is_key_pressed@k stored from wreg
  4727  00456C  6E55               	movwf	is_key_pressed@k,c
  4728                           
  4729                           ;newmain.c: 1214: int matrix = k >> 4;
  4730  00456E  C055  F049         	movff	is_key_pressed@k,??_is_key_pressed
  4731  004572  3A49               	swapf	??_is_key_pressed,f,c
  4732  004574  0E0F               	movlw	15
  4733  004576  1649               	andwf	??_is_key_pressed,f,c
  4734  004578  5049               	movf	??_is_key_pressed,w,c
  4735  00457A  6E51               	movwf	is_key_pressed@matrix,c
  4736  00457C  6A52               	clrf	is_key_pressed@matrix+1,c
  4737                           
  4738                           ;newmain.c: 1215: int led = k & 0b1111;
  4739  00457E  C055  F049         	movff	is_key_pressed@k,??_is_key_pressed
  4740  004582  0E0F               	movlw	15
  4741  004584  1649               	andwf	??_is_key_pressed,f,c
  4742  004586  5049               	movf	??_is_key_pressed,w,c
  4743  004588  6E53               	movwf	is_key_pressed@led,c
  4744  00458A  6A54               	clrf	is_key_pressed@led+1,c
  4745                           
  4746                           ;newmain.c: 1216: return (matrices[matrix].keys[buttonLUT[led] >> 4]&(1 << (buttonLUT[le
      +                          d]&0x0f)));
  4747  00458C  C051  F043         	movff	is_key_pressed@matrix,___wmul@multiplier
  4748  004590  C052  F044         	movff	is_key_pressed@matrix+1,___wmul@multiplier+1
  4749  004594  0E00               	movlw	0
  4750  004596  6E46               	movwf	___wmul@multiplicand+1,c
  4751  004598  0E1D               	movlw	29
  4752  00459A  6E45               	movwf	___wmul@multiplicand,c
  4753  00459C  ECF1  F021         	call	___wmul	;wreg free
  4754  0045A0  0EDF               	movlw	low _buttonLUT
  4755  0045A2  2453               	addwf	is_key_pressed@led,w,c
  4756  0045A4  6EF6               	movwf	tblptrl,c
  4757  0045A6  0E7C               	movlw	high _buttonLUT
  4758  0045A8  2054               	addwfc	is_key_pressed@led+1,w,c
  4759  0045AA  6EF7               	movwf	tblptrh,c
  4760  0045AC                     	if	0	;There are less than 3 active tblptr bytes
  4761  0045AC                     	endif
  4762  0045AC  0008               	tblrd		*
  4763  0045AE  CFF5 F049          	movff	tablat,??_is_key_pressed
  4764  0045B2  3849               	swapf	??_is_key_pressed,w,c
  4765  0045B4  0B0F               	andlw	15
  4766  0045B6  6E4A               	movwf	(??_is_key_pressed+1)& (0+255),c
  4767  0045B8  6A4B               	clrf	(??_is_key_pressed+2)& (0+255),c
  4768  0045BA  0E01               	movlw	1
  4769  0045BC  264A               	addwf	??_is_key_pressed+1,f,c
  4770  0045BE  0E00               	movlw	0
  4771  0045C0  224B               	addwfc	??_is_key_pressed+2,f,c
  4772  0045C2  0E80               	movlw	low _matrices
  4773  0045C4  6E4C               	movwf	(??_is_key_pressed+3)& (0+255),c
  4774  0045C6  0E00               	movlw	high _matrices
  4775  0045C8  6E4D               	movwf	(??_is_key_pressed+4)& (0+255),c
  4776  0045CA  504A               	movf	??_is_key_pressed+1,w,c
  4777  0045CC  264C               	addwf	??_is_key_pressed+3,f,c
  4778  0045CE  504B               	movf	??_is_key_pressed+2,w,c
  4779  0045D0  224D               	addwfc	??_is_key_pressed+4,f,c
  4780  0045D2  5043               	movf	?___wmul,w,c
  4781  0045D4  244C               	addwf	??_is_key_pressed+3,w,c
  4782  0045D6  6ED9               	movwf	fsr2l,c
  4783  0045D8  5044               	movf	?___wmul+1,w,c
  4784  0045DA  204D               	addwfc	??_is_key_pressed+4,w,c
  4785  0045DC  6EDA               	movwf	fsr2h,c
  4786  0045DE  50DF               	movf	indf2,w,c
  4787  0045E0  6E4E               	movwf	(??_is_key_pressed+5)& (0+255),c
  4788  0045E2  0EDF               	movlw	low _buttonLUT
  4789  0045E4  2453               	addwf	is_key_pressed@led,w,c
  4790  0045E6  6EF6               	movwf	tblptrl,c
  4791  0045E8  0E7C               	movlw	high _buttonLUT
  4792  0045EA  2054               	addwfc	is_key_pressed@led+1,w,c
  4793  0045EC  6EF7               	movwf	tblptrh,c
  4794  0045EE                     	if	0	;There are less than 3 active tblptr bytes
  4795  0045EE                     	endif
  4796  0045EE  0008               	tblrd		*
  4797  0045F0  CFF5 F04F          	movff	tablat,??_is_key_pressed+6
  4798  0045F4  0E0F               	movlw	15
  4799  0045F6  164F               	andwf	??_is_key_pressed+6,f,c
  4800  0045F8  0E01               	movlw	1
  4801  0045FA  6E50               	movwf	(??_is_key_pressed+7)& (0+255),c
  4802  0045FC  2A4F               	incf	??_is_key_pressed+6,f,c
  4803  0045FE  D002               	goto	u3844
  4804  004600                     u3845:
  4805  004600  90D8               	bcf	status,0,c
  4806  004602  3650               	rlcf	??_is_key_pressed+7,f,c
  4807  004604                     u3844:
  4808  004604  2E4F               	decfsz	??_is_key_pressed+6,f,c
  4809  004606  D7FC               	goto	u3845
  4810  004608  5050               	movf	??_is_key_pressed+7,w,c
  4811  00460A  144E               	andwf	??_is_key_pressed+5,w,c
  4812  00460C  0012               	return	
  4813  00460E                     __end_of_is_key_pressed:
  4814                           	opt stack 0
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           prodh	equ	0xFF4
  4820                           prodl	equ	0xFF3
  4821                           postinc0	equ	0xFEE
  4822                           wreg	equ	0xFE8
  4823                           postinc1	equ	0xFE6
  4824                           fsr1h	equ	0xFE2
  4825                           fsr1l	equ	0xFE1
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function _animation7 *****************
  4834 ;; Defined at:
  4835 ;;		line 1110 in file "newmain.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  h               1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  h               1   23[COMRAM] unsigned char 
  4840 ;;  j               2   26[COMRAM] int 
  4841 ;;  i               2   24[COMRAM] int 
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4851 ;;      Params:         0       0       0       0       0       0       0
  4852 ;;      Locals:         5       0       0       0       0       0       0
  4853 ;;      Temps:          2       0       0       0       0       0       0
  4854 ;;      Totals:         7       0       0       0       0       0       0
  4855 ;;Total ram usage:        7 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    4
  4858 ;; This function calls:
  4859 ;;		___wmul
  4860 ;;		_clr_led
  4861 ;;		_set_led
  4862 ;;		_write_display
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text9
  4869  005ABA                     __ptext9:
  4870                           	opt stack 0
  4871  005ABA                     _animation7:
  4872                           	opt stack 26
  4873                           
  4874                           ;incstack = 0
  4875                           ;animation7@h stored from wreg
  4876  005ABA  6E5A               	movwf	animation7@h,c
  4877                           
  4878                           ;newmain.c: 1111: int i = 0, j = 0;
  4879  005ABC  0E00               	movlw	0
  4880  005ABE  6E5C               	movwf	animation7@i+1,c
  4881  005AC0  0E00               	movlw	0
  4882  005AC2  6E5B               	movwf	animation7@i,c
  4883  005AC4  0E00               	movlw	0
  4884  005AC6  6E5E               	movwf	animation7@j+1,c
  4885  005AC8  0E00               	movlw	0
  4886  005ACA  6E5D               	movwf	animation7@j,c
  4887                           
  4888                           ;newmain.c: 1112: if (h == 15 || h == 28 || h == 35 || h == 48 || h == 10 || h == 11 || 
      +                          h == 24 || h == 25 || h == 14 || h == 34 || h == 38 || h == 39 || h == 52 || h == 53 || 
      +                          h == 29 || h == 49) {
  4889  005ACC  0E0F               	movlw	15
  4890  005ACE  185A               	xorwf	animation7@h,w,c
  4891  005AD0  B4D8               	btfsc	status,2,c
  4892  005AD2  D03C               	goto	u5920
  4893  005AD4  0E1C               	movlw	28
  4894  005AD6  185A               	xorwf	animation7@h,w,c
  4895  005AD8  B4D8               	btfsc	status,2,c
  4896  005ADA  D038               	goto	u5920
  4897  005ADC  0E23               	movlw	35
  4898  005ADE  185A               	xorwf	animation7@h,w,c
  4899  005AE0  B4D8               	btfsc	status,2,c
  4900  005AE2  D034               	goto	u5920
  4901  005AE4  0E30               	movlw	48
  4902  005AE6  185A               	xorwf	animation7@h,w,c
  4903  005AE8  B4D8               	btfsc	status,2,c
  4904  005AEA  D030               	goto	u5920
  4905  005AEC  0E0A               	movlw	10
  4906  005AEE  185A               	xorwf	animation7@h,w,c
  4907  005AF0  B4D8               	btfsc	status,2,c
  4908  005AF2  D02C               	goto	u5920
  4909  005AF4  0E0B               	movlw	11
  4910  005AF6  185A               	xorwf	animation7@h,w,c
  4911  005AF8  B4D8               	btfsc	status,2,c
  4912  005AFA  D028               	goto	u5920
  4913  005AFC  0E18               	movlw	24
  4914  005AFE  185A               	xorwf	animation7@h,w,c
  4915  005B00  B4D8               	btfsc	status,2,c
  4916  005B02  D024               	goto	u5920
  4917  005B04  0E19               	movlw	25
  4918  005B06  185A               	xorwf	animation7@h,w,c
  4919  005B08  B4D8               	btfsc	status,2,c
  4920  005B0A  D020               	goto	u5920
  4921  005B0C  0E0E               	movlw	14
  4922  005B0E  185A               	xorwf	animation7@h,w,c
  4923  005B10  B4D8               	btfsc	status,2,c
  4924  005B12  D01C               	goto	u5920
  4925  005B14  0E22               	movlw	34
  4926  005B16  185A               	xorwf	animation7@h,w,c
  4927  005B18  B4D8               	btfsc	status,2,c
  4928  005B1A  D018               	goto	u5920
  4929  005B1C  0E26               	movlw	38
  4930  005B1E  185A               	xorwf	animation7@h,w,c
  4931  005B20  B4D8               	btfsc	status,2,c
  4932  005B22  D014               	goto	u5920
  4933  005B24  0E27               	movlw	39
  4934  005B26  185A               	xorwf	animation7@h,w,c
  4935  005B28  B4D8               	btfsc	status,2,c
  4936  005B2A  D010               	goto	u5920
  4937  005B2C  0E34               	movlw	52
  4938  005B2E  185A               	xorwf	animation7@h,w,c
  4939  005B30  B4D8               	btfsc	status,2,c
  4940  005B32  D00C               	goto	u5920
  4941  005B34  0E35               	movlw	53
  4942  005B36  185A               	xorwf	animation7@h,w,c
  4943  005B38  B4D8               	btfsc	status,2,c
  4944  005B3A  D008               	goto	u5920
  4945  005B3C  0E1D               	movlw	29
  4946  005B3E  185A               	xorwf	animation7@h,w,c
  4947  005B40  B4D8               	btfsc	status,2,c
  4948  005B42  D004               	goto	u5920
  4949  005B44  0E31               	movlw	49
  4950  005B46  185A               	xorwf	animation7@h,w,c
  4951  005B48  A4D8               	btfss	status,2,c
  4952  005B4A  D0B9               	goto	l511
  4953  005B4C                     u5920:
  4954                           
  4955                           ;newmain.c: 1113: for (i = 0; i < 4; i++) {
  4956  005B4C  0E00               	movlw	0
  4957  005B4E  6E5C               	movwf	animation7@i+1,c
  4958  005B50  0E00               	movlw	0
  4959  005B52  6E5B               	movwf	animation7@i,c
  4960  005B54  BE5C               	btfsc	animation7@i+1,7,c
  4961  005B56  D008               	goto	l514
  4962  005B58  505C               	movf	animation7@i+1,w,c
  4963  005B5A  E105               	bnz	u5930
  4964  005B5C  0E04               	movlw	4
  4965  005B5E  5C5B               	subwf	animation7@i,w,c
  4966  005B60  B0D8               	btfsc	status,0,c
  4967  005B62  0012               	return	
  4968  005B64  D001               	goto	l514
  4969  005B66                     u5930:
  4970  005B66  0012               	return	
  4971  005B68                     l514:
  4972                           
  4973                           ;newmain.c: 1114: for (j = 0; j < 29; j++) {
  4974  005B68  0E00               	movlw	0
  4975  005B6A  6E5E               	movwf	animation7@j+1,c
  4976  005B6C  0E00               	movlw	0
  4977  005B6E  6E5D               	movwf	animation7@j,c
  4978  005B70                     l4568:
  4979  005B70  BE5E               	btfsc	animation7@j+1,7,c
  4980  005B72  D006               	goto	l516
  4981  005B74  505E               	movf	animation7@j+1,w,c
  4982  005B76  E144               	bnz	l4580
  4983  005B78  0E1D               	movlw	29
  4984  005B7A  5C5D               	subwf	animation7@j,w,c
  4985  005B7C  B0D8               	btfsc	status,0,c
  4986  005B7E  D040               	goto	u5960
  4987  005B80                     l516:
  4988                           
  4989                           ;newmain.c: 1115: if (show7_1[i][j] != 100)
  4990  005B80  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4991  005B84  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4992  005B88  0E00               	movlw	0
  4993  005B8A  6E46               	movwf	___wmul@multiplicand+1,c
  4994  005B8C  0E1D               	movlw	29
  4995  005B8E  6E45               	movwf	___wmul@multiplicand,c
  4996  005B90  ECF1  F021         	call	___wmul	;wreg free
  4997  005B94  0ECD               	movlw	low _show7_1
  4998  005B96  6E58               	movwf	??_animation7& (0+255),c
  4999  005B98  0E78               	movlw	high _show7_1
  5000  005B9A  6E59               	movwf	(??_animation7+1)& (0+255),c
  5001  005B9C  5043               	movf	?___wmul,w,c
  5002  005B9E  2658               	addwf	??_animation7,f,c
  5003  005BA0  5044               	movf	?___wmul+1,w,c
  5004  005BA2  2259               	addwfc	??_animation7+1,f,c
  5005  005BA4  505D               	movf	animation7@j,w,c
  5006  005BA6  2658               	addwf	??_animation7,f,c
  5007  005BA8  505E               	movf	animation7@j+1,w,c
  5008  005BAA  2259               	addwfc	??_animation7+1,f,c
  5009  005BAC  C058  FFF6         	movff	??_animation7,tblptrl
  5010  005BB0  C059  FFF7         	movff	??_animation7+1,tblptrh
  5011  005BB4                     	if	0	;tblptru may be non-zero
  5012  005BB4                     	endif
  5013  005BB4                     	if	0	;tblptru may be non-zero
  5014  005BB4                     	endif
  5015  005BB4  0008               	tblrd		*
  5016  005BB6  50F5               	movf	tablat,w,c
  5017  005BB8  0A64               	xorlw	100
  5018  005BBA  B4D8               	btfsc	status,2,c
  5019  005BBC  D021               	goto	u5960
  5020                           
  5021                           ;newmain.c: 1116: set_led(show7_1[i][j]);
  5022  005BBE  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5023  005BC2  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5024  005BC6  0E00               	movlw	0
  5025  005BC8  6E46               	movwf	___wmul@multiplicand+1,c
  5026  005BCA  0E1D               	movlw	29
  5027  005BCC  6E45               	movwf	___wmul@multiplicand,c
  5028  005BCE  ECF1  F021         	call	___wmul	;wreg free
  5029  005BD2  0ECD               	movlw	low _show7_1
  5030  005BD4  6E58               	movwf	??_animation7& (0+255),c
  5031  005BD6  0E78               	movlw	high _show7_1
  5032  005BD8  6E59               	movwf	(??_animation7+1)& (0+255),c
  5033  005BDA  5043               	movf	?___wmul,w,c
  5034  005BDC  2658               	addwf	??_animation7,f,c
  5035  005BDE  5044               	movf	?___wmul+1,w,c
  5036  005BE0  2259               	addwfc	??_animation7+1,f,c
  5037  005BE2  505D               	movf	animation7@j,w,c
  5038  005BE4  2658               	addwf	??_animation7,f,c
  5039  005BE6  505E               	movf	animation7@j+1,w,c
  5040  005BE8  2259               	addwfc	??_animation7+1,f,c
  5041  005BEA  C058  FFF6         	movff	??_animation7,tblptrl
  5042  005BEE  C059  FFF7         	movff	??_animation7+1,tblptrh
  5043  005BF2                     	if	0	;tblptru may be non-zero
  5044  005BF2                     	endif
  5045  005BF2                     	if	0	;tblptru may be non-zero
  5046  005BF2                     	endif
  5047  005BF2  0008               	tblrd		*
  5048  005BF4  50F5               	movf	tablat,w,c
  5049  005BF6  EC58  F023         	call	_set_led
  5050                           
  5051                           ;newmain.c: 1117: else
  5052                           ;newmain.c: 1118: break;
  5053  005BFA  4A5D               	infsnz	animation7@j,f,c
  5054  005BFC  2A5E               	incf	animation7@j+1,f,c
  5055  005BFE  D7B8               	goto	l4568
  5056  005C00                     u5960:
  5057  005C00                     l4580:
  5058                           
  5059                           ;newmain.c: 1119: }
  5060                           ;newmain.c: 1120: write_display();
  5061  005C00  EC0A  F024         	call	_write_display	;wreg free
  5062                           
  5063                           ;newmain.c: 1121: _delay((unsigned long)((10)*(4000000/4000.0)));
  5064  005C04  0E0D               	movlw	13
  5065  005C06  6E58               	movwf	??_animation7& (0+255),c
  5066  005C08  0EFC               	movlw	252
  5067  005C0A                     u6957:
  5068  005C0A  2EE8               	decfsz	wreg,f,c
  5069  005C0C  D7FE               	bra	u6957
  5070  005C0E  2E58               	decfsz	??_animation7& (0+255),f,c
  5071  005C10  D7FC               	bra	u6957
  5072                           
  5073                           ;newmain.c: 1122: for (j = 0; j < 29; j++){
  5074  005C12  0E00               	movlw	0
  5075  005C14  6E5E               	movwf	animation7@j+1,c
  5076  005C16  0E00               	movlw	0
  5077  005C18  6E5D               	movwf	animation7@j,c
  5078  005C1A                     l4586:
  5079  005C1A  BE5E               	btfsc	animation7@j+1,7,c
  5080  005C1C  D006               	goto	l520
  5081  005C1E  505E               	movf	animation7@j+1,w,c
  5082  005C20  E144               	bnz	l4598
  5083  005C22  0E1D               	movlw	29
  5084  005C24  5C5D               	subwf	animation7@j,w,c
  5085  005C26  B0D8               	btfsc	status,0,c
  5086  005C28  D040               	goto	u5990
  5087  005C2A                     l520:
  5088                           
  5089                           ;newmain.c: 1123: if(show7_1[i][j]!=100)
  5090  005C2A  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5091  005C2E  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5092  005C32  0E00               	movlw	0
  5093  005C34  6E46               	movwf	___wmul@multiplicand+1,c
  5094  005C36  0E1D               	movlw	29
  5095  005C38  6E45               	movwf	___wmul@multiplicand,c
  5096  005C3A  ECF1  F021         	call	___wmul	;wreg free
  5097  005C3E  0ECD               	movlw	low _show7_1
  5098  005C40  6E58               	movwf	??_animation7& (0+255),c
  5099  005C42  0E78               	movlw	high _show7_1
  5100  005C44  6E59               	movwf	(??_animation7+1)& (0+255),c
  5101  005C46  5043               	movf	?___wmul,w,c
  5102  005C48  2658               	addwf	??_animation7,f,c
  5103  005C4A  5044               	movf	?___wmul+1,w,c
  5104  005C4C  2259               	addwfc	??_animation7+1,f,c
  5105  005C4E  505D               	movf	animation7@j,w,c
  5106  005C50  2658               	addwf	??_animation7,f,c
  5107  005C52  505E               	movf	animation7@j+1,w,c
  5108  005C54  2259               	addwfc	??_animation7+1,f,c
  5109  005C56  C058  FFF6         	movff	??_animation7,tblptrl
  5110  005C5A  C059  FFF7         	movff	??_animation7+1,tblptrh
  5111  005C5E                     	if	0	;tblptru may be non-zero
  5112  005C5E                     	endif
  5113  005C5E                     	if	0	;tblptru may be non-zero
  5114  005C5E                     	endif
  5115  005C5E  0008               	tblrd		*
  5116  005C60  50F5               	movf	tablat,w,c
  5117  005C62  0A64               	xorlw	100
  5118  005C64  B4D8               	btfsc	status,2,c
  5119  005C66  D021               	goto	u5990
  5120                           
  5121                           ;newmain.c: 1124: clr_led(show7_1[i][j]);
  5122  005C68  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5123  005C6C  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5124  005C70  0E00               	movlw	0
  5125  005C72  6E46               	movwf	___wmul@multiplicand+1,c
  5126  005C74  0E1D               	movlw	29
  5127  005C76  6E45               	movwf	___wmul@multiplicand,c
  5128  005C78  ECF1  F021         	call	___wmul	;wreg free
  5129  005C7C  0ECD               	movlw	low _show7_1
  5130  005C7E  6E58               	movwf	??_animation7& (0+255),c
  5131  005C80  0E78               	movlw	high _show7_1
  5132  005C82  6E59               	movwf	(??_animation7+1)& (0+255),c
  5133  005C84  5043               	movf	?___wmul,w,c
  5134  005C86  2658               	addwf	??_animation7,f,c
  5135  005C88  5044               	movf	?___wmul+1,w,c
  5136  005C8A  2259               	addwfc	??_animation7+1,f,c
  5137  005C8C  505D               	movf	animation7@j,w,c
  5138  005C8E  2658               	addwf	??_animation7,f,c
  5139  005C90  505E               	movf	animation7@j+1,w,c
  5140  005C92  2259               	addwfc	??_animation7+1,f,c
  5141  005C94  C058  FFF6         	movff	??_animation7,tblptrl
  5142  005C98  C059  FFF7         	movff	??_animation7+1,tblptrh
  5143  005C9C                     	if	0	;tblptru may be non-zero
  5144  005C9C                     	endif
  5145  005C9C                     	if	0	;tblptru may be non-zero
  5146  005C9C                     	endif
  5147  005C9C  0008               	tblrd		*
  5148  005C9E  50F5               	movf	tablat,w,c
  5149  005CA0  ECAF  F023         	call	_clr_led
  5150                           
  5151                           ;newmain.c: 1125: else
  5152                           ;newmain.c: 1126: break;
  5153  005CA4  4A5D               	infsnz	animation7@j,f,c
  5154  005CA6  2A5E               	incf	animation7@j+1,f,c
  5155  005CA8  D7B8               	goto	l4586
  5156  005CAA                     u5990:
  5157  005CAA                     l4598:
  5158                           
  5159                           ;newmain.c: 1127: }
  5160                           ;newmain.c: 1128: write_display();
  5161  005CAA  EC0A  F024         	call	_write_display	;wreg free
  5162  005CAE  4A5B               	infsnz	animation7@i,f,c
  5163  005CB0  2A5C               	incf	animation7@i+1,f,c
  5164  005CB2  BE5C               	btfsc	animation7@i+1,7,c
  5165  005CB4  D759               	goto	l514
  5166  005CB6  505C               	movf	animation7@i+1,w,c
  5167  005CB8  E101               	bnz	u6000
  5168  005CBA  D750               	goto	L6
  5169  005CBC                     u6000:
  5170                           
  5171                           ;newmain.c: 1129: }
  5172                           ;newmain.c: 1130: } else {
  5173  005CBC  0012               	return	
  5174  005CBE                     l511:
  5175                           
  5176                           ;newmain.c: 1132: if (count == 0) {
  5177  005CBE  5041               	movf	_count,w,c
  5178  005CC0  1042               	iorwf	_count+1,w,c
  5179  005CC2  A4D8               	btfss	status,2,c
  5180  005CC4  D0BD               	goto	l525
  5181                           
  5182                           ;newmain.c: 1133: for (i = 0; i < 7; i++) {
  5183  005CC6  0E00               	movlw	0
  5184  005CC8  6E5C               	movwf	animation7@i+1,c
  5185  005CCA  0E00               	movlw	0
  5186  005CCC  6E5B               	movwf	animation7@i,c
  5187  005CCE  BE5C               	btfsc	animation7@i+1,7,c
  5188  005CD0  D008               	goto	l526
  5189  005CD2  505C               	movf	animation7@i+1,w,c
  5190  005CD4  E105               	bnz	u6020
  5191  005CD6  0E07               	movlw	7
  5192  005CD8  5C5B               	subwf	animation7@i,w,c
  5193  005CDA  B0D8               	btfsc	status,0,c
  5194  005CDC  D0AC               	goto	u6090
  5195  005CDE  D001               	goto	l526
  5196  005CE0                     u6020:
  5197  005CE0  D0AA               	goto	u6090
  5198  005CE2                     l526:
  5199                           
  5200                           ;newmain.c: 1134: for (j = 0; j < 24; j++) {
  5201  005CE2  0E00               	movlw	0
  5202  005CE4  6E5E               	movwf	animation7@j+1,c
  5203  005CE6  0E00               	movlw	0
  5204  005CE8  6E5D               	movwf	animation7@j,c
  5205  005CEA                     l4614:
  5206  005CEA  BE5E               	btfsc	animation7@j+1,7,c
  5207  005CEC  D006               	goto	l528
  5208  005CEE  505E               	movf	animation7@j+1,w,c
  5209  005CF0  E144               	bnz	l4626
  5210  005CF2  0E18               	movlw	24
  5211  005CF4  5C5D               	subwf	animation7@j,w,c
  5212  005CF6  B0D8               	btfsc	status,0,c
  5213  005CF8  D040               	goto	u6050
  5214  005CFA                     l528:
  5215                           
  5216                           ;newmain.c: 1135: if (show7_2[i][j] != 100)
  5217  005CFA  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5218  005CFE  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5219  005D02  0E00               	movlw	0
  5220  005D04  6E46               	movwf	___wmul@multiplicand+1,c
  5221  005D06  0E18               	movlw	24
  5222  005D08  6E45               	movwf	___wmul@multiplicand,c
  5223  005D0A  ECF1  F021         	call	___wmul	;wreg free
  5224  005D0E  0EAD               	movlw	low _show7_2
  5225  005D10  6E58               	movwf	??_animation7& (0+255),c
  5226  005D12  0E77               	movlw	high _show7_2
  5227  005D14  6E59               	movwf	(??_animation7+1)& (0+255),c
  5228  005D16  5043               	movf	?___wmul,w,c
  5229  005D18  2658               	addwf	??_animation7,f,c
  5230  005D1A  5044               	movf	?___wmul+1,w,c
  5231  005D1C  2259               	addwfc	??_animation7+1,f,c
  5232  005D1E  505D               	movf	animation7@j,w,c
  5233  005D20  2658               	addwf	??_animation7,f,c
  5234  005D22  505E               	movf	animation7@j+1,w,c
  5235  005D24  2259               	addwfc	??_animation7+1,f,c
  5236  005D26  C058  FFF6         	movff	??_animation7,tblptrl
  5237  005D2A  C059  FFF7         	movff	??_animation7+1,tblptrh
  5238  005D2E                     	if	0	;tblptru may be non-zero
  5239  005D2E                     	endif
  5240  005D2E                     	if	0	;tblptru may be non-zero
  5241  005D2E                     	endif
  5242  005D2E  0008               	tblrd		*
  5243  005D30  50F5               	movf	tablat,w,c
  5244  005D32  0A64               	xorlw	100
  5245  005D34  B4D8               	btfsc	status,2,c
  5246  005D36  D021               	goto	u6050
  5247                           
  5248                           ;newmain.c: 1136: set_led(show7_2[i][j]);
  5249  005D38  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5250  005D3C  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5251  005D40  0E00               	movlw	0
  5252  005D42  6E46               	movwf	___wmul@multiplicand+1,c
  5253  005D44  0E18               	movlw	24
  5254  005D46  6E45               	movwf	___wmul@multiplicand,c
  5255  005D48  ECF1  F021         	call	___wmul	;wreg free
  5256  005D4C  0EAD               	movlw	low _show7_2
  5257  005D4E  6E58               	movwf	??_animation7& (0+255),c
  5258  005D50  0E77               	movlw	high _show7_2
  5259  005D52  6E59               	movwf	(??_animation7+1)& (0+255),c
  5260  005D54  5043               	movf	?___wmul,w,c
  5261  005D56  2658               	addwf	??_animation7,f,c
  5262  005D58  5044               	movf	?___wmul+1,w,c
  5263  005D5A  2259               	addwfc	??_animation7+1,f,c
  5264  005D5C  505D               	movf	animation7@j,w,c
  5265  005D5E  2658               	addwf	??_animation7,f,c
  5266  005D60  505E               	movf	animation7@j+1,w,c
  5267  005D62  2259               	addwfc	??_animation7+1,f,c
  5268  005D64  C058  FFF6         	movff	??_animation7,tblptrl
  5269  005D68  C059  FFF7         	movff	??_animation7+1,tblptrh
  5270  005D6C                     	if	0	;tblptru may be non-zero
  5271  005D6C                     	endif
  5272  005D6C                     	if	0	;tblptru may be non-zero
  5273  005D6C                     	endif
  5274  005D6C  0008               	tblrd		*
  5275  005D6E  50F5               	movf	tablat,w,c
  5276  005D70  EC58  F023         	call	_set_led
  5277                           
  5278                           ;newmain.c: 1137: else
  5279                           ;newmain.c: 1138: break;
  5280  005D74  4A5D               	infsnz	animation7@j,f,c
  5281  005D76  2A5E               	incf	animation7@j+1,f,c
  5282  005D78  D7B8               	goto	l4614
  5283  005D7A                     u6050:
  5284  005D7A                     l4626:
  5285                           
  5286                           ;newmain.c: 1139: }
  5287                           ;newmain.c: 1140: write_display();
  5288  005D7A  EC0A  F024         	call	_write_display	;wreg free
  5289                           
  5290                           ;newmain.c: 1141: _delay((unsigned long)((10)*(4000000/4000.0)));
  5291  005D7E  0E0D               	movlw	13
  5292  005D80  6E58               	movwf	??_animation7& (0+255),c
  5293  005D82  0EFC               	movlw	252
  5294  005D84                     u6967:
  5295  005D84  2EE8               	decfsz	wreg,f,c
  5296  005D86  D7FE               	bra	u6967
  5297  005D88  2E58               	decfsz	??_animation7& (0+255),f,c
  5298  005D8A  D7FC               	bra	u6967
  5299                           
  5300                           ;newmain.c: 1142: for (j = 0; j < 24; j++){
  5301  005D8C  0E00               	movlw	0
  5302  005D8E  6E5E               	movwf	animation7@j+1,c
  5303  005D90  0E00               	movlw	0
  5304  005D92  6E5D               	movwf	animation7@j,c
  5305  005D94                     l4632:
  5306  005D94  BE5E               	btfsc	animation7@j+1,7,c
  5307  005D96  D006               	goto	l532
  5308  005D98  505E               	movf	animation7@j+1,w,c
  5309  005D9A  E144               	bnz	l4644
  5310  005D9C  0E18               	movlw	24
  5311  005D9E  5C5D               	subwf	animation7@j,w,c
  5312  005DA0  B0D8               	btfsc	status,0,c
  5313  005DA2  D040               	goto	u6080
  5314  005DA4                     l532:
  5315                           
  5316                           ;newmain.c: 1143: if (show7_2[i][j] != 100)
  5317  005DA4  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5318  005DA8  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5319  005DAC  0E00               	movlw	0
  5320  005DAE  6E46               	movwf	___wmul@multiplicand+1,c
  5321  005DB0  0E18               	movlw	24
  5322  005DB2  6E45               	movwf	___wmul@multiplicand,c
  5323  005DB4  ECF1  F021         	call	___wmul	;wreg free
  5324  005DB8  0EAD               	movlw	low _show7_2
  5325  005DBA  6E58               	movwf	??_animation7& (0+255),c
  5326  005DBC  0E77               	movlw	high _show7_2
  5327  005DBE  6E59               	movwf	(??_animation7+1)& (0+255),c
  5328  005DC0  5043               	movf	?___wmul,w,c
  5329  005DC2  2658               	addwf	??_animation7,f,c
  5330  005DC4  5044               	movf	?___wmul+1,w,c
  5331  005DC6  2259               	addwfc	??_animation7+1,f,c
  5332  005DC8  505D               	movf	animation7@j,w,c
  5333  005DCA  2658               	addwf	??_animation7,f,c
  5334  005DCC  505E               	movf	animation7@j+1,w,c
  5335  005DCE  2259               	addwfc	??_animation7+1,f,c
  5336  005DD0  C058  FFF6         	movff	??_animation7,tblptrl
  5337  005DD4  C059  FFF7         	movff	??_animation7+1,tblptrh
  5338  005DD8                     	if	0	;tblptru may be non-zero
  5339  005DD8                     	endif
  5340  005DD8                     	if	0	;tblptru may be non-zero
  5341  005DD8                     	endif
  5342  005DD8  0008               	tblrd		*
  5343  005DDA  50F5               	movf	tablat,w,c
  5344  005DDC  0A64               	xorlw	100
  5345  005DDE  B4D8               	btfsc	status,2,c
  5346  005DE0  D021               	goto	u6080
  5347                           
  5348                           ;newmain.c: 1144: clr_led(show7_2[i][j]);
  5349  005DE2  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5350  005DE6  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5351  005DEA  0E00               	movlw	0
  5352  005DEC  6E46               	movwf	___wmul@multiplicand+1,c
  5353  005DEE  0E18               	movlw	24
  5354  005DF0  6E45               	movwf	___wmul@multiplicand,c
  5355  005DF2  ECF1  F021         	call	___wmul	;wreg free
  5356  005DF6  0EAD               	movlw	low _show7_2
  5357  005DF8  6E58               	movwf	??_animation7& (0+255),c
  5358  005DFA  0E77               	movlw	high _show7_2
  5359  005DFC  6E59               	movwf	(??_animation7+1)& (0+255),c
  5360  005DFE  5043               	movf	?___wmul,w,c
  5361  005E00  2658               	addwf	??_animation7,f,c
  5362  005E02  5044               	movf	?___wmul+1,w,c
  5363  005E04  2259               	addwfc	??_animation7+1,f,c
  5364  005E06  505D               	movf	animation7@j,w,c
  5365  005E08  2658               	addwf	??_animation7,f,c
  5366  005E0A  505E               	movf	animation7@j+1,w,c
  5367  005E0C  2259               	addwfc	??_animation7+1,f,c
  5368  005E0E  C058  FFF6         	movff	??_animation7,tblptrl
  5369  005E12  C059  FFF7         	movff	??_animation7+1,tblptrh
  5370  005E16                     	if	0	;tblptru may be non-zero
  5371  005E16                     	endif
  5372  005E16                     	if	0	;tblptru may be non-zero
  5373  005E16                     	endif
  5374  005E16  0008               	tblrd		*
  5375  005E18  50F5               	movf	tablat,w,c
  5376  005E1A  ECAF  F023         	call	_clr_led
  5377                           
  5378                           ;newmain.c: 1145: else
  5379                           ;newmain.c: 1146: break;
  5380  005E1E  4A5D               	infsnz	animation7@j,f,c
  5381  005E20  2A5E               	incf	animation7@j+1,f,c
  5382  005E22  D7B8               	goto	l4632
  5383  005E24                     u6080:
  5384  005E24                     l4644:
  5385                           
  5386                           ;newmain.c: 1147: }
  5387                           ;newmain.c: 1148: write_display();
  5388  005E24  EC0A  F024         	call	_write_display	;wreg free
  5389  005E28  4A5B               	infsnz	animation7@i,f,c
  5390  005E2A  2A5C               	incf	animation7@i+1,f,c
  5391  005E2C  BE5C               	btfsc	animation7@i+1,7,c
  5392  005E2E  D759               	goto	l526
  5393  005E30  505C               	movf	animation7@i+1,w,c
  5394  005E32  E101               	bnz	l4650
  5395  005E34  D750               	goto	L7
  5396  005E36                     u6090:
  5397  005E36                     l4650:
  5398                           
  5399                           ;newmain.c: 1149: }
  5400                           ;newmain.c: 1150: count = 1;
  5401  005E36  0E00               	movlw	0
  5402  005E38  6E42               	movwf	_count+1,c
  5403  005E3A  0E01               	movlw	1
  5404  005E3C  6E41               	movwf	_count,c
  5405                           
  5406                           ;newmain.c: 1152: } else if (count == 1) {
  5407  005E3E  0012               	return	
  5408  005E40                     l525:
  5409  005E40  0441               	decf	_count,w,c
  5410  005E42  1042               	iorwf	_count+1,w,c
  5411  005E44  A4D8               	btfss	status,2,c
  5412  005E46  0012               	return	
  5413                           
  5414                           ;newmain.c: 1153: for (i = 8; i >= 0; i--) {
  5415  005E48  0E00               	movlw	0
  5416  005E4A  6E5C               	movwf	animation7@i+1,c
  5417  005E4C  0E08               	movlw	8
  5418  005E4E  6E5B               	movwf	animation7@i,c
  5419  005E50                     l4656:
  5420  005E50  BE5C               	btfsc	animation7@i+1,7,c
  5421  005E52  D0A7               	goto	u6180
  5422                           
  5423                           ;newmain.c: 1154: for (j = 0; j < 24; j++) {
  5424  005E54  0E00               	movlw	0
  5425  005E56  6E5E               	movwf	animation7@j+1,c
  5426  005E58  0E00               	movlw	0
  5427  005E5A  6E5D               	movwf	animation7@j,c
  5428  005E5C                     l4662:
  5429  005E5C  BE5E               	btfsc	animation7@j+1,7,c
  5430  005E5E  D006               	goto	l540
  5431  005E60  505E               	movf	animation7@j+1,w,c
  5432  005E62  E144               	bnz	l4674
  5433  005E64  0E18               	movlw	24
  5434  005E66  5C5D               	subwf	animation7@j,w,c
  5435  005E68  B0D8               	btfsc	status,0,c
  5436  005E6A  D040               	goto	u6140
  5437  005E6C                     l540:
  5438                           
  5439                           ;newmain.c: 1155: if (show7_2[i][j] != 100)
  5440  005E6C  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5441  005E70  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5442  005E74  0E00               	movlw	0
  5443  005E76  6E46               	movwf	___wmul@multiplicand+1,c
  5444  005E78  0E18               	movlw	24
  5445  005E7A  6E45               	movwf	___wmul@multiplicand,c
  5446  005E7C  ECF1  F021         	call	___wmul	;wreg free
  5447  005E80  0EAD               	movlw	low _show7_2
  5448  005E82  6E58               	movwf	??_animation7& (0+255),c
  5449  005E84  0E77               	movlw	high _show7_2
  5450  005E86  6E59               	movwf	(??_animation7+1)& (0+255),c
  5451  005E88  5043               	movf	?___wmul,w,c
  5452  005E8A  2658               	addwf	??_animation7,f,c
  5453  005E8C  5044               	movf	?___wmul+1,w,c
  5454  005E8E  2259               	addwfc	??_animation7+1,f,c
  5455  005E90  505D               	movf	animation7@j,w,c
  5456  005E92  2658               	addwf	??_animation7,f,c
  5457  005E94  505E               	movf	animation7@j+1,w,c
  5458  005E96  2259               	addwfc	??_animation7+1,f,c
  5459  005E98  C058  FFF6         	movff	??_animation7,tblptrl
  5460  005E9C  C059  FFF7         	movff	??_animation7+1,tblptrh
  5461  005EA0                     	if	0	;tblptru may be non-zero
  5462  005EA0                     	endif
  5463  005EA0                     	if	0	;tblptru may be non-zero
  5464  005EA0                     	endif
  5465  005EA0  0008               	tblrd		*
  5466  005EA2  50F5               	movf	tablat,w,c
  5467  005EA4  0A64               	xorlw	100
  5468  005EA6  B4D8               	btfsc	status,2,c
  5469  005EA8  D021               	goto	u6140
  5470                           
  5471                           ;newmain.c: 1156: set_led(show7_2[i][j]);
  5472  005EAA  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5473  005EAE  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5474  005EB2  0E00               	movlw	0
  5475  005EB4  6E46               	movwf	___wmul@multiplicand+1,c
  5476  005EB6  0E18               	movlw	24
  5477  005EB8  6E45               	movwf	___wmul@multiplicand,c
  5478  005EBA  ECF1  F021         	call	___wmul	;wreg free
  5479  005EBE  0EAD               	movlw	low _show7_2
  5480  005EC0  6E58               	movwf	??_animation7& (0+255),c
  5481  005EC2  0E77               	movlw	high _show7_2
  5482  005EC4  6E59               	movwf	(??_animation7+1)& (0+255),c
  5483  005EC6  5043               	movf	?___wmul,w,c
  5484  005EC8  2658               	addwf	??_animation7,f,c
  5485  005ECA  5044               	movf	?___wmul+1,w,c
  5486  005ECC  2259               	addwfc	??_animation7+1,f,c
  5487  005ECE  505D               	movf	animation7@j,w,c
  5488  005ED0  2658               	addwf	??_animation7,f,c
  5489  005ED2  505E               	movf	animation7@j+1,w,c
  5490  005ED4  2259               	addwfc	??_animation7+1,f,c
  5491  005ED6  C058  FFF6         	movff	??_animation7,tblptrl
  5492  005EDA  C059  FFF7         	movff	??_animation7+1,tblptrh
  5493  005EDE                     	if	0	;tblptru may be non-zero
  5494  005EDE                     	endif
  5495  005EDE                     	if	0	;tblptru may be non-zero
  5496  005EDE                     	endif
  5497  005EDE  0008               	tblrd		*
  5498  005EE0  50F5               	movf	tablat,w,c
  5499  005EE2  EC58  F023         	call	_set_led
  5500                           
  5501                           ;newmain.c: 1157: else
  5502                           ;newmain.c: 1158: break;
  5503  005EE6  4A5D               	infsnz	animation7@j,f,c
  5504  005EE8  2A5E               	incf	animation7@j+1,f,c
  5505  005EEA  D7B8               	goto	l4662
  5506  005EEC                     u6140:
  5507  005EEC                     l4674:
  5508                           
  5509                           ;newmain.c: 1159: }
  5510                           ;newmain.c: 1160: write_display();
  5511  005EEC  EC0A  F024         	call	_write_display	;wreg free
  5512                           
  5513                           ;newmain.c: 1161: _delay((unsigned long)((10)*(4000000/4000.0)));
  5514  005EF0  0E0D               	movlw	13
  5515  005EF2  6E58               	movwf	??_animation7& (0+255),c
  5516  005EF4  0EFC               	movlw	252
  5517  005EF6                     u6977:
  5518  005EF6  2EE8               	decfsz	wreg,f,c
  5519  005EF8  D7FE               	bra	u6977
  5520  005EFA  2E58               	decfsz	??_animation7& (0+255),f,c
  5521  005EFC  D7FC               	bra	u6977
  5522                           
  5523                           ;newmain.c: 1162: for (j = 0; j < 24; j++){
  5524  005EFE  0E00               	movlw	0
  5525  005F00  6E5E               	movwf	animation7@j+1,c
  5526  005F02  0E00               	movlw	0
  5527  005F04  6E5D               	movwf	animation7@j,c
  5528  005F06                     l4680:
  5529  005F06  BE5E               	btfsc	animation7@j+1,7,c
  5530  005F08  D006               	goto	l544
  5531  005F0A  505E               	movf	animation7@j+1,w,c
  5532  005F0C  E144               	bnz	l4692
  5533  005F0E  0E18               	movlw	24
  5534  005F10  5C5D               	subwf	animation7@j,w,c
  5535  005F12  B0D8               	btfsc	status,0,c
  5536  005F14  D040               	goto	u6170
  5537  005F16                     l544:
  5538                           
  5539                           ;newmain.c: 1163: if (show7_2[i][j] != 100)
  5540  005F16  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5541  005F1A  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5542  005F1E  0E00               	movlw	0
  5543  005F20  6E46               	movwf	___wmul@multiplicand+1,c
  5544  005F22  0E18               	movlw	24
  5545  005F24  6E45               	movwf	___wmul@multiplicand,c
  5546  005F26  ECF1  F021         	call	___wmul	;wreg free
  5547  005F2A  0EAD               	movlw	low _show7_2
  5548  005F2C  6E58               	movwf	??_animation7& (0+255),c
  5549  005F2E  0E77               	movlw	high _show7_2
  5550  005F30  6E59               	movwf	(??_animation7+1)& (0+255),c
  5551  005F32  5043               	movf	?___wmul,w,c
  5552  005F34  2658               	addwf	??_animation7,f,c
  5553  005F36  5044               	movf	?___wmul+1,w,c
  5554  005F38  2259               	addwfc	??_animation7+1,f,c
  5555  005F3A  505D               	movf	animation7@j,w,c
  5556  005F3C  2658               	addwf	??_animation7,f,c
  5557  005F3E  505E               	movf	animation7@j+1,w,c
  5558  005F40  2259               	addwfc	??_animation7+1,f,c
  5559  005F42  C058  FFF6         	movff	??_animation7,tblptrl
  5560  005F46  C059  FFF7         	movff	??_animation7+1,tblptrh
  5561  005F4A                     	if	0	;tblptru may be non-zero
  5562  005F4A                     	endif
  5563  005F4A                     	if	0	;tblptru may be non-zero
  5564  005F4A                     	endif
  5565  005F4A  0008               	tblrd		*
  5566  005F4C  50F5               	movf	tablat,w,c
  5567  005F4E  0A64               	xorlw	100
  5568  005F50  B4D8               	btfsc	status,2,c
  5569  005F52  D021               	goto	u6170
  5570                           
  5571                           ;newmain.c: 1164: clr_led(show7_2[i][j]);
  5572  005F54  C05B  F043         	movff	animation7@i,___wmul@multiplier
  5573  005F58  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  5574  005F5C  0E00               	movlw	0
  5575  005F5E  6E46               	movwf	___wmul@multiplicand+1,c
  5576  005F60  0E18               	movlw	24
  5577  005F62  6E45               	movwf	___wmul@multiplicand,c
  5578  005F64  ECF1  F021         	call	___wmul	;wreg free
  5579  005F68  0EAD               	movlw	low _show7_2
  5580  005F6A  6E58               	movwf	??_animation7& (0+255),c
  5581  005F6C  0E77               	movlw	high _show7_2
  5582  005F6E  6E59               	movwf	(??_animation7+1)& (0+255),c
  5583  005F70  5043               	movf	?___wmul,w,c
  5584  005F72  2658               	addwf	??_animation7,f,c
  5585  005F74  5044               	movf	?___wmul+1,w,c
  5586  005F76  2259               	addwfc	??_animation7+1,f,c
  5587  005F78  505D               	movf	animation7@j,w,c
  5588  005F7A  2658               	addwf	??_animation7,f,c
  5589  005F7C  505E               	movf	animation7@j+1,w,c
  5590  005F7E  2259               	addwfc	??_animation7+1,f,c
  5591  005F80  C058  FFF6         	movff	??_animation7,tblptrl
  5592  005F84  C059  FFF7         	movff	??_animation7+1,tblptrh
  5593  005F88                     	if	0	;tblptru may be non-zero
  5594  005F88                     	endif
  5595  005F88                     	if	0	;tblptru may be non-zero
  5596  005F88                     	endif
  5597  005F88  0008               	tblrd		*
  5598  005F8A  50F5               	movf	tablat,w,c
  5599  005F8C  ECAF  F023         	call	_clr_led
  5600                           
  5601                           ;newmain.c: 1165: else
  5602                           ;newmain.c: 1166: break;
  5603  005F90  4A5D               	infsnz	animation7@j,f,c
  5604  005F92  2A5E               	incf	animation7@j+1,f,c
  5605  005F94  D7B8               	goto	l4680
  5606  005F96                     u6170:
  5607  005F96                     l4692:
  5608                           
  5609                           ;newmain.c: 1167: }
  5610                           ;newmain.c: 1168: write_display();
  5611  005F96  EC0A  F024         	call	_write_display	;wreg free
  5612  005F9A  065B               	decf	animation7@i,f,c
  5613  005F9C  A0D8               	btfss	status,0,c
  5614  005F9E  065C               	decf	animation7@i+1,f,c
  5615  005FA0  D757               	goto	l4656
  5616  005FA2                     u6180:
  5617                           
  5618                           ;newmain.c: 1169: }
  5619                           ;newmain.c: 1170: count = 0;
  5620  005FA2  0E00               	movlw	0
  5621  005FA4  6E42               	movwf	_count+1,c
  5622  005FA6  0E00               	movlw	0
  5623  005FA8  6E41               	movwf	_count,c
  5624  005FAA  0012               	return	
  5625  005FAC                     __end_of_animation7:
  5626                           	opt stack 0
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           prodh	equ	0xFF4
  5632                           prodl	equ	0xFF3
  5633                           postinc0	equ	0xFEE
  5634                           wreg	equ	0xFE8
  5635                           postinc1	equ	0xFE6
  5636                           fsr1h	equ	0xFE2
  5637                           fsr1l	equ	0xFE1
  5638                           indf2	equ	0xFDF
  5639                           postinc2	equ	0xFDE
  5640                           postdec2	equ	0xFDD
  5641                           fsr2h	equ	0xFDA
  5642                           fsr2l	equ	0xFD9
  5643                           status	equ	0xFD8
  5644                           
  5645 ;; *************** function _animation6 *****************
  5646 ;; Defined at:
  5647 ;;		line 1076 in file "newmain.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  m               1    wreg     unsigned char 
  5650 ;;  n               1   21[COMRAM] unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  m               1   35[COMRAM] unsigned char 
  5653 ;;  x               1   26[COMRAM] unsigned char 
  5654 ;;  d               2   33[COMRAM] int 
  5655 ;;  c               2   31[COMRAM] int 
  5656 ;;  b               2   29[COMRAM] int 
  5657 ;;  a               2   27[COMRAM] int 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5667 ;;      Params:         1       0       0       0       0       0       0
  5668 ;;      Locals:        10       0       0       0       0       0       0
  5669 ;;      Temps:          4       0       0       0       0       0       0
  5670 ;;      Totals:        15       0       0       0       0       0       0
  5671 ;;Total ram usage:       15 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    4
  5674 ;; This function calls:
  5675 ;;		_clr_led
  5676 ;;		_set_led
  5677 ;;		_write_display
  5678 ;; This function is called by:
  5679 ;;		_main
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text10
  5684  004C92                     __ptext10:
  5685                           	opt stack 0
  5686  004C92                     _animation6:
  5687                           	opt stack 26
  5688                           
  5689                           ;incstack = 0
  5690                           ;animation6@m stored from wreg
  5691  004C92  6E66               	movwf	animation6@m,c
  5692                           
  5693                           ;newmain.c: 1077: int a = m - 1, b = m + 1, c = n - 1, d = n + 1;
  5694  004C94  0EFF               	movlw	255
  5695  004C96  2466               	addwf	animation6@m,w,c
  5696  004C98  6E5E               	movwf	animation6@a,c
  5697  004C9A  6A5F               	clrf	animation6@a+1,c
  5698  004C9C  0EFF               	movlw	255
  5699  004C9E  225F               	addwfc	animation6@a+1,f,c
  5700  004CA0  0E01               	movlw	1
  5701  004CA2  2466               	addwf	animation6@m,w,c
  5702  004CA4  6E60               	movwf	animation6@b,c
  5703  004CA6  6A61               	clrf	animation6@b+1,c
  5704  004CA8  0E00               	movlw	0
  5705  004CAA  2261               	addwfc	animation6@b+1,f,c
  5706  004CAC  0EFF               	movlw	255
  5707  004CAE  2458               	addwf	animation6@n,w,c
  5708  004CB0  6E62               	movwf	animation6@c,c
  5709  004CB2  6A63               	clrf	animation6@c+1,c
  5710  004CB4  0EFF               	movlw	255
  5711  004CB6  2263               	addwfc	animation6@c+1,f,c
  5712  004CB8  0E01               	movlw	1
  5713  004CBA  2458               	addwf	animation6@n,w,c
  5714  004CBC  6E64               	movwf	animation6@d,c
  5715  004CBE  6A65               	clrf	animation6@d+1,c
  5716  004CC0  0E00               	movlw	0
  5717  004CC2  2265               	addwfc	animation6@d+1,f,c
  5718                           
  5719                           ;newmain.c: 1079: set_led(Buttons[m][n]);
  5720  004CC4  5066               	movf	animation6@m,w,c
  5721  004CC6  0D08               	mullw	8
  5722  004CC8  0EF9               	movlw	low _Buttons
  5723  004CCA  6E59               	movwf	??_animation6& (0+255),c
  5724  004CCC  0E7B               	movlw	high _Buttons
  5725  004CCE  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5726  004CD0  50F3               	movf	prodl,w,c
  5727  004CD2  2659               	addwf	??_animation6,f,c
  5728  004CD4  50F4               	movf	prodh,w,c
  5729  004CD6  225A               	addwfc	??_animation6+1,f,c
  5730  004CD8  5058               	movf	animation6@n,w,c
  5731  004CDA  0D01               	mullw	1
  5732  004CDC  50F3               	movf	prodl,w,c
  5733  004CDE  2659               	addwf	??_animation6,f,c
  5734  004CE0  50F4               	movf	prodh,w,c
  5735  004CE2  225A               	addwfc	??_animation6+1,f,c
  5736  004CE4  C059  FFF6         	movff	??_animation6,tblptrl
  5737  004CE8  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5738  004CEC                     	if	0	;tblptru may be non-zero
  5739  004CEC                     	endif
  5740  004CEC                     	if	0	;tblptru may be non-zero
  5741  004CEC                     	endif
  5742  004CEC  0008               	tblrd		*
  5743  004CEE  50F5               	movf	tablat,w,c
  5744  004CF0  EC58  F023         	call	_set_led
  5745                           
  5746                           ;newmain.c: 1080: write_display();
  5747  004CF4  EC0A  F024         	call	_write_display	;wreg free
  5748                           
  5749                           ;newmain.c: 1081: _delay((unsigned long)((10)*(4000000/4000.0)));
  5750  004CF8  0E0D               	movlw	13
  5751  004CFA  6E59               	movwf	??_animation6& (0+255),c
  5752  004CFC  0EFC               	movlw	252
  5753  004CFE                     u6987:
  5754  004CFE  2EE8               	decfsz	wreg,f,c
  5755  004D00  D7FE               	bra	u6987
  5756  004D02  2E59               	decfsz	??_animation6& (0+255),f,c
  5757  004D04  D7FC               	bra	u6987
  5758                           
  5759                           ;newmain.c: 1082: clr_led(Buttons[m][n]);
  5760  004D06  5066               	movf	animation6@m,w,c
  5761  004D08  0D08               	mullw	8
  5762  004D0A  0EF9               	movlw	low _Buttons
  5763  004D0C  6E59               	movwf	??_animation6& (0+255),c
  5764  004D0E  0E7B               	movlw	high _Buttons
  5765  004D10  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5766  004D12  50F3               	movf	prodl,w,c
  5767  004D14  2659               	addwf	??_animation6,f,c
  5768  004D16  50F4               	movf	prodh,w,c
  5769  004D18  225A               	addwfc	??_animation6+1,f,c
  5770  004D1A  5058               	movf	animation6@n,w,c
  5771  004D1C  0D01               	mullw	1
  5772  004D1E  50F3               	movf	prodl,w,c
  5773  004D20  2659               	addwf	??_animation6,f,c
  5774  004D22  50F4               	movf	prodh,w,c
  5775  004D24  225A               	addwfc	??_animation6+1,f,c
  5776  004D26  C059  FFF6         	movff	??_animation6,tblptrl
  5777  004D2A  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5778  004D2E                     	if	0	;tblptru may be non-zero
  5779  004D2E                     	endif
  5780  004D2E                     	if	0	;tblptru may be non-zero
  5781  004D2E                     	endif
  5782  004D2E  0008               	tblrd		*
  5783  004D30  50F5               	movf	tablat,w,c
  5784  004D32  ECAF  F023         	call	_clr_led
  5785                           
  5786                           ;newmain.c: 1083: write_display();
  5787  004D36  EC0A  F024         	call	_write_display	;wreg free
  5788                           
  5789                           ;newmain.c: 1085: for (uint8_t x = 0; x < 8; x++) {
  5790  004D3A  0E00               	movlw	0
  5791  004D3C  6E5D               	movwf	animation6@x,c
  5792  004D3E                     l4480:
  5793  004D3E  0E07               	movlw	7
  5794  004D40  645D               	cpfsgt	animation6@x,c
  5795  004D42  D001               	goto	l500
  5796  004D44  0012               	return	
  5797  004D46                     l500:
  5798                           
  5799                           ;newmain.c: 1086: if (a >= 0)
  5800  004D46  BE5F               	btfsc	animation6@a+1,7,c
  5801  004D48  D023               	goto	l502
  5802                           
  5803                           ;newmain.c: 1087: set_led(Buttons[a][n]);
  5804  004D4A  5058               	movf	animation6@n,w,c
  5805  004D4C  0D01               	mullw	1
  5806  004D4E  C05E  F059         	movff	animation6@a,??_animation6
  5807  004D52  C05F  F05A         	movff	animation6@a+1,??_animation6+1
  5808  004D56  90D8               	bcf	status,0,c
  5809  004D58  3659               	rlcf	??_animation6,f,c
  5810  004D5A  365A               	rlcf	??_animation6+1,f,c
  5811  004D5C  90D8               	bcf	status,0,c
  5812  004D5E  3659               	rlcf	??_animation6,f,c
  5813  004D60  365A               	rlcf	??_animation6+1,f,c
  5814  004D62  90D8               	bcf	status,0,c
  5815  004D64  3659               	rlcf	??_animation6,f,c
  5816  004D66  365A               	rlcf	??_animation6+1,f,c
  5817  004D68  0EF9               	movlw	low _Buttons
  5818  004D6A  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5819  004D6C  0E7B               	movlw	high _Buttons
  5820  004D6E  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5821  004D70  5059               	movf	??_animation6,w,c
  5822  004D72  265B               	addwf	??_animation6+2,f,c
  5823  004D74  505A               	movf	??_animation6+1,w,c
  5824  004D76  225C               	addwfc	??_animation6+3,f,c
  5825  004D78  50F3               	movf	prodl,w,c
  5826  004D7A  265B               	addwf	??_animation6+2,f,c
  5827  004D7C  50F4               	movf	prodh,w,c
  5828  004D7E  225C               	addwfc	??_animation6+3,f,c
  5829  004D80  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5830  004D84  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5831  004D88                     	if	0	;tblptru may be non-zero
  5832  004D88                     	endif
  5833  004D88                     	if	0	;tblptru may be non-zero
  5834  004D88                     	endif
  5835  004D88  0008               	tblrd		*
  5836  004D8A  50F5               	movf	tablat,w,c
  5837  004D8C  EC58  F023         	call	_set_led
  5838  004D90                     l502:
  5839                           
  5840                           ;newmain.c: 1088: if (b < 8)
  5841  004D90  BE61               	btfsc	animation6@b+1,7,c
  5842  004D92  D006               	goto	u5730
  5843  004D94  5061               	movf	animation6@b+1,w,c
  5844  004D96  E127               	bnz	l4492
  5845  004D98  0E08               	movlw	8
  5846  004D9A  5C60               	subwf	animation6@b,w,c
  5847  004D9C  B0D8               	btfsc	status,0,c
  5848  004D9E  D023               	goto	l503
  5849  004DA0                     u5730:
  5850                           
  5851                           ;newmain.c: 1089: set_led(Buttons[b][n]);
  5852  004DA0  5058               	movf	animation6@n,w,c
  5853  004DA2  0D01               	mullw	1
  5854  004DA4  C060  F059         	movff	animation6@b,??_animation6
  5855  004DA8  C061  F05A         	movff	animation6@b+1,??_animation6+1
  5856  004DAC  90D8               	bcf	status,0,c
  5857  004DAE  3659               	rlcf	??_animation6,f,c
  5858  004DB0  365A               	rlcf	??_animation6+1,f,c
  5859  004DB2  90D8               	bcf	status,0,c
  5860  004DB4  3659               	rlcf	??_animation6,f,c
  5861  004DB6  365A               	rlcf	??_animation6+1,f,c
  5862  004DB8  90D8               	bcf	status,0,c
  5863  004DBA  3659               	rlcf	??_animation6,f,c
  5864  004DBC  365A               	rlcf	??_animation6+1,f,c
  5865  004DBE  0EF9               	movlw	low _Buttons
  5866  004DC0  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5867  004DC2  0E7B               	movlw	high _Buttons
  5868  004DC4  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5869  004DC6  5059               	movf	??_animation6,w,c
  5870  004DC8  265B               	addwf	??_animation6+2,f,c
  5871  004DCA  505A               	movf	??_animation6+1,w,c
  5872  004DCC  225C               	addwfc	??_animation6+3,f,c
  5873  004DCE  50F3               	movf	prodl,w,c
  5874  004DD0  265B               	addwf	??_animation6+2,f,c
  5875  004DD2  50F4               	movf	prodh,w,c
  5876  004DD4  225C               	addwfc	??_animation6+3,f,c
  5877  004DD6  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5878  004DDA  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5879  004DDE                     	if	0	;tblptru may be non-zero
  5880  004DDE                     	endif
  5881  004DDE                     	if	0	;tblptru may be non-zero
  5882  004DDE                     	endif
  5883  004DDE  0008               	tblrd		*
  5884  004DE0  50F5               	movf	tablat,w,c
  5885  004DE2  EC58  F023         	call	_set_led
  5886  004DE6                     l503:
  5887  004DE6                     l4492:
  5888                           
  5889                           ;newmain.c: 1090: if (c >= 0)
  5890  004DE6  BE63               	btfsc	animation6@c+1,7,c
  5891  004DE8  D016               	goto	l504
  5892                           
  5893                           ;newmain.c: 1091: set_led(Buttons[m][c]);
  5894  004DEA  5066               	movf	animation6@m,w,c
  5895  004DEC  0D08               	mullw	8
  5896  004DEE  0EF9               	movlw	low _Buttons
  5897  004DF0  6E59               	movwf	??_animation6& (0+255),c
  5898  004DF2  0E7B               	movlw	high _Buttons
  5899  004DF4  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5900  004DF6  50F3               	movf	prodl,w,c
  5901  004DF8  2659               	addwf	??_animation6,f,c
  5902  004DFA  50F4               	movf	prodh,w,c
  5903  004DFC  225A               	addwfc	??_animation6+1,f,c
  5904  004DFE  5062               	movf	animation6@c,w,c
  5905  004E00  2659               	addwf	??_animation6,f,c
  5906  004E02  5063               	movf	animation6@c+1,w,c
  5907  004E04  225A               	addwfc	??_animation6+1,f,c
  5908  004E06  C059  FFF6         	movff	??_animation6,tblptrl
  5909  004E0A  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5910  004E0E                     	if	0	;tblptru may be non-zero
  5911  004E0E                     	endif
  5912  004E0E                     	if	0	;tblptru may be non-zero
  5913  004E0E                     	endif
  5914  004E0E  0008               	tblrd		*
  5915  004E10  50F5               	movf	tablat,w,c
  5916  004E12  EC58  F023         	call	_set_led
  5917  004E16                     l504:
  5918                           
  5919                           ;newmain.c: 1092: if (d < 8)
  5920  004E16  BE65               	btfsc	animation6@d+1,7,c
  5921  004E18  D006               	goto	u5750
  5922  004E1A  5065               	movf	animation6@d+1,w,c
  5923  004E1C  E11A               	bnz	l4500
  5924  004E1E  0E08               	movlw	8
  5925  004E20  5C64               	subwf	animation6@d,w,c
  5926  004E22  B0D8               	btfsc	status,0,c
  5927  004E24  D016               	goto	l505
  5928  004E26                     u5750:
  5929                           
  5930                           ;newmain.c: 1093: set_led(Buttons[m][d]);
  5931  004E26  5066               	movf	animation6@m,w,c
  5932  004E28  0D08               	mullw	8
  5933  004E2A  0EF9               	movlw	low _Buttons
  5934  004E2C  6E59               	movwf	??_animation6& (0+255),c
  5935  004E2E  0E7B               	movlw	high _Buttons
  5936  004E30  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5937  004E32  50F3               	movf	prodl,w,c
  5938  004E34  2659               	addwf	??_animation6,f,c
  5939  004E36  50F4               	movf	prodh,w,c
  5940  004E38  225A               	addwfc	??_animation6+1,f,c
  5941  004E3A  5064               	movf	animation6@d,w,c
  5942  004E3C  2659               	addwf	??_animation6,f,c
  5943  004E3E  5065               	movf	animation6@d+1,w,c
  5944  004E40  225A               	addwfc	??_animation6+1,f,c
  5945  004E42  C059  FFF6         	movff	??_animation6,tblptrl
  5946  004E46  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5947  004E4A                     	if	0	;tblptru may be non-zero
  5948  004E4A                     	endif
  5949  004E4A                     	if	0	;tblptru may be non-zero
  5950  004E4A                     	endif
  5951  004E4A  0008               	tblrd		*
  5952  004E4C  50F5               	movf	tablat,w,c
  5953  004E4E  EC58  F023         	call	_set_led
  5954  004E52                     l505:
  5955  004E52                     l4500:
  5956                           
  5957                           ;newmain.c: 1095: write_display();
  5958  004E52  EC0A  F024         	call	_write_display	;wreg free
  5959                           
  5960                           ;newmain.c: 1096: _delay((unsigned long)((10)*(4000000/4000.0)));
  5961  004E56  0E0D               	movlw	13
  5962  004E58  6E59               	movwf	??_animation6& (0+255),c
  5963  004E5A  0EFC               	movlw	252
  5964  004E5C                     u6997:
  5965  004E5C  2EE8               	decfsz	wreg,f,c
  5966  004E5E  D7FE               	bra	u6997
  5967  004E60  2E59               	decfsz	??_animation6& (0+255),f,c
  5968  004E62  D7FC               	bra	u6997
  5969                           
  5970                           ;newmain.c: 1097: clr_led(Buttons[a][n]);
  5971  004E64  5058               	movf	animation6@n,w,c
  5972  004E66  0D01               	mullw	1
  5973  004E68  C05E  F059         	movff	animation6@a,??_animation6
  5974  004E6C  C05F  F05A         	movff	animation6@a+1,??_animation6+1
  5975  004E70  90D8               	bcf	status,0,c
  5976  004E72  3659               	rlcf	??_animation6,f,c
  5977  004E74  365A               	rlcf	??_animation6+1,f,c
  5978  004E76  90D8               	bcf	status,0,c
  5979  004E78  3659               	rlcf	??_animation6,f,c
  5980  004E7A  365A               	rlcf	??_animation6+1,f,c
  5981  004E7C  90D8               	bcf	status,0,c
  5982  004E7E  3659               	rlcf	??_animation6,f,c
  5983  004E80  365A               	rlcf	??_animation6+1,f,c
  5984  004E82  0EF9               	movlw	low _Buttons
  5985  004E84  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5986  004E86  0E7B               	movlw	high _Buttons
  5987  004E88  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5988  004E8A  5059               	movf	??_animation6,w,c
  5989  004E8C  265B               	addwf	??_animation6+2,f,c
  5990  004E8E  505A               	movf	??_animation6+1,w,c
  5991  004E90  225C               	addwfc	??_animation6+3,f,c
  5992  004E92  50F3               	movf	prodl,w,c
  5993  004E94  265B               	addwf	??_animation6+2,f,c
  5994  004E96  50F4               	movf	prodh,w,c
  5995  004E98  225C               	addwfc	??_animation6+3,f,c
  5996  004E9A  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5997  004E9E  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5998  004EA2                     	if	0	;tblptru may be non-zero
  5999  004EA2                     	endif
  6000  004EA2                     	if	0	;tblptru may be non-zero
  6001  004EA2                     	endif
  6002  004EA2  0008               	tblrd		*
  6003  004EA4  50F5               	movf	tablat,w,c
  6004  004EA6  ECAF  F023         	call	_clr_led
  6005                           
  6006                           ;newmain.c: 1098: clr_led(Buttons[b][n]);
  6007  004EAA  5058               	movf	animation6@n,w,c
  6008  004EAC  0D01               	mullw	1
  6009  004EAE  C060  F059         	movff	animation6@b,??_animation6
  6010  004EB2  C061  F05A         	movff	animation6@b+1,??_animation6+1
  6011  004EB6  90D8               	bcf	status,0,c
  6012  004EB8  3659               	rlcf	??_animation6,f,c
  6013  004EBA  365A               	rlcf	??_animation6+1,f,c
  6014  004EBC  90D8               	bcf	status,0,c
  6015  004EBE  3659               	rlcf	??_animation6,f,c
  6016  004EC0  365A               	rlcf	??_animation6+1,f,c
  6017  004EC2  90D8               	bcf	status,0,c
  6018  004EC4  3659               	rlcf	??_animation6,f,c
  6019  004EC6  365A               	rlcf	??_animation6+1,f,c
  6020  004EC8  0EF9               	movlw	low _Buttons
  6021  004ECA  6E5B               	movwf	(??_animation6+2)& (0+255),c
  6022  004ECC  0E7B               	movlw	high _Buttons
  6023  004ECE  6E5C               	movwf	(??_animation6+3)& (0+255),c
  6024  004ED0  5059               	movf	??_animation6,w,c
  6025  004ED2  265B               	addwf	??_animation6+2,f,c
  6026  004ED4  505A               	movf	??_animation6+1,w,c
  6027  004ED6  225C               	addwfc	??_animation6+3,f,c
  6028  004ED8  50F3               	movf	prodl,w,c
  6029  004EDA  265B               	addwf	??_animation6+2,f,c
  6030  004EDC  50F4               	movf	prodh,w,c
  6031  004EDE  225C               	addwfc	??_animation6+3,f,c
  6032  004EE0  C05B  FFF6         	movff	??_animation6+2,tblptrl
  6033  004EE4  C05C  FFF7         	movff	??_animation6+3,tblptrh
  6034  004EE8                     	if	0	;tblptru may be non-zero
  6035  004EE8                     	endif
  6036  004EE8                     	if	0	;tblptru may be non-zero
  6037  004EE8                     	endif
  6038  004EE8  0008               	tblrd		*
  6039  004EEA  50F5               	movf	tablat,w,c
  6040  004EEC  ECAF  F023         	call	_clr_led
  6041                           
  6042                           ;newmain.c: 1099: clr_led(Buttons[m][c]);
  6043  004EF0  5066               	movf	animation6@m,w,c
  6044  004EF2  0D08               	mullw	8
  6045  004EF4  0EF9               	movlw	low _Buttons
  6046  004EF6  6E59               	movwf	??_animation6& (0+255),c
  6047  004EF8  0E7B               	movlw	high _Buttons
  6048  004EFA  6E5A               	movwf	(??_animation6+1)& (0+255),c
  6049  004EFC  50F3               	movf	prodl,w,c
  6050  004EFE  2659               	addwf	??_animation6,f,c
  6051  004F00  50F4               	movf	prodh,w,c
  6052  004F02  225A               	addwfc	??_animation6+1,f,c
  6053  004F04  5062               	movf	animation6@c,w,c
  6054  004F06  2659               	addwf	??_animation6,f,c
  6055  004F08  5063               	movf	animation6@c+1,w,c
  6056  004F0A  225A               	addwfc	??_animation6+1,f,c
  6057  004F0C  C059  FFF6         	movff	??_animation6,tblptrl
  6058  004F10  C05A  FFF7         	movff	??_animation6+1,tblptrh
  6059  004F14                     	if	0	;tblptru may be non-zero
  6060  004F14                     	endif
  6061  004F14                     	if	0	;tblptru may be non-zero
  6062  004F14                     	endif
  6063  004F14  0008               	tblrd		*
  6064  004F16  50F5               	movf	tablat,w,c
  6065  004F18  ECAF  F023         	call	_clr_led
  6066                           
  6067                           ;newmain.c: 1100: clr_led(Buttons[m][d]);
  6068  004F1C  5066               	movf	animation6@m,w,c
  6069  004F1E  0D08               	mullw	8
  6070  004F20  0EF9               	movlw	low _Buttons
  6071  004F22  6E59               	movwf	??_animation6& (0+255),c
  6072  004F24  0E7B               	movlw	high _Buttons
  6073  004F26  6E5A               	movwf	(??_animation6+1)& (0+255),c
  6074  004F28  50F3               	movf	prodl,w,c
  6075  004F2A  2659               	addwf	??_animation6,f,c
  6076  004F2C  50F4               	movf	prodh,w,c
  6077  004F2E  225A               	addwfc	??_animation6+1,f,c
  6078  004F30  5064               	movf	animation6@d,w,c
  6079  004F32  2659               	addwf	??_animation6,f,c
  6080  004F34  5065               	movf	animation6@d+1,w,c
  6081  004F36  225A               	addwfc	??_animation6+1,f,c
  6082  004F38  C059  FFF6         	movff	??_animation6,tblptrl
  6083  004F3C  C05A  FFF7         	movff	??_animation6+1,tblptrh
  6084  004F40                     	if	0	;tblptru may be non-zero
  6085  004F40                     	endif
  6086  004F40                     	if	0	;tblptru may be non-zero
  6087  004F40                     	endif
  6088  004F40  0008               	tblrd		*
  6089  004F42  50F5               	movf	tablat,w,c
  6090  004F44  ECAF  F023         	call	_clr_led
  6091                           
  6092                           ;newmain.c: 1101: write_display();
  6093  004F48  EC0A  F024         	call	_write_display	;wreg free
  6094                           
  6095                           ;newmain.c: 1102: a--;
  6096  004F4C  065E               	decf	animation6@a,f,c
  6097  004F4E  A0D8               	btfss	status,0,c
  6098  004F50  065F               	decf	animation6@a+1,f,c
  6099                           
  6100                           ;newmain.c: 1103: b++;
  6101  004F52  4A60               	infsnz	animation6@b,f,c
  6102  004F54  2A61               	incf	animation6@b+1,f,c
  6103                           
  6104                           ;newmain.c: 1104: c--;
  6105  004F56  0662               	decf	animation6@c,f,c
  6106  004F58  A0D8               	btfss	status,0,c
  6107  004F5A  0663               	decf	animation6@c+1,f,c
  6108                           
  6109                           ;newmain.c: 1105: d++;
  6110  004F5C  4A64               	infsnz	animation6@d,f,c
  6111  004F5E  2A65               	incf	animation6@d+1,f,c
  6112  004F60  2A5D               	incf	animation6@x,f,c
  6113  004F62  D6ED               	goto	l4480
  6114  004F64                     __end_of_animation6:
  6115                           	opt stack 0
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           postinc0	equ	0xFEE
  6123                           wreg	equ	0xFE8
  6124                           postinc1	equ	0xFE6
  6125                           fsr1h	equ	0xFE2
  6126                           fsr1l	equ	0xFE1
  6127                           indf2	equ	0xFDF
  6128                           postinc2	equ	0xFDE
  6129                           postdec2	equ	0xFDD
  6130                           fsr2h	equ	0xFDA
  6131                           fsr2l	equ	0xFD9
  6132                           status	equ	0xFD8
  6133                           
  6134 ;; *************** function _animation5 *****************
  6135 ;; Defined at:
  6136 ;;		line 1002 in file "newmain.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  m               1    wreg     unsigned char 
  6139 ;;  n               1   21[COMRAM] unsigned char 
  6140 ;;  h               1   22[COMRAM] unsigned char 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  m               1   25[COMRAM] unsigned char 
  6143 ;;  x               1   28[COMRAM] unsigned char 
  6144 ;;  i               1   27[COMRAM] unsigned char 
  6145 ;;  j               1   26[COMRAM] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      void 
  6148 ;; Registers used:
  6149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6155 ;;      Params:         2       0       0       0       0       0       0
  6156 ;;      Locals:         4       0       0       0       0       0       0
  6157 ;;      Temps:          2       0       0       0       0       0       0
  6158 ;;      Totals:         8       0       0       0       0       0       0
  6159 ;;Total ram usage:        8 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:    4
  6162 ;; This function calls:
  6163 ;;		_clr_led
  6164 ;;		_set_led
  6165 ;;		_write_display
  6166 ;; This function is called by:
  6167 ;;		_main
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text11
  6172  004F64                     __ptext11:
  6173                           	opt stack 0
  6174  004F64                     _animation5:
  6175                           	opt stack 26
  6176                           
  6177                           ;incstack = 0
  6178                           ;animation5@m stored from wreg
  6179  004F64  6E5C               	movwf	animation5@m,c
  6180                           
  6181                           ;newmain.c: 1003: uint8_t i = 0, j = 0, x = 0;
  6182  004F66  0E00               	movlw	0
  6183  004F68  6E5E               	movwf	animation5@i,c
  6184  004F6A  0E00               	movlw	0
  6185  004F6C  6E5D               	movwf	animation5@j,c
  6186  004F6E  0E00               	movlw	0
  6187  004F70  6E5F               	movwf	animation5@x,c
  6188                           
  6189                           ;newmain.c: 1005: if (m == 0) {
  6190  004F72  505C               	movf	animation5@m,w,c
  6191  004F74  A4D8               	btfss	status,2,c
  6192  004F76  D05C               	goto	l462
  6193                           
  6194                           ;newmain.c: 1006: for (i = 0; i < 16; i++) {
  6195  004F78  0E00               	movlw	0
  6196  004F7A  6E5E               	movwf	animation5@i,c
  6197  004F7C                     l4318:
  6198  004F7C  0E0F               	movlw	15
  6199  004F7E  645E               	cpfsgt	animation5@i,c
  6200  004F80  D001               	goto	l463
  6201  004F82  0012               	return	
  6202  004F84                     l463:
  6203                           
  6204                           ;newmain.c: 1007: if (show5[i][0] == n) {
  6205  004F84  505E               	movf	animation5@i,w,c
  6206  004F86  0D04               	mullw	4
  6207  004F88  0E39               	movlw	low _show5
  6208  004F8A  24F3               	addwf	prodl,w,c
  6209  004F8C  6EF6               	movwf	tblptrl,c
  6210  004F8E  0E7B               	movlw	high _show5
  6211  004F90  20F4               	addwfc	prodh,w,c
  6212  004F92  6EF7               	movwf	tblptrh,c
  6213  004F94                     	if	0	;There are less than 3 active tblptr bytes
  6214  004F94                     	endif
  6215  004F94  0008               	tblrd		*
  6216  004F96  50F5               	movf	tablat,w,c
  6217  004F98  1858               	xorwf	animation5@n,w,c
  6218  004F9A  A4D8               	btfss	status,2,c
  6219  004F9C  D047               	goto	l465
  6220                           
  6221                           ;newmain.c: 1008: for (j = 0; j < 4; j++) {
  6222  004F9E  0E00               	movlw	0
  6223  004FA0  6E5D               	movwf	animation5@j,c
  6224  004FA2                     l4326:
  6225  004FA2  0E03               	movlw	3
  6226  004FA4  645D               	cpfsgt	animation5@j,c
  6227  004FA6  D001               	goto	l466
  6228  004FA8  D03E               	goto	u5480
  6229  004FAA                     l466:
  6230                           
  6231                           ;newmain.c: 1009: x = show5[i][j];
  6232  004FAA  505E               	movf	animation5@i,w,c
  6233  004FAC  0D04               	mullw	4
  6234  004FAE  0E39               	movlw	low _show5
  6235  004FB0  6E5A               	movwf	??_animation5& (0+255),c
  6236  004FB2  0E7B               	movlw	high _show5
  6237  004FB4  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6238  004FB6  50F3               	movf	prodl,w,c
  6239  004FB8  265A               	addwf	??_animation5,f,c
  6240  004FBA  50F4               	movf	prodh,w,c
  6241  004FBC  225B               	addwfc	??_animation5+1,f,c
  6242  004FBE  505D               	movf	animation5@j,w,c
  6243  004FC0  0D01               	mullw	1
  6244  004FC2  50F3               	movf	prodl,w,c
  6245  004FC4  265A               	addwf	??_animation5,f,c
  6246  004FC6  50F4               	movf	prodh,w,c
  6247  004FC8  225B               	addwfc	??_animation5+1,f,c
  6248  004FCA  C05A  FFF6         	movff	??_animation5,tblptrl
  6249  004FCE  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6250  004FD2                     	if	0	;tblptru may be non-zero
  6251  004FD2                     	endif
  6252  004FD2                     	if	0	;tblptru may be non-zero
  6253  004FD2                     	endif
  6254  004FD2  0008               	tblrd		*
  6255  004FD4  CFF5 F05F          	movff	tablat,animation5@x
  6256                           
  6257                           ;newmain.c: 1010: if (temp[x] == 0) {
  6258  004FD8  505F               	movf	animation5@x,w,c
  6259  004FDA  0D01               	mullw	1
  6260  004FDC  0E01               	movlw	low _temp
  6261  004FDE  24F3               	addwf	prodl,w,c
  6262  004FE0  6ED9               	movwf	fsr2l,c
  6263  004FE2  0E00               	movlw	high _temp
  6264  004FE4  20F4               	addwfc	prodh,w,c
  6265  004FE6  6EDA               	movwf	fsr2h,c
  6266  004FE8  50DF               	movf	indf2,w,c
  6267  004FEA  A4D8               	btfss	status,2,c
  6268  004FEC  D00D               	goto	l468
  6269                           
  6270                           ;newmain.c: 1011: set_led(x);
  6271  004FEE  505F               	movf	animation5@x,w,c
  6272  004FF0  EC58  F023         	call	_set_led
  6273                           
  6274                           ;newmain.c: 1012: temp[x] = 1;
  6275  004FF4  505F               	movf	animation5@x,w,c
  6276  004FF6  0D01               	mullw	1
  6277  004FF8  0E01               	movlw	low _temp
  6278  004FFA  24F3               	addwf	prodl,w,c
  6279  004FFC  6ED9               	movwf	fsr2l,c
  6280  004FFE  0E00               	movlw	high _temp
  6281  005000  20F4               	addwfc	prodh,w,c
  6282  005002  6EDA               	movwf	fsr2h,c
  6283  005004  0E01               	movlw	1
  6284  005006  D00C               	goto	L8
  6285  005008                     l468:
  6286                           
  6287                           ;newmain.c: 1014: clr_led(x);
  6288  005008  505F               	movf	animation5@x,w,c
  6289  00500A  ECAF  F023         	call	_clr_led
  6290                           
  6291                           ;newmain.c: 1015: temp[x] = 0;
  6292  00500E  505F               	movf	animation5@x,w,c
  6293  005010  0D01               	mullw	1
  6294  005012  0E01               	movlw	low _temp
  6295  005014  24F3               	addwf	prodl,w,c
  6296  005016  6ED9               	movwf	fsr2l,c
  6297  005018  0E00               	movlw	high _temp
  6298  00501A  20F4               	addwfc	prodh,w,c
  6299  00501C  6EDA               	movwf	fsr2h,c
  6300  00501E  0E00               	movlw	0
  6301  005020                     L8:
  6302  005020  6EDF               	movwf	indf2,c
  6303  005022  2A5D               	incf	animation5@j,f,c
  6304  005024  D7BE               	goto	l4326
  6305  005026                     u5480:
  6306                           
  6307                           ;newmain.c: 1016: }
  6308                           ;newmain.c: 1017: }
  6309                           ;newmain.c: 1018: write_display();
  6310  005026  EC0A  F024         	call	_write_display	;wreg free
  6311                           
  6312                           ;newmain.c: 1019: break;
  6313  00502A  0012               	return	
  6314  00502C                     l465:
  6315  00502C  2A5E               	incf	animation5@i,f,c
  6316  00502E  D7A6               	goto	l4318
  6317  005030                     l462:
  6318  005030  045C               	decf	animation5@m,w,c
  6319  005032  A4D8               	btfss	status,2,c
  6320  005034  D05D               	goto	l471
  6321                           
  6322                           ;newmain.c: 1023: for (i = 0; i < 16; i++) {
  6323  005036  0E00               	movlw	0
  6324  005038  6E5E               	movwf	animation5@i,c
  6325  00503A                     l4356:
  6326  00503A  0E0F               	movlw	15
  6327  00503C  645E               	cpfsgt	animation5@i,c
  6328  00503E  D001               	goto	l472
  6329  005040  0012               	return	
  6330  005042                     l472:
  6331                           
  6332                           ;newmain.c: 1024: if (show5[i][0] == n) {
  6333  005042  505E               	movf	animation5@i,w,c
  6334  005044  0D04               	mullw	4
  6335  005046  0E39               	movlw	low _show5
  6336  005048  24F3               	addwf	prodl,w,c
  6337  00504A  6EF6               	movwf	tblptrl,c
  6338  00504C  0E7B               	movlw	high _show5
  6339  00504E  20F4               	addwfc	prodh,w,c
  6340  005050  6EF7               	movwf	tblptrh,c
  6341  005052                     	if	0	;There are less than 3 active tblptr bytes
  6342  005052                     	endif
  6343  005052  0008               	tblrd		*
  6344  005054  50F5               	movf	tablat,w,c
  6345  005056  1858               	xorwf	animation5@n,w,c
  6346  005058  A4D8               	btfss	status,2,c
  6347  00505A  D048               	goto	l474
  6348                           
  6349                           ;newmain.c: 1025: for (j = 0; j < 4; j++) {
  6350  00505C  0E00               	movlw	0
  6351  00505E  6E5D               	movwf	animation5@j,c
  6352  005060                     l4364:
  6353  005060  0E03               	movlw	3
  6354  005062  645D               	cpfsgt	animation5@j,c
  6355  005064  D001               	goto	l475
  6356  005066  D03F               	goto	u5550
  6357  005068                     l475:
  6358                           
  6359                           ;newmain.c: 1026: x = show5[i][j] + 16;
  6360  005068  505E               	movf	animation5@i,w,c
  6361  00506A  0D04               	mullw	4
  6362  00506C  0E39               	movlw	low _show5
  6363  00506E  6E5A               	movwf	??_animation5& (0+255),c
  6364  005070  0E7B               	movlw	high _show5
  6365  005072  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6366  005074  50F3               	movf	prodl,w,c
  6367  005076  265A               	addwf	??_animation5,f,c
  6368  005078  50F4               	movf	prodh,w,c
  6369  00507A  225B               	addwfc	??_animation5+1,f,c
  6370  00507C  505D               	movf	animation5@j,w,c
  6371  00507E  0D01               	mullw	1
  6372  005080  50F3               	movf	prodl,w,c
  6373  005082  265A               	addwf	??_animation5,f,c
  6374  005084  50F4               	movf	prodh,w,c
  6375  005086  225B               	addwfc	??_animation5+1,f,c
  6376  005088  C05A  FFF6         	movff	??_animation5,tblptrl
  6377  00508C  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6378  005090                     	if	0	;tblptru may be non-zero
  6379  005090                     	endif
  6380  005090                     	if	0	;tblptru may be non-zero
  6381  005090                     	endif
  6382  005090  0008               	tblrd		*
  6383  005092  50F5               	movf	tablat,w,c
  6384  005094  0F10               	addlw	16
  6385  005096  6E5F               	movwf	animation5@x,c
  6386                           
  6387                           ;newmain.c: 1027: if (temp[x] == 0) {
  6388  005098  505F               	movf	animation5@x,w,c
  6389  00509A  0D01               	mullw	1
  6390  00509C  0E01               	movlw	low _temp
  6391  00509E  24F3               	addwf	prodl,w,c
  6392  0050A0  6ED9               	movwf	fsr2l,c
  6393  0050A2  0E00               	movlw	high _temp
  6394  0050A4  20F4               	addwfc	prodh,w,c
  6395  0050A6  6EDA               	movwf	fsr2h,c
  6396  0050A8  50DF               	movf	indf2,w,c
  6397  0050AA  A4D8               	btfss	status,2,c
  6398  0050AC  D00D               	goto	l477
  6399                           
  6400                           ;newmain.c: 1028: set_led(x);
  6401  0050AE  505F               	movf	animation5@x,w,c
  6402  0050B0  EC58  F023         	call	_set_led
  6403                           
  6404                           ;newmain.c: 1029: temp[x] = 1;
  6405  0050B4  505F               	movf	animation5@x,w,c
  6406  0050B6  0D01               	mullw	1
  6407  0050B8  0E01               	movlw	low _temp
  6408  0050BA  24F3               	addwf	prodl,w,c
  6409  0050BC  6ED9               	movwf	fsr2l,c
  6410  0050BE  0E00               	movlw	high _temp
  6411  0050C0  20F4               	addwfc	prodh,w,c
  6412  0050C2  6EDA               	movwf	fsr2h,c
  6413  0050C4  0E01               	movlw	1
  6414  0050C6  D00C               	goto	L9
  6415  0050C8                     l477:
  6416                           
  6417                           ;newmain.c: 1031: clr_led(x);
  6418  0050C8  505F               	movf	animation5@x,w,c
  6419  0050CA  ECAF  F023         	call	_clr_led
  6420                           
  6421                           ;newmain.c: 1032: temp[x] = 0;
  6422  0050CE  505F               	movf	animation5@x,w,c
  6423  0050D0  0D01               	mullw	1
  6424  0050D2  0E01               	movlw	low _temp
  6425  0050D4  24F3               	addwf	prodl,w,c
  6426  0050D6  6ED9               	movwf	fsr2l,c
  6427  0050D8  0E00               	movlw	high _temp
  6428  0050DA  20F4               	addwfc	prodh,w,c
  6429  0050DC  6EDA               	movwf	fsr2h,c
  6430  0050DE  0E00               	movlw	0
  6431  0050E0                     L9:
  6432  0050E0  6EDF               	movwf	indf2,c
  6433  0050E2  2A5D               	incf	animation5@j,f,c
  6434  0050E4  D7BD               	goto	l4364
  6435  0050E6                     u5550:
  6436                           
  6437                           ;newmain.c: 1033: }
  6438                           ;newmain.c: 1034: }
  6439                           ;newmain.c: 1035: write_display();
  6440  0050E6  EC0A  F024         	call	_write_display	;wreg free
  6441                           
  6442                           ;newmain.c: 1036: break;
  6443  0050EA  0012               	return	
  6444  0050EC                     l474:
  6445  0050EC  2A5E               	incf	animation5@i,f,c
  6446  0050EE  D7A5               	goto	l4356
  6447  0050F0                     l471:
  6448  0050F0  0E02               	movlw	2
  6449  0050F2  185C               	xorwf	animation5@m,w,c
  6450  0050F4  A4D8               	btfss	status,2,c
  6451  0050F6  D05D               	goto	l480
  6452                           
  6453                           ;newmain.c: 1040: for (i = 0; i < 16; i++) {
  6454  0050F8  0E00               	movlw	0
  6455  0050FA  6E5E               	movwf	animation5@i,c
  6456  0050FC                     l4394:
  6457  0050FC  0E0F               	movlw	15
  6458  0050FE  645E               	cpfsgt	animation5@i,c
  6459  005100  D001               	goto	l481
  6460  005102  0012               	return	
  6461  005104                     l481:
  6462                           
  6463                           ;newmain.c: 1041: if (show5[i][0] == n) {
  6464  005104  505E               	movf	animation5@i,w,c
  6465  005106  0D04               	mullw	4
  6466  005108  0E39               	movlw	low _show5
  6467  00510A  24F3               	addwf	prodl,w,c
  6468  00510C  6EF6               	movwf	tblptrl,c
  6469  00510E  0E7B               	movlw	high _show5
  6470  005110  20F4               	addwfc	prodh,w,c
  6471  005112  6EF7               	movwf	tblptrh,c
  6472  005114                     	if	0	;There are less than 3 active tblptr bytes
  6473  005114                     	endif
  6474  005114  0008               	tblrd		*
  6475  005116  50F5               	movf	tablat,w,c
  6476  005118  1858               	xorwf	animation5@n,w,c
  6477  00511A  A4D8               	btfss	status,2,c
  6478  00511C  D048               	goto	l483
  6479                           
  6480                           ;newmain.c: 1042: for (j = 0; j < 4; j++) {
  6481  00511E  0E00               	movlw	0
  6482  005120  6E5D               	movwf	animation5@j,c
  6483  005122                     l4402:
  6484  005122  0E03               	movlw	3
  6485  005124  645D               	cpfsgt	animation5@j,c
  6486  005126  D001               	goto	l484
  6487  005128  D03F               	goto	u5620
  6488  00512A                     l484:
  6489                           
  6490                           ;newmain.c: 1043: x = show5[i][j] + 32;
  6491  00512A  505E               	movf	animation5@i,w,c
  6492  00512C  0D04               	mullw	4
  6493  00512E  0E39               	movlw	low _show5
  6494  005130  6E5A               	movwf	??_animation5& (0+255),c
  6495  005132  0E7B               	movlw	high _show5
  6496  005134  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6497  005136  50F3               	movf	prodl,w,c
  6498  005138  265A               	addwf	??_animation5,f,c
  6499  00513A  50F4               	movf	prodh,w,c
  6500  00513C  225B               	addwfc	??_animation5+1,f,c
  6501  00513E  505D               	movf	animation5@j,w,c
  6502  005140  0D01               	mullw	1
  6503  005142  50F3               	movf	prodl,w,c
  6504  005144  265A               	addwf	??_animation5,f,c
  6505  005146  50F4               	movf	prodh,w,c
  6506  005148  225B               	addwfc	??_animation5+1,f,c
  6507  00514A  C05A  FFF6         	movff	??_animation5,tblptrl
  6508  00514E  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6509  005152                     	if	0	;tblptru may be non-zero
  6510  005152                     	endif
  6511  005152                     	if	0	;tblptru may be non-zero
  6512  005152                     	endif
  6513  005152  0008               	tblrd		*
  6514  005154  50F5               	movf	tablat,w,c
  6515  005156  0F20               	addlw	32
  6516  005158  6E5F               	movwf	animation5@x,c
  6517                           
  6518                           ;newmain.c: 1044: if (temp[x] == 0) {
  6519  00515A  505F               	movf	animation5@x,w,c
  6520  00515C  0D01               	mullw	1
  6521  00515E  0E01               	movlw	low _temp
  6522  005160  24F3               	addwf	prodl,w,c
  6523  005162  6ED9               	movwf	fsr2l,c
  6524  005164  0E00               	movlw	high _temp
  6525  005166  20F4               	addwfc	prodh,w,c
  6526  005168  6EDA               	movwf	fsr2h,c
  6527  00516A  50DF               	movf	indf2,w,c
  6528  00516C  A4D8               	btfss	status,2,c
  6529  00516E  D00D               	goto	l486
  6530                           
  6531                           ;newmain.c: 1045: set_led(x);
  6532  005170  505F               	movf	animation5@x,w,c
  6533  005172  EC58  F023         	call	_set_led
  6534                           
  6535                           ;newmain.c: 1046: temp[x] = 1;
  6536  005176  505F               	movf	animation5@x,w,c
  6537  005178  0D01               	mullw	1
  6538  00517A  0E01               	movlw	low _temp
  6539  00517C  24F3               	addwf	prodl,w,c
  6540  00517E  6ED9               	movwf	fsr2l,c
  6541  005180  0E00               	movlw	high _temp
  6542  005182  20F4               	addwfc	prodh,w,c
  6543  005184  6EDA               	movwf	fsr2h,c
  6544  005186  0E01               	movlw	1
  6545  005188  D00C               	goto	L10
  6546  00518A                     l486:
  6547                           
  6548                           ;newmain.c: 1048: clr_led(x);
  6549  00518A  505F               	movf	animation5@x,w,c
  6550  00518C  ECAF  F023         	call	_clr_led
  6551                           
  6552                           ;newmain.c: 1049: temp[x] = 0;
  6553  005190  505F               	movf	animation5@x,w,c
  6554  005192  0D01               	mullw	1
  6555  005194  0E01               	movlw	low _temp
  6556  005196  24F3               	addwf	prodl,w,c
  6557  005198  6ED9               	movwf	fsr2l,c
  6558  00519A  0E00               	movlw	high _temp
  6559  00519C  20F4               	addwfc	prodh,w,c
  6560  00519E  6EDA               	movwf	fsr2h,c
  6561  0051A0  0E00               	movlw	0
  6562  0051A2                     L10:
  6563  0051A2  6EDF               	movwf	indf2,c
  6564  0051A4  2A5D               	incf	animation5@j,f,c
  6565  0051A6  D7BD               	goto	l4402
  6566  0051A8                     u5620:
  6567                           
  6568                           ;newmain.c: 1050: }
  6569                           ;newmain.c: 1051: }
  6570                           ;newmain.c: 1052: write_display();
  6571  0051A8  EC0A  F024         	call	_write_display	;wreg free
  6572                           
  6573                           ;newmain.c: 1053: break;
  6574  0051AC  0012               	return	
  6575  0051AE                     l483:
  6576  0051AE  2A5E               	incf	animation5@i,f,c
  6577  0051B0  D7A5               	goto	l4394
  6578  0051B2                     l480:
  6579  0051B2  0E03               	movlw	3
  6580  0051B4  185C               	xorwf	animation5@m,w,c
  6581  0051B6  A4D8               	btfss	status,2,c
  6582  0051B8  0012               	return	
  6583                           
  6584                           ;newmain.c: 1057: for (i = 0; i < 16; i++) {
  6585  0051BA  0E00               	movlw	0
  6586  0051BC  6E5E               	movwf	animation5@i,c
  6587  0051BE                     l4432:
  6588  0051BE  0E0F               	movlw	15
  6589  0051C0  645E               	cpfsgt	animation5@i,c
  6590  0051C2  D001               	goto	l490
  6591  0051C4  0012               	return	
  6592  0051C6                     l490:
  6593                           
  6594                           ;newmain.c: 1058: if (show5[i][0] == n) {
  6595  0051C6  505E               	movf	animation5@i,w,c
  6596  0051C8  0D04               	mullw	4
  6597  0051CA  0E39               	movlw	low _show5
  6598  0051CC  24F3               	addwf	prodl,w,c
  6599  0051CE  6EF6               	movwf	tblptrl,c
  6600  0051D0  0E7B               	movlw	high _show5
  6601  0051D2  20F4               	addwfc	prodh,w,c
  6602  0051D4  6EF7               	movwf	tblptrh,c
  6603  0051D6                     	if	0	;There are less than 3 active tblptr bytes
  6604  0051D6                     	endif
  6605  0051D6  0008               	tblrd		*
  6606  0051D8  50F5               	movf	tablat,w,c
  6607  0051DA  1858               	xorwf	animation5@n,w,c
  6608  0051DC  A4D8               	btfss	status,2,c
  6609  0051DE  D048               	goto	l492
  6610                           
  6611                           ;newmain.c: 1059: for (j = 0; j < 4; j++) {
  6612  0051E0  0E00               	movlw	0
  6613  0051E2  6E5D               	movwf	animation5@j,c
  6614  0051E4                     l4440:
  6615  0051E4  0E03               	movlw	3
  6616  0051E6  645D               	cpfsgt	animation5@j,c
  6617  0051E8  D001               	goto	l493
  6618  0051EA  D03F               	goto	u5690
  6619  0051EC                     l493:
  6620                           
  6621                           ;newmain.c: 1060: x = show5[i][j] + 48;
  6622  0051EC  505E               	movf	animation5@i,w,c
  6623  0051EE  0D04               	mullw	4
  6624  0051F0  0E39               	movlw	low _show5
  6625  0051F2  6E5A               	movwf	??_animation5& (0+255),c
  6626  0051F4  0E7B               	movlw	high _show5
  6627  0051F6  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6628  0051F8  50F3               	movf	prodl,w,c
  6629  0051FA  265A               	addwf	??_animation5,f,c
  6630  0051FC  50F4               	movf	prodh,w,c
  6631  0051FE  225B               	addwfc	??_animation5+1,f,c
  6632  005200  505D               	movf	animation5@j,w,c
  6633  005202  0D01               	mullw	1
  6634  005204  50F3               	movf	prodl,w,c
  6635  005206  265A               	addwf	??_animation5,f,c
  6636  005208  50F4               	movf	prodh,w,c
  6637  00520A  225B               	addwfc	??_animation5+1,f,c
  6638  00520C  C05A  FFF6         	movff	??_animation5,tblptrl
  6639  005210  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6640  005214                     	if	0	;tblptru may be non-zero
  6641  005214                     	endif
  6642  005214                     	if	0	;tblptru may be non-zero
  6643  005214                     	endif
  6644  005214  0008               	tblrd		*
  6645  005216  50F5               	movf	tablat,w,c
  6646  005218  0F30               	addlw	48
  6647  00521A  6E5F               	movwf	animation5@x,c
  6648                           
  6649                           ;newmain.c: 1061: if (temp[x] == 0) {
  6650  00521C  505F               	movf	animation5@x,w,c
  6651  00521E  0D01               	mullw	1
  6652  005220  0E01               	movlw	low _temp
  6653  005222  24F3               	addwf	prodl,w,c
  6654  005224  6ED9               	movwf	fsr2l,c
  6655  005226  0E00               	movlw	high _temp
  6656  005228  20F4               	addwfc	prodh,w,c
  6657  00522A  6EDA               	movwf	fsr2h,c
  6658  00522C  50DF               	movf	indf2,w,c
  6659  00522E  A4D8               	btfss	status,2,c
  6660  005230  D00D               	goto	l495
  6661                           
  6662                           ;newmain.c: 1062: set_led(x);
  6663  005232  505F               	movf	animation5@x,w,c
  6664  005234  EC58  F023         	call	_set_led
  6665                           
  6666                           ;newmain.c: 1063: temp[x] = 1;
  6667  005238  505F               	movf	animation5@x,w,c
  6668  00523A  0D01               	mullw	1
  6669  00523C  0E01               	movlw	low _temp
  6670  00523E  24F3               	addwf	prodl,w,c
  6671  005240  6ED9               	movwf	fsr2l,c
  6672  005242  0E00               	movlw	high _temp
  6673  005244  20F4               	addwfc	prodh,w,c
  6674  005246  6EDA               	movwf	fsr2h,c
  6675  005248  0E01               	movlw	1
  6676  00524A  D00C               	goto	L11
  6677  00524C                     l495:
  6678                           
  6679                           ;newmain.c: 1065: clr_led(x);
  6680  00524C  505F               	movf	animation5@x,w,c
  6681  00524E  ECAF  F023         	call	_clr_led
  6682                           
  6683                           ;newmain.c: 1066: temp[x] = 0;
  6684  005252  505F               	movf	animation5@x,w,c
  6685  005254  0D01               	mullw	1
  6686  005256  0E01               	movlw	low _temp
  6687  005258  24F3               	addwf	prodl,w,c
  6688  00525A  6ED9               	movwf	fsr2l,c
  6689  00525C  0E00               	movlw	high _temp
  6690  00525E  20F4               	addwfc	prodh,w,c
  6691  005260  6EDA               	movwf	fsr2h,c
  6692  005262  0E00               	movlw	0
  6693  005264                     L11:
  6694  005264  6EDF               	movwf	indf2,c
  6695  005266  2A5D               	incf	animation5@j,f,c
  6696  005268  D7BD               	goto	l4440
  6697  00526A                     u5690:
  6698                           
  6699                           ;newmain.c: 1067: }
  6700                           ;newmain.c: 1068: }
  6701                           ;newmain.c: 1069: write_display();
  6702  00526A  EC0A  F024         	call	_write_display	;wreg free
  6703                           
  6704                           ;newmain.c: 1070: break;
  6705  00526E  0012               	return	
  6706  005270                     l492:
  6707  005270  2A5E               	incf	animation5@i,f,c
  6708  005272  D7A5               	goto	l4432
  6709  005274                     __end_of_animation5:
  6710                           	opt stack 0
  6711                           tblptru	equ	0xFF8
  6712                           tblptrh	equ	0xFF7
  6713                           tblptrl	equ	0xFF6
  6714                           tablat	equ	0xFF5
  6715                           prodh	equ	0xFF4
  6716                           prodl	equ	0xFF3
  6717                           postinc0	equ	0xFEE
  6718                           wreg	equ	0xFE8
  6719                           postinc1	equ	0xFE6
  6720                           fsr1h	equ	0xFE2
  6721                           fsr1l	equ	0xFE1
  6722                           indf2	equ	0xFDF
  6723                           postinc2	equ	0xFDE
  6724                           postdec2	equ	0xFDD
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _animation4 *****************
  6730 ;; Defined at:
  6731 ;;		line 914 in file "newmain.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  m               1    wreg     unsigned char 
  6734 ;;  h               1   21[COMRAM] unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  m               1   24[COMRAM] unsigned char 
  6737 ;;  j               1   26[COMRAM] unsigned char 
  6738 ;;  i               1   25[COMRAM] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6748 ;;      Params:         1       0       0       0       0       0       0
  6749 ;;      Locals:         3       0       0       0       0       0       0
  6750 ;;      Temps:          2       0       0       0       0       0       0
  6751 ;;      Totals:         6       0       0       0       0       0       0
  6752 ;;Total ram usage:        6 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    4
  6755 ;; This function calls:
  6756 ;;		_clr_led
  6757 ;;		_set_led
  6758 ;;		_write_display
  6759 ;; This function is called by:
  6760 ;;		_main
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text12
  6765  00564E                     __ptext12:
  6766                           	opt stack 0
  6767  00564E                     _animation4:
  6768                           	opt stack 26
  6769                           
  6770                           ;incstack = 0
  6771                           ;animation4@m stored from wreg
  6772  00564E  6E5B               	movwf	animation4@m,c
  6773                           
  6774                           ;newmain.c: 915: uint8_t i = 0, j = 0;
  6775  005650  0E00               	movlw	0
  6776  005652  6E5C               	movwf	animation4@i,c
  6777  005654  0E00               	movlw	0
  6778  005656  6E5D               	movwf	animation4@j,c
  6779                           
  6780                           ;newmain.c: 916: set_led(h);
  6781  005658  5058               	movf	animation4@h,w,c
  6782  00565A  EC58  F023         	call	_set_led
  6783                           
  6784                           ;newmain.c: 917: write_display();
  6785  00565E  EC0A  F024         	call	_write_display	;wreg free
  6786                           
  6787                           ;newmain.c: 918: if (m == 0) {
  6788  005662  505B               	movf	animation4@m,w,c
  6789  005664  A4D8               	btfss	status,2,c
  6790  005666  D086               	goto	l410
  6791                           
  6792                           ;newmain.c: 919: for (i = 0; i < 8; i++) {
  6793  005668  0E00               	movlw	0
  6794  00566A  6E5C               	movwf	animation4@i,c
  6795  00566C                     l4128:
  6796  00566C  0E07               	movlw	7
  6797  00566E  645C               	cpfsgt	animation4@i,c
  6798  005670  D001               	goto	l411
  6799  005672  D21D               	goto	u5420
  6800  005674                     l411:
  6801                           
  6802                           ;newmain.c: 920: for (j = 0; j < 8; j++){
  6803  005674  0E00               	movlw	0
  6804  005676  6E5D               	movwf	animation4@j,c
  6805  005678                     l4134:
  6806  005678  0E07               	movlw	7
  6807  00567A  645D               	cpfsgt	animation4@j,c
  6808  00567C  D001               	goto	l413
  6809  00567E  D033               	goto	u5110
  6810  005680                     l413:
  6811                           
  6812                           ;newmain.c: 921: if (show4_1[i][j] != 100)
  6813  005680  505C               	movf	animation4@i,w,c
  6814  005682  0D08               	mullw	8
  6815  005684  0EB9               	movlw	low _show4_1
  6816  005686  6E59               	movwf	??_animation4& (0+255),c
  6817  005688  0E7B               	movlw	high _show4_1
  6818  00568A  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6819  00568C  50F3               	movf	prodl,w,c
  6820  00568E  2659               	addwf	??_animation4,f,c
  6821  005690  50F4               	movf	prodh,w,c
  6822  005692  225A               	addwfc	??_animation4+1,f,c
  6823  005694  505D               	movf	animation4@j,w,c
  6824  005696  0D01               	mullw	1
  6825  005698  50F3               	movf	prodl,w,c
  6826  00569A  2659               	addwf	??_animation4,f,c
  6827  00569C  50F4               	movf	prodh,w,c
  6828  00569E  225A               	addwfc	??_animation4+1,f,c
  6829  0056A0  C059  FFF6         	movff	??_animation4,tblptrl
  6830  0056A4  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6831  0056A8                     	if	0	;tblptru may be non-zero
  6832  0056A8                     	endif
  6833  0056A8                     	if	0	;tblptru may be non-zero
  6834  0056A8                     	endif
  6835  0056A8  0008               	tblrd		*
  6836  0056AA  50F5               	movf	tablat,w,c
  6837  0056AC  0A64               	xorlw	100
  6838  0056AE  B4D8               	btfsc	status,2,c
  6839  0056B0  D01A               	goto	u5110
  6840                           
  6841                           ;newmain.c: 922: set_led(show4_1[i][j]);
  6842  0056B2  505C               	movf	animation4@i,w,c
  6843  0056B4  0D08               	mullw	8
  6844  0056B6  0EB9               	movlw	low _show4_1
  6845  0056B8  6E59               	movwf	??_animation4& (0+255),c
  6846  0056BA  0E7B               	movlw	high _show4_1
  6847  0056BC  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6848  0056BE  50F3               	movf	prodl,w,c
  6849  0056C0  2659               	addwf	??_animation4,f,c
  6850  0056C2  50F4               	movf	prodh,w,c
  6851  0056C4  225A               	addwfc	??_animation4+1,f,c
  6852  0056C6  505D               	movf	animation4@j,w,c
  6853  0056C8  0D01               	mullw	1
  6854  0056CA  50F3               	movf	prodl,w,c
  6855  0056CC  2659               	addwf	??_animation4,f,c
  6856  0056CE  50F4               	movf	prodh,w,c
  6857  0056D0  225A               	addwfc	??_animation4+1,f,c
  6858  0056D2  C059  FFF6         	movff	??_animation4,tblptrl
  6859  0056D6  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6860  0056DA                     	if	0	;tblptru may be non-zero
  6861  0056DA                     	endif
  6862  0056DA                     	if	0	;tblptru may be non-zero
  6863  0056DA                     	endif
  6864  0056DA  0008               	tblrd		*
  6865  0056DC  50F5               	movf	tablat,w,c
  6866  0056DE  EC58  F023         	call	_set_led
  6867                           
  6868                           ;newmain.c: 923: else
  6869                           ;newmain.c: 924: break;
  6870  0056E2  2A5D               	incf	animation4@j,f,c
  6871  0056E4  D7C9               	goto	l4134
  6872  0056E6                     u5110:
  6873                           
  6874                           ;newmain.c: 925: }
  6875                           ;newmain.c: 926: write_display();
  6876  0056E6  EC0A  F024         	call	_write_display	;wreg free
  6877                           
  6878                           ;newmain.c: 927: _delay((unsigned long)((5)*(4000000/4000.0)));
  6879  0056EA  0E07               	movlw	7
  6880  0056EC  6E59               	movwf	??_animation4& (0+255),c
  6881  0056EE  0E7D               	movlw	125
  6882  0056F0                     u7007:
  6883  0056F0  2EE8               	decfsz	wreg,f,c
  6884  0056F2  D7FE               	bra	u7007
  6885  0056F4  2E59               	decfsz	??_animation4& (0+255),f,c
  6886  0056F6  D7FC               	bra	u7007
  6887  0056F8  F000               	nop	
  6888                           
  6889                           ;newmain.c: 929: for (j = 0; j < 8; j++){
  6890  0056FA  0E00               	movlw	0
  6891  0056FC  6E5D               	movwf	animation4@j,c
  6892  0056FE                     l4152:
  6893  0056FE  0E07               	movlw	7
  6894  005700  645D               	cpfsgt	animation4@j,c
  6895  005702  D001               	goto	l417
  6896  005704  D033               	goto	u5140
  6897  005706                     l417:
  6898                           
  6899                           ;newmain.c: 930: if (show4_1[i][j] != 100)
  6900  005706  505C               	movf	animation4@i,w,c
  6901  005708  0D08               	mullw	8
  6902  00570A  0EB9               	movlw	low _show4_1
  6903  00570C  6E59               	movwf	??_animation4& (0+255),c
  6904  00570E  0E7B               	movlw	high _show4_1
  6905  005710  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6906  005712  50F3               	movf	prodl,w,c
  6907  005714  2659               	addwf	??_animation4,f,c
  6908  005716  50F4               	movf	prodh,w,c
  6909  005718  225A               	addwfc	??_animation4+1,f,c
  6910  00571A  505D               	movf	animation4@j,w,c
  6911  00571C  0D01               	mullw	1
  6912  00571E  50F3               	movf	prodl,w,c
  6913  005720  2659               	addwf	??_animation4,f,c
  6914  005722  50F4               	movf	prodh,w,c
  6915  005724  225A               	addwfc	??_animation4+1,f,c
  6916  005726  C059  FFF6         	movff	??_animation4,tblptrl
  6917  00572A  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6918  00572E                     	if	0	;tblptru may be non-zero
  6919  00572E                     	endif
  6920  00572E                     	if	0	;tblptru may be non-zero
  6921  00572E                     	endif
  6922  00572E  0008               	tblrd		*
  6923  005730  50F5               	movf	tablat,w,c
  6924  005732  0A64               	xorlw	100
  6925  005734  B4D8               	btfsc	status,2,c
  6926  005736  D01A               	goto	u5140
  6927                           
  6928                           ;newmain.c: 931: clr_led(show4_1[i][j]);
  6929  005738  505C               	movf	animation4@i,w,c
  6930  00573A  0D08               	mullw	8
  6931  00573C  0EB9               	movlw	low _show4_1
  6932  00573E  6E59               	movwf	??_animation4& (0+255),c
  6933  005740  0E7B               	movlw	high _show4_1
  6934  005742  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6935  005744  50F3               	movf	prodl,w,c
  6936  005746  2659               	addwf	??_animation4,f,c
  6937  005748  50F4               	movf	prodh,w,c
  6938  00574A  225A               	addwfc	??_animation4+1,f,c
  6939  00574C  505D               	movf	animation4@j,w,c
  6940  00574E  0D01               	mullw	1
  6941  005750  50F3               	movf	prodl,w,c
  6942  005752  2659               	addwf	??_animation4,f,c
  6943  005754  50F4               	movf	prodh,w,c
  6944  005756  225A               	addwfc	??_animation4+1,f,c
  6945  005758  C059  FFF6         	movff	??_animation4,tblptrl
  6946  00575C  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6947  005760                     	if	0	;tblptru may be non-zero
  6948  005760                     	endif
  6949  005760                     	if	0	;tblptru may be non-zero
  6950  005760                     	endif
  6951  005760  0008               	tblrd		*
  6952  005762  50F5               	movf	tablat,w,c
  6953  005764  ECAF  F023         	call	_clr_led
  6954                           
  6955                           ;newmain.c: 932: else
  6956                           ;newmain.c: 933: break;
  6957  005768  2A5D               	incf	animation4@j,f,c
  6958  00576A  D7C9               	goto	l4152
  6959  00576C                     u5140:
  6960                           
  6961                           ;newmain.c: 934: }
  6962                           ;newmain.c: 935: write_display();
  6963  00576C  EC0A  F024         	call	_write_display	;wreg free
  6964  005770  2A5C               	incf	animation4@i,f,c
  6965  005772  D77C               	goto	l4128
  6966  005774                     l410:
  6967  005774  045B               	decf	animation4@m,w,c
  6968  005776  A4D8               	btfss	status,2,c
  6969  005778  D086               	goto	l422
  6970                           
  6971                           ;newmain.c: 938: for (i = 0; i < 6; i++) {
  6972  00577A  0E00               	movlw	0
  6973  00577C  6E5C               	movwf	animation4@i,c
  6974  00577E                     l4174:
  6975  00577E  0E05               	movlw	5
  6976  005780  645C               	cpfsgt	animation4@i,c
  6977  005782  D001               	goto	l423
  6978  005784  D194               	goto	u5420
  6979  005786                     l423:
  6980                           
  6981                           ;newmain.c: 939: for (j = 0; j < 8; j++){
  6982  005786  0E00               	movlw	0
  6983  005788  6E5D               	movwf	animation4@j,c
  6984  00578A                     l4180:
  6985  00578A  0E07               	movlw	7
  6986  00578C  645D               	cpfsgt	animation4@j,c
  6987  00578E  D001               	goto	l425
  6988  005790  D033               	goto	u5200
  6989  005792                     l425:
  6990                           
  6991                           ;newmain.c: 940: if (show4_2[i][j] != 100)
  6992  005792  505C               	movf	animation4@i,w,c
  6993  005794  0D08               	mullw	8
  6994  005796  0E09               	movlw	low _show4_2
  6995  005798  6E59               	movwf	??_animation4& (0+255),c
  6996  00579A  0E7A               	movlw	high _show4_2
  6997  00579C  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6998  00579E  50F3               	movf	prodl,w,c
  6999  0057A0  2659               	addwf	??_animation4,f,c
  7000  0057A2  50F4               	movf	prodh,w,c
  7001  0057A4  225A               	addwfc	??_animation4+1,f,c
  7002  0057A6  505D               	movf	animation4@j,w,c
  7003  0057A8  0D01               	mullw	1
  7004  0057AA  50F3               	movf	prodl,w,c
  7005  0057AC  2659               	addwf	??_animation4,f,c
  7006  0057AE  50F4               	movf	prodh,w,c
  7007  0057B0  225A               	addwfc	??_animation4+1,f,c
  7008  0057B2  C059  FFF6         	movff	??_animation4,tblptrl
  7009  0057B6  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7010  0057BA                     	if	0	;tblptru may be non-zero
  7011  0057BA                     	endif
  7012  0057BA                     	if	0	;tblptru may be non-zero
  7013  0057BA                     	endif
  7014  0057BA  0008               	tblrd		*
  7015  0057BC  50F5               	movf	tablat,w,c
  7016  0057BE  0A64               	xorlw	100
  7017  0057C0  B4D8               	btfsc	status,2,c
  7018  0057C2  D01A               	goto	u5200
  7019                           
  7020                           ;newmain.c: 941: set_led(show4_2[i][j]);
  7021  0057C4  505C               	movf	animation4@i,w,c
  7022  0057C6  0D08               	mullw	8
  7023  0057C8  0E09               	movlw	low _show4_2
  7024  0057CA  6E59               	movwf	??_animation4& (0+255),c
  7025  0057CC  0E7A               	movlw	high _show4_2
  7026  0057CE  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7027  0057D0  50F3               	movf	prodl,w,c
  7028  0057D2  2659               	addwf	??_animation4,f,c
  7029  0057D4  50F4               	movf	prodh,w,c
  7030  0057D6  225A               	addwfc	??_animation4+1,f,c
  7031  0057D8  505D               	movf	animation4@j,w,c
  7032  0057DA  0D01               	mullw	1
  7033  0057DC  50F3               	movf	prodl,w,c
  7034  0057DE  2659               	addwf	??_animation4,f,c
  7035  0057E0  50F4               	movf	prodh,w,c
  7036  0057E2  225A               	addwfc	??_animation4+1,f,c
  7037  0057E4  C059  FFF6         	movff	??_animation4,tblptrl
  7038  0057E8  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7039  0057EC                     	if	0	;tblptru may be non-zero
  7040  0057EC                     	endif
  7041  0057EC                     	if	0	;tblptru may be non-zero
  7042  0057EC                     	endif
  7043  0057EC  0008               	tblrd		*
  7044  0057EE  50F5               	movf	tablat,w,c
  7045  0057F0  EC58  F023         	call	_set_led
  7046                           
  7047                           ;newmain.c: 942: else
  7048                           ;newmain.c: 943: break;
  7049  0057F4  2A5D               	incf	animation4@j,f,c
  7050  0057F6  D7C9               	goto	l4180
  7051  0057F8                     u5200:
  7052                           
  7053                           ;newmain.c: 944: }
  7054                           ;newmain.c: 945: write_display();
  7055  0057F8  EC0A  F024         	call	_write_display	;wreg free
  7056                           
  7057                           ;newmain.c: 946: _delay((unsigned long)((5)*(4000000/4000.0)));
  7058  0057FC  0E07               	movlw	7
  7059  0057FE  6E59               	movwf	??_animation4& (0+255),c
  7060  005800  0E7D               	movlw	125
  7061  005802                     u7017:
  7062  005802  2EE8               	decfsz	wreg,f,c
  7063  005804  D7FE               	bra	u7017
  7064  005806  2E59               	decfsz	??_animation4& (0+255),f,c
  7065  005808  D7FC               	bra	u7017
  7066  00580A  F000               	nop	
  7067                           
  7068                           ;newmain.c: 948: for (j = 0; j < 8; j++){
  7069  00580C  0E00               	movlw	0
  7070  00580E  6E5D               	movwf	animation4@j,c
  7071  005810                     l4198:
  7072  005810  0E07               	movlw	7
  7073  005812  645D               	cpfsgt	animation4@j,c
  7074  005814  D001               	goto	l429
  7075  005816  D033               	goto	u5230
  7076  005818                     l429:
  7077                           
  7078                           ;newmain.c: 949: if (show4_2[i][j] != 100)
  7079  005818  505C               	movf	animation4@i,w,c
  7080  00581A  0D08               	mullw	8
  7081  00581C  0E09               	movlw	low _show4_2
  7082  00581E  6E59               	movwf	??_animation4& (0+255),c
  7083  005820  0E7A               	movlw	high _show4_2
  7084  005822  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7085  005824  50F3               	movf	prodl,w,c
  7086  005826  2659               	addwf	??_animation4,f,c
  7087  005828  50F4               	movf	prodh,w,c
  7088  00582A  225A               	addwfc	??_animation4+1,f,c
  7089  00582C  505D               	movf	animation4@j,w,c
  7090  00582E  0D01               	mullw	1
  7091  005830  50F3               	movf	prodl,w,c
  7092  005832  2659               	addwf	??_animation4,f,c
  7093  005834  50F4               	movf	prodh,w,c
  7094  005836  225A               	addwfc	??_animation4+1,f,c
  7095  005838  C059  FFF6         	movff	??_animation4,tblptrl
  7096  00583C  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7097  005840                     	if	0	;tblptru may be non-zero
  7098  005840                     	endif
  7099  005840                     	if	0	;tblptru may be non-zero
  7100  005840                     	endif
  7101  005840  0008               	tblrd		*
  7102  005842  50F5               	movf	tablat,w,c
  7103  005844  0A64               	xorlw	100
  7104  005846  B4D8               	btfsc	status,2,c
  7105  005848  D01A               	goto	u5230
  7106                           
  7107                           ;newmain.c: 950: clr_led(show4_2[i][j]);
  7108  00584A  505C               	movf	animation4@i,w,c
  7109  00584C  0D08               	mullw	8
  7110  00584E  0E09               	movlw	low _show4_2
  7111  005850  6E59               	movwf	??_animation4& (0+255),c
  7112  005852  0E7A               	movlw	high _show4_2
  7113  005854  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7114  005856  50F3               	movf	prodl,w,c
  7115  005858  2659               	addwf	??_animation4,f,c
  7116  00585A  50F4               	movf	prodh,w,c
  7117  00585C  225A               	addwfc	??_animation4+1,f,c
  7118  00585E  505D               	movf	animation4@j,w,c
  7119  005860  0D01               	mullw	1
  7120  005862  50F3               	movf	prodl,w,c
  7121  005864  2659               	addwf	??_animation4,f,c
  7122  005866  50F4               	movf	prodh,w,c
  7123  005868  225A               	addwfc	??_animation4+1,f,c
  7124  00586A  C059  FFF6         	movff	??_animation4,tblptrl
  7125  00586E  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7126  005872                     	if	0	;tblptru may be non-zero
  7127  005872                     	endif
  7128  005872                     	if	0	;tblptru may be non-zero
  7129  005872                     	endif
  7130  005872  0008               	tblrd		*
  7131  005874  50F5               	movf	tablat,w,c
  7132  005876  ECAF  F023         	call	_clr_led
  7133                           
  7134                           ;newmain.c: 951: else
  7135                           ;newmain.c: 952: break;
  7136  00587A  2A5D               	incf	animation4@j,f,c
  7137  00587C  D7C9               	goto	l4198
  7138  00587E                     u5230:
  7139                           
  7140                           ;newmain.c: 953: }
  7141                           ;newmain.c: 954: write_display();
  7142  00587E  EC0A  F024         	call	_write_display	;wreg free
  7143  005882  2A5C               	incf	animation4@i,f,c
  7144  005884  D77C               	goto	l4174
  7145  005886                     l422:
  7146  005886  0E02               	movlw	2
  7147  005888  185B               	xorwf	animation4@m,w,c
  7148  00588A  A4D8               	btfss	status,2,c
  7149  00588C  D086               	goto	l434
  7150                           
  7151                           ;newmain.c: 957: for (i = 0; i < 6; i++) {
  7152  00588E  0E00               	movlw	0
  7153  005890  6E5C               	movwf	animation4@i,c
  7154  005892                     l4220:
  7155  005892  0E05               	movlw	5
  7156  005894  645C               	cpfsgt	animation4@i,c
  7157  005896  D001               	goto	l435
  7158  005898  D10A               	goto	u5420
  7159  00589A                     l435:
  7160                           
  7161                           ;newmain.c: 958: for (j = 0; j < 8; j++){
  7162  00589A  0E00               	movlw	0
  7163  00589C  6E5D               	movwf	animation4@j,c
  7164  00589E                     l4226:
  7165  00589E  0E07               	movlw	7
  7166  0058A0  645D               	cpfsgt	animation4@j,c
  7167  0058A2  D001               	goto	l437
  7168  0058A4  D033               	goto	u5290
  7169  0058A6                     l437:
  7170                           
  7171                           ;newmain.c: 959: if (show4_2[i][j] != 100)
  7172  0058A6  505C               	movf	animation4@i,w,c
  7173  0058A8  0D08               	mullw	8
  7174  0058AA  0E09               	movlw	low _show4_2
  7175  0058AC  6E59               	movwf	??_animation4& (0+255),c
  7176  0058AE  0E7A               	movlw	high _show4_2
  7177  0058B0  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7178  0058B2  50F3               	movf	prodl,w,c
  7179  0058B4  2659               	addwf	??_animation4,f,c
  7180  0058B6  50F4               	movf	prodh,w,c
  7181  0058B8  225A               	addwfc	??_animation4+1,f,c
  7182  0058BA  505D               	movf	animation4@j,w,c
  7183  0058BC  0D01               	mullw	1
  7184  0058BE  50F3               	movf	prodl,w,c
  7185  0058C0  2659               	addwf	??_animation4,f,c
  7186  0058C2  50F4               	movf	prodh,w,c
  7187  0058C4  225A               	addwfc	??_animation4+1,f,c
  7188  0058C6  C059  FFF6         	movff	??_animation4,tblptrl
  7189  0058CA  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7190  0058CE                     	if	0	;tblptru may be non-zero
  7191  0058CE                     	endif
  7192  0058CE                     	if	0	;tblptru may be non-zero
  7193  0058CE                     	endif
  7194  0058CE  0008               	tblrd		*
  7195  0058D0  50F5               	movf	tablat,w,c
  7196  0058D2  0A64               	xorlw	100
  7197  0058D4  B4D8               	btfsc	status,2,c
  7198  0058D6  D01A               	goto	u5290
  7199                           
  7200                           ;newmain.c: 960: set_led(show4_3[i][j]);
  7201  0058D8  505C               	movf	animation4@i,w,c
  7202  0058DA  0D08               	mullw	8
  7203  0058DC  0EA9               	movlw	low _show4_3
  7204  0058DE  6E59               	movwf	??_animation4& (0+255),c
  7205  0058E0  0E79               	movlw	high _show4_3
  7206  0058E2  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7207  0058E4  50F3               	movf	prodl,w,c
  7208  0058E6  2659               	addwf	??_animation4,f,c
  7209  0058E8  50F4               	movf	prodh,w,c
  7210  0058EA  225A               	addwfc	??_animation4+1,f,c
  7211  0058EC  505D               	movf	animation4@j,w,c
  7212  0058EE  0D01               	mullw	1
  7213  0058F0  50F3               	movf	prodl,w,c
  7214  0058F2  2659               	addwf	??_animation4,f,c
  7215  0058F4  50F4               	movf	prodh,w,c
  7216  0058F6  225A               	addwfc	??_animation4+1,f,c
  7217  0058F8  C059  FFF6         	movff	??_animation4,tblptrl
  7218  0058FC  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7219  005900                     	if	0	;tblptru may be non-zero
  7220  005900                     	endif
  7221  005900                     	if	0	;tblptru may be non-zero
  7222  005900                     	endif
  7223  005900  0008               	tblrd		*
  7224  005902  50F5               	movf	tablat,w,c
  7225  005904  EC58  F023         	call	_set_led
  7226                           
  7227                           ;newmain.c: 961: else
  7228                           ;newmain.c: 962: break;
  7229  005908  2A5D               	incf	animation4@j,f,c
  7230  00590A  D7C9               	goto	l4226
  7231  00590C                     u5290:
  7232                           
  7233                           ;newmain.c: 963: }
  7234                           ;newmain.c: 964: write_display();
  7235  00590C  EC0A  F024         	call	_write_display	;wreg free
  7236                           
  7237                           ;newmain.c: 965: _delay((unsigned long)((5)*(4000000/4000.0)));
  7238  005910  0E07               	movlw	7
  7239  005912  6E59               	movwf	??_animation4& (0+255),c
  7240  005914  0E7D               	movlw	125
  7241  005916                     u7027:
  7242  005916  2EE8               	decfsz	wreg,f,c
  7243  005918  D7FE               	bra	u7027
  7244  00591A  2E59               	decfsz	??_animation4& (0+255),f,c
  7245  00591C  D7FC               	bra	u7027
  7246  00591E  F000               	nop	
  7247                           
  7248                           ;newmain.c: 967: for (j = 0; j < 8; j++){
  7249  005920  0E00               	movlw	0
  7250  005922  6E5D               	movwf	animation4@j,c
  7251  005924                     l4244:
  7252  005924  0E07               	movlw	7
  7253  005926  645D               	cpfsgt	animation4@j,c
  7254  005928  D001               	goto	l441
  7255  00592A  D033               	goto	u5320
  7256  00592C                     l441:
  7257                           
  7258                           ;newmain.c: 968: if (show4_2[i][j] != 100)
  7259  00592C  505C               	movf	animation4@i,w,c
  7260  00592E  0D08               	mullw	8
  7261  005930  0E09               	movlw	low _show4_2
  7262  005932  6E59               	movwf	??_animation4& (0+255),c
  7263  005934  0E7A               	movlw	high _show4_2
  7264  005936  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7265  005938  50F3               	movf	prodl,w,c
  7266  00593A  2659               	addwf	??_animation4,f,c
  7267  00593C  50F4               	movf	prodh,w,c
  7268  00593E  225A               	addwfc	??_animation4+1,f,c
  7269  005940  505D               	movf	animation4@j,w,c
  7270  005942  0D01               	mullw	1
  7271  005944  50F3               	movf	prodl,w,c
  7272  005946  2659               	addwf	??_animation4,f,c
  7273  005948  50F4               	movf	prodh,w,c
  7274  00594A  225A               	addwfc	??_animation4+1,f,c
  7275  00594C  C059  FFF6         	movff	??_animation4,tblptrl
  7276  005950  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7277  005954                     	if	0	;tblptru may be non-zero
  7278  005954                     	endif
  7279  005954                     	if	0	;tblptru may be non-zero
  7280  005954                     	endif
  7281  005954  0008               	tblrd		*
  7282  005956  50F5               	movf	tablat,w,c
  7283  005958  0A64               	xorlw	100
  7284  00595A  B4D8               	btfsc	status,2,c
  7285  00595C  D01A               	goto	u5320
  7286                           
  7287                           ;newmain.c: 969: clr_led(show4_3[i][j]);
  7288  00595E  505C               	movf	animation4@i,w,c
  7289  005960  0D08               	mullw	8
  7290  005962  0EA9               	movlw	low _show4_3
  7291  005964  6E59               	movwf	??_animation4& (0+255),c
  7292  005966  0E79               	movlw	high _show4_3
  7293  005968  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7294  00596A  50F3               	movf	prodl,w,c
  7295  00596C  2659               	addwf	??_animation4,f,c
  7296  00596E  50F4               	movf	prodh,w,c
  7297  005970  225A               	addwfc	??_animation4+1,f,c
  7298  005972  505D               	movf	animation4@j,w,c
  7299  005974  0D01               	mullw	1
  7300  005976  50F3               	movf	prodl,w,c
  7301  005978  2659               	addwf	??_animation4,f,c
  7302  00597A  50F4               	movf	prodh,w,c
  7303  00597C  225A               	addwfc	??_animation4+1,f,c
  7304  00597E  C059  FFF6         	movff	??_animation4,tblptrl
  7305  005982  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7306  005986                     	if	0	;tblptru may be non-zero
  7307  005986                     	endif
  7308  005986                     	if	0	;tblptru may be non-zero
  7309  005986                     	endif
  7310  005986  0008               	tblrd		*
  7311  005988  50F5               	movf	tablat,w,c
  7312  00598A  ECAF  F023         	call	_clr_led
  7313                           
  7314                           ;newmain.c: 970: else
  7315                           ;newmain.c: 971: break;
  7316  00598E  2A5D               	incf	animation4@j,f,c
  7317  005990  D7C9               	goto	l4244
  7318  005992                     u5320:
  7319                           
  7320                           ;newmain.c: 972: }
  7321                           ;newmain.c: 973: write_display();
  7322  005992  EC0A  F024         	call	_write_display	;wreg free
  7323  005996  2A5C               	incf	animation4@i,f,c
  7324  005998  D77C               	goto	l4220
  7325  00599A                     l434:
  7326  00599A  0E03               	movlw	3
  7327  00599C  185B               	xorwf	animation4@m,w,c
  7328  00599E  A4D8               	btfss	status,2,c
  7329  0059A0  D086               	goto	u5420
  7330                           
  7331                           ;newmain.c: 977: for (i = 0; i < 8; i++) {
  7332  0059A2  0E00               	movlw	0
  7333  0059A4  6E5C               	movwf	animation4@i,c
  7334  0059A6                     l4266:
  7335  0059A6  0E07               	movlw	7
  7336  0059A8  645C               	cpfsgt	animation4@i,c
  7337  0059AA  D001               	goto	l447
  7338  0059AC  D080               	goto	u5420
  7339  0059AE                     l447:
  7340                           
  7341                           ;newmain.c: 978: for (j = 0; j < 8; j++){
  7342  0059AE  0E00               	movlw	0
  7343  0059B0  6E5D               	movwf	animation4@j,c
  7344  0059B2                     l4272:
  7345  0059B2  0E07               	movlw	7
  7346  0059B4  645D               	cpfsgt	animation4@j,c
  7347  0059B6  D001               	goto	l449
  7348  0059B8  D033               	goto	u5380
  7349  0059BA                     l449:
  7350                           
  7351                           ;newmain.c: 979: if (show4_3[i][j] != 100)
  7352  0059BA  505C               	movf	animation4@i,w,c
  7353  0059BC  0D08               	mullw	8
  7354  0059BE  0EA9               	movlw	low _show4_3
  7355  0059C0  6E59               	movwf	??_animation4& (0+255),c
  7356  0059C2  0E79               	movlw	high _show4_3
  7357  0059C4  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7358  0059C6  50F3               	movf	prodl,w,c
  7359  0059C8  2659               	addwf	??_animation4,f,c
  7360  0059CA  50F4               	movf	prodh,w,c
  7361  0059CC  225A               	addwfc	??_animation4+1,f,c
  7362  0059CE  505D               	movf	animation4@j,w,c
  7363  0059D0  0D01               	mullw	1
  7364  0059D2  50F3               	movf	prodl,w,c
  7365  0059D4  2659               	addwf	??_animation4,f,c
  7366  0059D6  50F4               	movf	prodh,w,c
  7367  0059D8  225A               	addwfc	??_animation4+1,f,c
  7368  0059DA  C059  FFF6         	movff	??_animation4,tblptrl
  7369  0059DE  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7370  0059E2                     	if	0	;tblptru may be non-zero
  7371  0059E2                     	endif
  7372  0059E2                     	if	0	;tblptru may be non-zero
  7373  0059E2                     	endif
  7374  0059E2  0008               	tblrd		*
  7375  0059E4  50F5               	movf	tablat,w,c
  7376  0059E6  0A64               	xorlw	100
  7377  0059E8  B4D8               	btfsc	status,2,c
  7378  0059EA  D01A               	goto	u5380
  7379                           
  7380                           ;newmain.c: 980: set_led(show4_4[i][j]);
  7381  0059EC  505C               	movf	animation4@i,w,c
  7382  0059EE  0D08               	mullw	8
  7383  0059F0  0E79               	movlw	low _show4_4
  7384  0059F2  6E59               	movwf	??_animation4& (0+255),c
  7385  0059F4  0E7B               	movlw	high _show4_4
  7386  0059F6  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7387  0059F8  50F3               	movf	prodl,w,c
  7388  0059FA  2659               	addwf	??_animation4,f,c
  7389  0059FC  50F4               	movf	prodh,w,c
  7390  0059FE  225A               	addwfc	??_animation4+1,f,c
  7391  005A00  505D               	movf	animation4@j,w,c
  7392  005A02  0D01               	mullw	1
  7393  005A04  50F3               	movf	prodl,w,c
  7394  005A06  2659               	addwf	??_animation4,f,c
  7395  005A08  50F4               	movf	prodh,w,c
  7396  005A0A  225A               	addwfc	??_animation4+1,f,c
  7397  005A0C  C059  FFF6         	movff	??_animation4,tblptrl
  7398  005A10  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7399  005A14                     	if	0	;tblptru may be non-zero
  7400  005A14                     	endif
  7401  005A14                     	if	0	;tblptru may be non-zero
  7402  005A14                     	endif
  7403  005A14  0008               	tblrd		*
  7404  005A16  50F5               	movf	tablat,w,c
  7405  005A18  EC58  F023         	call	_set_led
  7406                           
  7407                           ;newmain.c: 981: else
  7408                           ;newmain.c: 982: break;
  7409  005A1C  2A5D               	incf	animation4@j,f,c
  7410  005A1E  D7C9               	goto	l4272
  7411  005A20                     u5380:
  7412                           
  7413                           ;newmain.c: 983: }
  7414                           ;newmain.c: 984: write_display();
  7415  005A20  EC0A  F024         	call	_write_display	;wreg free
  7416                           
  7417                           ;newmain.c: 985: _delay((unsigned long)((5)*(4000000/4000.0)));
  7418  005A24  0E07               	movlw	7
  7419  005A26  6E59               	movwf	??_animation4& (0+255),c
  7420  005A28  0E7D               	movlw	125
  7421  005A2A                     u7037:
  7422  005A2A  2EE8               	decfsz	wreg,f,c
  7423  005A2C  D7FE               	bra	u7037
  7424  005A2E  2E59               	decfsz	??_animation4& (0+255),f,c
  7425  005A30  D7FC               	bra	u7037
  7426  005A32  F000               	nop	
  7427                           
  7428                           ;newmain.c: 987: for (j = 0; j < 8; j++){
  7429  005A34  0E00               	movlw	0
  7430  005A36  6E5D               	movwf	animation4@j,c
  7431  005A38                     l4290:
  7432  005A38  0E07               	movlw	7
  7433  005A3A  645D               	cpfsgt	animation4@j,c
  7434  005A3C  D001               	goto	l453
  7435  005A3E  D033               	goto	u5410
  7436  005A40                     l453:
  7437                           
  7438                           ;newmain.c: 988: if (show4_3[i][j] != 100)
  7439  005A40  505C               	movf	animation4@i,w,c
  7440  005A42  0D08               	mullw	8
  7441  005A44  0EA9               	movlw	low _show4_3
  7442  005A46  6E59               	movwf	??_animation4& (0+255),c
  7443  005A48  0E79               	movlw	high _show4_3
  7444  005A4A  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7445  005A4C  50F3               	movf	prodl,w,c
  7446  005A4E  2659               	addwf	??_animation4,f,c
  7447  005A50  50F4               	movf	prodh,w,c
  7448  005A52  225A               	addwfc	??_animation4+1,f,c
  7449  005A54  505D               	movf	animation4@j,w,c
  7450  005A56  0D01               	mullw	1
  7451  005A58  50F3               	movf	prodl,w,c
  7452  005A5A  2659               	addwf	??_animation4,f,c
  7453  005A5C  50F4               	movf	prodh,w,c
  7454  005A5E  225A               	addwfc	??_animation4+1,f,c
  7455  005A60  C059  FFF6         	movff	??_animation4,tblptrl
  7456  005A64  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7457  005A68                     	if	0	;tblptru may be non-zero
  7458  005A68                     	endif
  7459  005A68                     	if	0	;tblptru may be non-zero
  7460  005A68                     	endif
  7461  005A68  0008               	tblrd		*
  7462  005A6A  50F5               	movf	tablat,w,c
  7463  005A6C  0A64               	xorlw	100
  7464  005A6E  B4D8               	btfsc	status,2,c
  7465  005A70  D01A               	goto	u5410
  7466                           
  7467                           ;newmain.c: 989: clr_led(show4_4[i][j]);
  7468  005A72  505C               	movf	animation4@i,w,c
  7469  005A74  0D08               	mullw	8
  7470  005A76  0E79               	movlw	low _show4_4
  7471  005A78  6E59               	movwf	??_animation4& (0+255),c
  7472  005A7A  0E7B               	movlw	high _show4_4
  7473  005A7C  6E5A               	movwf	(??_animation4+1)& (0+255),c
  7474  005A7E  50F3               	movf	prodl,w,c
  7475  005A80  2659               	addwf	??_animation4,f,c
  7476  005A82  50F4               	movf	prodh,w,c
  7477  005A84  225A               	addwfc	??_animation4+1,f,c
  7478  005A86  505D               	movf	animation4@j,w,c
  7479  005A88  0D01               	mullw	1
  7480  005A8A  50F3               	movf	prodl,w,c
  7481  005A8C  2659               	addwf	??_animation4,f,c
  7482  005A8E  50F4               	movf	prodh,w,c
  7483  005A90  225A               	addwfc	??_animation4+1,f,c
  7484  005A92  C059  FFF6         	movff	??_animation4,tblptrl
  7485  005A96  C05A  FFF7         	movff	??_animation4+1,tblptrh
  7486  005A9A                     	if	0	;tblptru may be non-zero
  7487  005A9A                     	endif
  7488  005A9A                     	if	0	;tblptru may be non-zero
  7489  005A9A                     	endif
  7490  005A9A  0008               	tblrd		*
  7491  005A9C  50F5               	movf	tablat,w,c
  7492  005A9E  ECAF  F023         	call	_clr_led
  7493                           
  7494                           ;newmain.c: 990: else
  7495                           ;newmain.c: 991: break;
  7496  005AA2  2A5D               	incf	animation4@j,f,c
  7497  005AA4  D7C9               	goto	l4290
  7498  005AA6                     u5410:
  7499                           
  7500                           ;newmain.c: 992: }
  7501                           ;newmain.c: 993: write_display();
  7502  005AA6  EC0A  F024         	call	_write_display	;wreg free
  7503  005AAA  2A5C               	incf	animation4@i,f,c
  7504  005AAC  D77C               	goto	l4266
  7505  005AAE                     u5420:
  7506                           
  7507                           ;newmain.c: 994: }
  7508                           ;newmain.c: 995: }
  7509                           ;newmain.c: 996: clr_led(h);
  7510  005AAE  5058               	movf	animation4@h,w,c
  7511  005AB0  ECAF  F023         	call	_clr_led
  7512                           
  7513                           ;newmain.c: 997: write_display();
  7514  005AB4  EC0A  F024         	call	_write_display	;wreg free
  7515  005AB8  0012               	return		;funcret
  7516  005ABA                     __end_of_animation4:
  7517                           	opt stack 0
  7518                           tblptru	equ	0xFF8
  7519                           tblptrh	equ	0xFF7
  7520                           tblptrl	equ	0xFF6
  7521                           tablat	equ	0xFF5
  7522                           prodh	equ	0xFF4
  7523                           prodl	equ	0xFF3
  7524                           postinc0	equ	0xFEE
  7525                           wreg	equ	0xFE8
  7526                           postinc1	equ	0xFE6
  7527                           fsr1h	equ	0xFE2
  7528                           fsr1l	equ	0xFE1
  7529                           indf2	equ	0xFDF
  7530                           postinc2	equ	0xFDE
  7531                           postdec2	equ	0xFDD
  7532                           fsr2h	equ	0xFDA
  7533                           fsr2l	equ	0xFD9
  7534                           status	equ	0xFD8
  7535                           
  7536 ;; *************** function _animation3 *****************
  7537 ;; Defined at:
  7538 ;;		line 818 in file "newmain.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  m               1    wreg     unsigned char 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  m               1   25[COMRAM] unsigned char 
  7543 ;;  j               2   28[COMRAM] int 
  7544 ;;  i               2   26[COMRAM] int 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7554 ;;      Params:         0       0       0       0       0       0       0
  7555 ;;      Locals:         5       0       0       0       0       0       0
  7556 ;;      Temps:          4       0       0       0       0       0       0
  7557 ;;      Totals:         9       0       0       0       0       0       0
  7558 ;;Total ram usage:        9 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    4
  7561 ;; This function calls:
  7562 ;;		___wmul
  7563 ;;		_clr_led
  7564 ;;		_set_led
  7565 ;;		_write_display
  7566 ;; This function is called by:
  7567 ;;		_main
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text13
  7572  0066A8                     __ptext13:
  7573                           	opt stack 0
  7574  0066A8                     _animation3:
  7575                           	opt stack 26
  7576                           
  7577                           ;incstack = 0
  7578                           ;animation3@m stored from wreg
  7579  0066A8  6E5C               	movwf	animation3@m,c
  7580                           
  7581                           ;newmain.c: 819: int i = 0, j = 0;
  7582  0066AA  0E00               	movlw	0
  7583  0066AC  6E5E               	movwf	animation3@i+1,c
  7584  0066AE  0E00               	movlw	0
  7585  0066B0  6E5D               	movwf	animation3@i,c
  7586  0066B2  0E00               	movlw	0
  7587  0066B4  6E60               	movwf	animation3@j+1,c
  7588  0066B6  0E00               	movlw	0
  7589  0066B8  6E5F               	movwf	animation3@j,c
  7590                           
  7591                           ;newmain.c: 820: if (m == 0) {
  7592  0066BA  505C               	movf	animation3@m,w,c
  7593  0066BC  A4D8               	btfss	status,2,c
  7594  0066BE  D0C6               	goto	l350
  7595                           
  7596                           ;newmain.c: 821: for (i = 0; i < 10; i++) {
  7597  0066C0  0E00               	movlw	0
  7598  0066C2  6E5E               	movwf	animation3@i+1,c
  7599  0066C4  0E00               	movlw	0
  7600  0066C6  6E5D               	movwf	animation3@i,c
  7601  0066C8  BE5E               	btfsc	animation3@i+1,7,c
  7602  0066CA  D008               	goto	l351
  7603  0066CC  505E               	movf	animation3@i+1,w,c
  7604  0066CE  E105               	bnz	u4640
  7605  0066D0  0E0A               	movlw	10
  7606  0066D2  5C5D               	subwf	animation3@i,w,c
  7607  0066D4  B0D8               	btfsc	status,0,c
  7608  0066D6  0012               	return	
  7609  0066D8  D001               	goto	l351
  7610  0066DA                     u4640:
  7611  0066DA  0012               	return	
  7612  0066DC                     l351:
  7613                           
  7614                           ;newmain.c: 822: for (j = 0; j < 8; j++) {
  7615  0066DC  0E00               	movlw	0
  7616  0066DE  6E60               	movwf	animation3@j+1,c
  7617  0066E0  0E00               	movlw	0
  7618  0066E2  6E5F               	movwf	animation3@j,c
  7619  0066E4                     l3900:
  7620  0066E4  BE60               	btfsc	animation3@j+1,7,c
  7621  0066E6  D006               	goto	l353
  7622  0066E8  5060               	movf	animation3@j+1,w,c
  7623  0066EA  E14A               	bnz	l3912
  7624  0066EC  0E08               	movlw	8
  7625  0066EE  5C5F               	subwf	animation3@j,w,c
  7626  0066F0  B0D8               	btfsc	status,0,c
  7627  0066F2  D046               	goto	u4670
  7628  0066F4                     l353:
  7629                           
  7630                           ;newmain.c: 823: if (show3_1[i][j] != 100)
  7631  0066F4  C05D  F058         	movff	animation3@i,??_animation3
  7632  0066F8  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7633  0066FC  90D8               	bcf	status,0,c
  7634  0066FE  3658               	rlcf	??_animation3,f,c
  7635  006700  3659               	rlcf	??_animation3+1,f,c
  7636  006702  90D8               	bcf	status,0,c
  7637  006704  3658               	rlcf	??_animation3,f,c
  7638  006706  3659               	rlcf	??_animation3+1,f,c
  7639  006708  90D8               	bcf	status,0,c
  7640  00670A  3658               	rlcf	??_animation3,f,c
  7641  00670C  3659               	rlcf	??_animation3+1,f,c
  7642  00670E  0E69               	movlw	low _show3_1
  7643  006710  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7644  006712  0E7A               	movlw	high _show3_1
  7645  006714  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7646  006716  5058               	movf	??_animation3,w,c
  7647  006718  265A               	addwf	??_animation3+2,f,c
  7648  00671A  5059               	movf	??_animation3+1,w,c
  7649  00671C  225B               	addwfc	??_animation3+3,f,c
  7650  00671E  505F               	movf	animation3@j,w,c
  7651  006720  265A               	addwf	??_animation3+2,f,c
  7652  006722  5060               	movf	animation3@j+1,w,c
  7653  006724  225B               	addwfc	??_animation3+3,f,c
  7654  006726  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7655  00672A  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7656  00672E                     	if	0	;tblptru may be non-zero
  7657  00672E                     	endif
  7658  00672E                     	if	0	;tblptru may be non-zero
  7659  00672E                     	endif
  7660  00672E  0008               	tblrd		*
  7661  006730  50F5               	movf	tablat,w,c
  7662  006732  0A64               	xorlw	100
  7663  006734  B4D8               	btfsc	status,2,c
  7664  006736  D024               	goto	u4670
  7665                           
  7666                           ;newmain.c: 824: set_led(show3_1[i][j]);
  7667  006738  C05D  F058         	movff	animation3@i,??_animation3
  7668  00673C  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7669  006740  90D8               	bcf	status,0,c
  7670  006742  3658               	rlcf	??_animation3,f,c
  7671  006744  3659               	rlcf	??_animation3+1,f,c
  7672  006746  90D8               	bcf	status,0,c
  7673  006748  3658               	rlcf	??_animation3,f,c
  7674  00674A  3659               	rlcf	??_animation3+1,f,c
  7675  00674C  90D8               	bcf	status,0,c
  7676  00674E  3658               	rlcf	??_animation3,f,c
  7677  006750  3659               	rlcf	??_animation3+1,f,c
  7678  006752  0E69               	movlw	low _show3_1
  7679  006754  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7680  006756  0E7A               	movlw	high _show3_1
  7681  006758  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7682  00675A  5058               	movf	??_animation3,w,c
  7683  00675C  265A               	addwf	??_animation3+2,f,c
  7684  00675E  5059               	movf	??_animation3+1,w,c
  7685  006760  225B               	addwfc	??_animation3+3,f,c
  7686  006762  505F               	movf	animation3@j,w,c
  7687  006764  265A               	addwf	??_animation3+2,f,c
  7688  006766  5060               	movf	animation3@j+1,w,c
  7689  006768  225B               	addwfc	??_animation3+3,f,c
  7690  00676A  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7691  00676E  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7692  006772                     	if	0	;tblptru may be non-zero
  7693  006772                     	endif
  7694  006772                     	if	0	;tblptru may be non-zero
  7695  006772                     	endif
  7696  006772  0008               	tblrd		*
  7697  006774  50F5               	movf	tablat,w,c
  7698  006776  EC58  F023         	call	_set_led
  7699                           
  7700                           ;newmain.c: 825: else
  7701                           ;newmain.c: 826: break;
  7702  00677A  4A5F               	infsnz	animation3@j,f,c
  7703  00677C  2A60               	incf	animation3@j+1,f,c
  7704  00677E  D7B2               	goto	l3900
  7705  006780                     u4670:
  7706  006780                     l3912:
  7707                           
  7708                           ;newmain.c: 827: }
  7709                           ;newmain.c: 828: write_display();
  7710  006780  EC0A  F024         	call	_write_display	;wreg free
  7711                           
  7712                           ;newmain.c: 829: _delay((unsigned long)((5)*(4000000/4000.0)));
  7713  006784  0E07               	movlw	7
  7714  006786  6E58               	movwf	??_animation3& (0+255),c
  7715  006788  0E7D               	movlw	125
  7716  00678A                     u7047:
  7717  00678A  2EE8               	decfsz	wreg,f,c
  7718  00678C  D7FE               	bra	u7047
  7719  00678E  2E58               	decfsz	??_animation3& (0+255),f,c
  7720  006790  D7FC               	bra	u7047
  7721  006792  F000               	nop	
  7722                           
  7723                           ;newmain.c: 830: for (j = 0; j < 8; j++) {
  7724  006794  0E00               	movlw	0
  7725  006796  6E60               	movwf	animation3@j+1,c
  7726  006798  0E00               	movlw	0
  7727  00679A  6E5F               	movwf	animation3@j,c
  7728  00679C                     l3918:
  7729  00679C  BE60               	btfsc	animation3@j+1,7,c
  7730  00679E  D006               	goto	l357
  7731  0067A0  5060               	movf	animation3@j+1,w,c
  7732  0067A2  E14A               	bnz	l3930
  7733  0067A4  0E08               	movlw	8
  7734  0067A6  5C5F               	subwf	animation3@j,w,c
  7735  0067A8  B0D8               	btfsc	status,0,c
  7736  0067AA  D046               	goto	u4700
  7737  0067AC                     l357:
  7738                           
  7739                           ;newmain.c: 831: if (show3_1[i][j] != 100)
  7740  0067AC  C05D  F058         	movff	animation3@i,??_animation3
  7741  0067B0  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7742  0067B4  90D8               	bcf	status,0,c
  7743  0067B6  3658               	rlcf	??_animation3,f,c
  7744  0067B8  3659               	rlcf	??_animation3+1,f,c
  7745  0067BA  90D8               	bcf	status,0,c
  7746  0067BC  3658               	rlcf	??_animation3,f,c
  7747  0067BE  3659               	rlcf	??_animation3+1,f,c
  7748  0067C0  90D8               	bcf	status,0,c
  7749  0067C2  3658               	rlcf	??_animation3,f,c
  7750  0067C4  3659               	rlcf	??_animation3+1,f,c
  7751  0067C6  0E69               	movlw	low _show3_1
  7752  0067C8  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7753  0067CA  0E7A               	movlw	high _show3_1
  7754  0067CC  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7755  0067CE  5058               	movf	??_animation3,w,c
  7756  0067D0  265A               	addwf	??_animation3+2,f,c
  7757  0067D2  5059               	movf	??_animation3+1,w,c
  7758  0067D4  225B               	addwfc	??_animation3+3,f,c
  7759  0067D6  505F               	movf	animation3@j,w,c
  7760  0067D8  265A               	addwf	??_animation3+2,f,c
  7761  0067DA  5060               	movf	animation3@j+1,w,c
  7762  0067DC  225B               	addwfc	??_animation3+3,f,c
  7763  0067DE  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7764  0067E2  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7765  0067E6                     	if	0	;tblptru may be non-zero
  7766  0067E6                     	endif
  7767  0067E6                     	if	0	;tblptru may be non-zero
  7768  0067E6                     	endif
  7769  0067E6  0008               	tblrd		*
  7770  0067E8  50F5               	movf	tablat,w,c
  7771  0067EA  0A64               	xorlw	100
  7772  0067EC  B4D8               	btfsc	status,2,c
  7773  0067EE  D024               	goto	u4700
  7774                           
  7775                           ;newmain.c: 832: clr_led(show3_1[i][j]);
  7776  0067F0  C05D  F058         	movff	animation3@i,??_animation3
  7777  0067F4  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7778  0067F8  90D8               	bcf	status,0,c
  7779  0067FA  3658               	rlcf	??_animation3,f,c
  7780  0067FC  3659               	rlcf	??_animation3+1,f,c
  7781  0067FE  90D8               	bcf	status,0,c
  7782  006800  3658               	rlcf	??_animation3,f,c
  7783  006802  3659               	rlcf	??_animation3+1,f,c
  7784  006804  90D8               	bcf	status,0,c
  7785  006806  3658               	rlcf	??_animation3,f,c
  7786  006808  3659               	rlcf	??_animation3+1,f,c
  7787  00680A  0E69               	movlw	low _show3_1
  7788  00680C  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7789  00680E  0E7A               	movlw	high _show3_1
  7790  006810  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7791  006812  5058               	movf	??_animation3,w,c
  7792  006814  265A               	addwf	??_animation3+2,f,c
  7793  006816  5059               	movf	??_animation3+1,w,c
  7794  006818  225B               	addwfc	??_animation3+3,f,c
  7795  00681A  505F               	movf	animation3@j,w,c
  7796  00681C  265A               	addwf	??_animation3+2,f,c
  7797  00681E  5060               	movf	animation3@j+1,w,c
  7798  006820  225B               	addwfc	??_animation3+3,f,c
  7799  006822  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7800  006826  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7801  00682A                     	if	0	;tblptru may be non-zero
  7802  00682A                     	endif
  7803  00682A                     	if	0	;tblptru may be non-zero
  7804  00682A                     	endif
  7805  00682A  0008               	tblrd		*
  7806  00682C  50F5               	movf	tablat,w,c
  7807  00682E  ECAF  F023         	call	_clr_led
  7808                           
  7809                           ;newmain.c: 833: else
  7810                           ;newmain.c: 834: break;
  7811  006832  4A5F               	infsnz	animation3@j,f,c
  7812  006834  2A60               	incf	animation3@j+1,f,c
  7813  006836  D7B2               	goto	l3918
  7814  006838                     u4700:
  7815  006838                     l3930:
  7816                           
  7817                           ;newmain.c: 835: }
  7818                           ;newmain.c: 836: write_display();
  7819  006838  EC0A  F024         	call	_write_display	;wreg free
  7820  00683C  4A5D               	infsnz	animation3@i,f,c
  7821  00683E  2A5E               	incf	animation3@i+1,f,c
  7822  006840  BE5E               	btfsc	animation3@i+1,7,c
  7823  006842  D74C               	goto	l351
  7824  006844  505E               	movf	animation3@i+1,w,c
  7825  006846  E101               	bnz	u4710
  7826  006848  D743               	goto	L12
  7827  00684A                     u4710:
  7828                           
  7829                           ;newmain.c: 837: }
  7830                           ;newmain.c: 838: } else if (m == 1) {
  7831  00684A  0012               	return	
  7832  00684C                     l350:
  7833  00684C  045C               	decf	animation3@m,w,c
  7834  00684E  A4D8               	btfss	status,2,c
  7835  006850  D0BA               	goto	l362
  7836                           
  7837                           ;newmain.c: 839: for (i = 0; i < 7; i++) {
  7838  006852  0E00               	movlw	0
  7839  006854  6E5E               	movwf	animation3@i+1,c
  7840  006856  0E00               	movlw	0
  7841  006858  6E5D               	movwf	animation3@i,c
  7842  00685A  BE5E               	btfsc	animation3@i+1,7,c
  7843  00685C  D008               	goto	l363
  7844  00685E  505E               	movf	animation3@i+1,w,c
  7845  006860  E105               	bnz	u4730
  7846  006862  0E07               	movlw	7
  7847  006864  5C5D               	subwf	animation3@i,w,c
  7848  006866  B0D8               	btfsc	status,0,c
  7849  006868  0012               	return	
  7850  00686A  D001               	goto	l363
  7851  00686C                     u4730:
  7852  00686C  0012               	return	
  7853  00686E                     l363:
  7854                           
  7855                           ;newmain.c: 840: for (j = 0; j < 6; j++) {
  7856  00686E  0E00               	movlw	0
  7857  006870  6E60               	movwf	animation3@j+1,c
  7858  006872  0E00               	movlw	0
  7859  006874  6E5F               	movwf	animation3@j,c
  7860  006876                     l3946:
  7861  006876  BE60               	btfsc	animation3@j+1,7,c
  7862  006878  D006               	goto	l365
  7863  00687A  5060               	movf	animation3@j+1,w,c
  7864  00687C  E144               	bnz	l3958
  7865  00687E  0E06               	movlw	6
  7866  006880  5C5F               	subwf	animation3@j,w,c
  7867  006882  B0D8               	btfsc	status,0,c
  7868  006884  D040               	goto	u4760
  7869  006886                     l365:
  7870                           
  7871                           ;newmain.c: 841: if (show3_2[i][j] != 100)
  7872  006886  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7873  00688A  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7874  00688E  0E00               	movlw	0
  7875  006890  6E46               	movwf	___wmul@multiplicand+1,c
  7876  006892  0E06               	movlw	6
  7877  006894  6E45               	movwf	___wmul@multiplicand,c
  7878  006896  ECF1  F021         	call	___wmul	;wreg free
  7879  00689A  0E39               	movlw	low _show3_2
  7880  00689C  6E58               	movwf	??_animation3& (0+255),c
  7881  00689E  0E7C               	movlw	high _show3_2
  7882  0068A0  6E59               	movwf	(??_animation3+1)& (0+255),c
  7883  0068A2  5043               	movf	?___wmul,w,c
  7884  0068A4  2658               	addwf	??_animation3,f,c
  7885  0068A6  5044               	movf	?___wmul+1,w,c
  7886  0068A8  2259               	addwfc	??_animation3+1,f,c
  7887  0068AA  505F               	movf	animation3@j,w,c
  7888  0068AC  2658               	addwf	??_animation3,f,c
  7889  0068AE  5060               	movf	animation3@j+1,w,c
  7890  0068B0  2259               	addwfc	??_animation3+1,f,c
  7891  0068B2  C058  FFF6         	movff	??_animation3,tblptrl
  7892  0068B6  C059  FFF7         	movff	??_animation3+1,tblptrh
  7893  0068BA                     	if	0	;tblptru may be non-zero
  7894  0068BA                     	endif
  7895  0068BA                     	if	0	;tblptru may be non-zero
  7896  0068BA                     	endif
  7897  0068BA  0008               	tblrd		*
  7898  0068BC  50F5               	movf	tablat,w,c
  7899  0068BE  0A64               	xorlw	100
  7900  0068C0  B4D8               	btfsc	status,2,c
  7901  0068C2  D021               	goto	u4760
  7902                           
  7903                           ;newmain.c: 842: set_led(show3_2[i][j]);
  7904  0068C4  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7905  0068C8  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7906  0068CC  0E00               	movlw	0
  7907  0068CE  6E46               	movwf	___wmul@multiplicand+1,c
  7908  0068D0  0E06               	movlw	6
  7909  0068D2  6E45               	movwf	___wmul@multiplicand,c
  7910  0068D4  ECF1  F021         	call	___wmul	;wreg free
  7911  0068D8  0E39               	movlw	low _show3_2
  7912  0068DA  6E58               	movwf	??_animation3& (0+255),c
  7913  0068DC  0E7C               	movlw	high _show3_2
  7914  0068DE  6E59               	movwf	(??_animation3+1)& (0+255),c
  7915  0068E0  5043               	movf	?___wmul,w,c
  7916  0068E2  2658               	addwf	??_animation3,f,c
  7917  0068E4  5044               	movf	?___wmul+1,w,c
  7918  0068E6  2259               	addwfc	??_animation3+1,f,c
  7919  0068E8  505F               	movf	animation3@j,w,c
  7920  0068EA  2658               	addwf	??_animation3,f,c
  7921  0068EC  5060               	movf	animation3@j+1,w,c
  7922  0068EE  2259               	addwfc	??_animation3+1,f,c
  7923  0068F0  C058  FFF6         	movff	??_animation3,tblptrl
  7924  0068F4  C059  FFF7         	movff	??_animation3+1,tblptrh
  7925  0068F8                     	if	0	;tblptru may be non-zero
  7926  0068F8                     	endif
  7927  0068F8                     	if	0	;tblptru may be non-zero
  7928  0068F8                     	endif
  7929  0068F8  0008               	tblrd		*
  7930  0068FA  50F5               	movf	tablat,w,c
  7931  0068FC  EC58  F023         	call	_set_led
  7932                           
  7933                           ;newmain.c: 843: else
  7934                           ;newmain.c: 844: break;
  7935  006900  4A5F               	infsnz	animation3@j,f,c
  7936  006902  2A60               	incf	animation3@j+1,f,c
  7937  006904  D7B8               	goto	l3946
  7938  006906                     u4760:
  7939  006906                     l3958:
  7940                           
  7941                           ;newmain.c: 845: }
  7942                           ;newmain.c: 846: write_display();
  7943  006906  EC0A  F024         	call	_write_display	;wreg free
  7944                           
  7945                           ;newmain.c: 847: _delay((unsigned long)((5)*(4000000/4000.0)));
  7946  00690A  0E07               	movlw	7
  7947  00690C  6E58               	movwf	??_animation3& (0+255),c
  7948  00690E  0E7D               	movlw	125
  7949  006910                     u7057:
  7950  006910  2EE8               	decfsz	wreg,f,c
  7951  006912  D7FE               	bra	u7057
  7952  006914  2E58               	decfsz	??_animation3& (0+255),f,c
  7953  006916  D7FC               	bra	u7057
  7954  006918  F000               	nop	
  7955                           
  7956                           ;newmain.c: 848: for (j = 0; j < 6; j++) {
  7957  00691A  0E00               	movlw	0
  7958  00691C  6E60               	movwf	animation3@j+1,c
  7959  00691E  0E00               	movlw	0
  7960  006920  6E5F               	movwf	animation3@j,c
  7961  006922                     l3964:
  7962  006922  BE60               	btfsc	animation3@j+1,7,c
  7963  006924  D006               	goto	l369
  7964  006926  5060               	movf	animation3@j+1,w,c
  7965  006928  E144               	bnz	l3976
  7966  00692A  0E06               	movlw	6
  7967  00692C  5C5F               	subwf	animation3@j,w,c
  7968  00692E  B0D8               	btfsc	status,0,c
  7969  006930  D040               	goto	u4790
  7970  006932                     l369:
  7971                           
  7972                           ;newmain.c: 849: if (show3_2[i][j] != 100)
  7973  006932  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7974  006936  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7975  00693A  0E00               	movlw	0
  7976  00693C  6E46               	movwf	___wmul@multiplicand+1,c
  7977  00693E  0E06               	movlw	6
  7978  006940  6E45               	movwf	___wmul@multiplicand,c
  7979  006942  ECF1  F021         	call	___wmul	;wreg free
  7980  006946  0E39               	movlw	low _show3_2
  7981  006948  6E58               	movwf	??_animation3& (0+255),c
  7982  00694A  0E7C               	movlw	high _show3_2
  7983  00694C  6E59               	movwf	(??_animation3+1)& (0+255),c
  7984  00694E  5043               	movf	?___wmul,w,c
  7985  006950  2658               	addwf	??_animation3,f,c
  7986  006952  5044               	movf	?___wmul+1,w,c
  7987  006954  2259               	addwfc	??_animation3+1,f,c
  7988  006956  505F               	movf	animation3@j,w,c
  7989  006958  2658               	addwf	??_animation3,f,c
  7990  00695A  5060               	movf	animation3@j+1,w,c
  7991  00695C  2259               	addwfc	??_animation3+1,f,c
  7992  00695E  C058  FFF6         	movff	??_animation3,tblptrl
  7993  006962  C059  FFF7         	movff	??_animation3+1,tblptrh
  7994  006966                     	if	0	;tblptru may be non-zero
  7995  006966                     	endif
  7996  006966                     	if	0	;tblptru may be non-zero
  7997  006966                     	endif
  7998  006966  0008               	tblrd		*
  7999  006968  50F5               	movf	tablat,w,c
  8000  00696A  0A64               	xorlw	100
  8001  00696C  B4D8               	btfsc	status,2,c
  8002  00696E  D021               	goto	u4790
  8003                           
  8004                           ;newmain.c: 850: clr_led(show3_2[i][j]);
  8005  006970  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8006  006974  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8007  006978  0E00               	movlw	0
  8008  00697A  6E46               	movwf	___wmul@multiplicand+1,c
  8009  00697C  0E06               	movlw	6
  8010  00697E  6E45               	movwf	___wmul@multiplicand,c
  8011  006980  ECF1  F021         	call	___wmul	;wreg free
  8012  006984  0E39               	movlw	low _show3_2
  8013  006986  6E58               	movwf	??_animation3& (0+255),c
  8014  006988  0E7C               	movlw	high _show3_2
  8015  00698A  6E59               	movwf	(??_animation3+1)& (0+255),c
  8016  00698C  5043               	movf	?___wmul,w,c
  8017  00698E  2658               	addwf	??_animation3,f,c
  8018  006990  5044               	movf	?___wmul+1,w,c
  8019  006992  2259               	addwfc	??_animation3+1,f,c
  8020  006994  505F               	movf	animation3@j,w,c
  8021  006996  2658               	addwf	??_animation3,f,c
  8022  006998  5060               	movf	animation3@j+1,w,c
  8023  00699A  2259               	addwfc	??_animation3+1,f,c
  8024  00699C  C058  FFF6         	movff	??_animation3,tblptrl
  8025  0069A0  C059  FFF7         	movff	??_animation3+1,tblptrh
  8026  0069A4                     	if	0	;tblptru may be non-zero
  8027  0069A4                     	endif
  8028  0069A4                     	if	0	;tblptru may be non-zero
  8029  0069A4                     	endif
  8030  0069A4  0008               	tblrd		*
  8031  0069A6  50F5               	movf	tablat,w,c
  8032  0069A8  ECAF  F023         	call	_clr_led
  8033                           
  8034                           ;newmain.c: 851: else
  8035                           ;newmain.c: 852: break;
  8036  0069AC  4A5F               	infsnz	animation3@j,f,c
  8037  0069AE  2A60               	incf	animation3@j+1,f,c
  8038  0069B0  D7B8               	goto	l3964
  8039  0069B2                     u4790:
  8040  0069B2                     l3976:
  8041                           
  8042                           ;newmain.c: 853: }
  8043                           ;newmain.c: 854: write_display();
  8044  0069B2  EC0A  F024         	call	_write_display	;wreg free
  8045  0069B6  4A5D               	infsnz	animation3@i,f,c
  8046  0069B8  2A5E               	incf	animation3@i+1,f,c
  8047  0069BA  BE5E               	btfsc	animation3@i+1,7,c
  8048  0069BC  D758               	goto	l363
  8049  0069BE  505E               	movf	animation3@i+1,w,c
  8050  0069C0  E101               	bnz	u4800
  8051  0069C2  D74F               	goto	L13
  8052  0069C4                     u4800:
  8053                           
  8054                           ;newmain.c: 855: }
  8055                           ;newmain.c: 856: } else if (m == 2) {
  8056  0069C4  0012               	return	
  8057  0069C6                     l362:
  8058  0069C6  0E02               	movlw	2
  8059  0069C8  185C               	xorwf	animation3@m,w,c
  8060  0069CA  A4D8               	btfss	status,2,c
  8061  0069CC  D0B9               	goto	l374
  8062                           
  8063                           ;newmain.c: 857: for (i = 0; i < 5; i++) {
  8064  0069CE  0E00               	movlw	0
  8065  0069D0  6E5E               	movwf	animation3@i+1,c
  8066  0069D2  0E00               	movlw	0
  8067  0069D4  6E5D               	movwf	animation3@i,c
  8068  0069D6  BE5E               	btfsc	animation3@i+1,7,c
  8069  0069D8  D008               	goto	l375
  8070  0069DA  505E               	movf	animation3@i+1,w,c
  8071  0069DC  E105               	bnz	u4820
  8072  0069DE  0E05               	movlw	5
  8073  0069E0  5C5D               	subwf	animation3@i,w,c
  8074  0069E2  B0D8               	btfsc	status,0,c
  8075  0069E4  0012               	return	
  8076  0069E6  D001               	goto	l375
  8077  0069E8                     u4820:
  8078  0069E8  0012               	return	
  8079  0069EA                     l375:
  8080                           
  8081                           ;newmain.c: 858: for (j = 0; j < 4; j++) {
  8082  0069EA  0E00               	movlw	0
  8083  0069EC  6E60               	movwf	animation3@j+1,c
  8084  0069EE  0E00               	movlw	0
  8085  0069F0  6E5F               	movwf	animation3@j,c
  8086  0069F2                     l3992:
  8087  0069F2  BE60               	btfsc	animation3@j+1,7,c
  8088  0069F4  D006               	goto	l377
  8089  0069F6  5060               	movf	animation3@j+1,w,c
  8090  0069F8  E144               	bnz	l4004
  8091  0069FA  0E04               	movlw	4
  8092  0069FC  5C5F               	subwf	animation3@j,w,c
  8093  0069FE  B0D8               	btfsc	status,0,c
  8094  006A00  D040               	goto	u4850
  8095  006A02                     l377:
  8096                           
  8097                           ;newmain.c: 859: if (show3_3[i][j] != 100)
  8098  006A02  C05D  F058         	movff	animation3@i,??_animation3
  8099  006A06  C05E  F059         	movff	animation3@i+1,??_animation3+1
  8100  006A0A  90D8               	bcf	status,0,c
  8101  006A0C  3658               	rlcf	??_animation3,f,c
  8102  006A0E  3659               	rlcf	??_animation3+1,f,c
  8103  006A10  90D8               	bcf	status,0,c
  8104  006A12  3658               	rlcf	??_animation3,f,c
  8105  006A14  3659               	rlcf	??_animation3+1,f,c
  8106  006A16  0ECB               	movlw	low _show3_3
  8107  006A18  6E5A               	movwf	(??_animation3+2)& (0+255),c
  8108  006A1A  0E7C               	movlw	high _show3_3
  8109  006A1C  6E5B               	movwf	(??_animation3+3)& (0+255),c
  8110  006A1E  5058               	movf	??_animation3,w,c
  8111  006A20  265A               	addwf	??_animation3+2,f,c
  8112  006A22  5059               	movf	??_animation3+1,w,c
  8113  006A24  225B               	addwfc	??_animation3+3,f,c
  8114  006A26  505F               	movf	animation3@j,w,c
  8115  006A28  265A               	addwf	??_animation3+2,f,c
  8116  006A2A  5060               	movf	animation3@j+1,w,c
  8117  006A2C  225B               	addwfc	??_animation3+3,f,c
  8118  006A2E  C05A  FFF6         	movff	??_animation3+2,tblptrl
  8119  006A32  C05B  FFF7         	movff	??_animation3+3,tblptrh
  8120  006A36                     	if	0	;tblptru may be non-zero
  8121  006A36                     	endif
  8122  006A36                     	if	0	;tblptru may be non-zero
  8123  006A36                     	endif
  8124  006A36  0008               	tblrd		*
  8125  006A38  50F5               	movf	tablat,w,c
  8126  006A3A  0A64               	xorlw	100
  8127  006A3C  B4D8               	btfsc	status,2,c
  8128  006A3E  D021               	goto	u4850
  8129                           
  8130                           ;newmain.c: 860: set_led(show3_3[i][j]);
  8131  006A40  C05D  F058         	movff	animation3@i,??_animation3
  8132  006A44  C05E  F059         	movff	animation3@i+1,??_animation3+1
  8133  006A48  90D8               	bcf	status,0,c
  8134  006A4A  3658               	rlcf	??_animation3,f,c
  8135  006A4C  3659               	rlcf	??_animation3+1,f,c
  8136  006A4E  90D8               	bcf	status,0,c
  8137  006A50  3658               	rlcf	??_animation3,f,c
  8138  006A52  3659               	rlcf	??_animation3+1,f,c
  8139  006A54  0ECB               	movlw	low _show3_3
  8140  006A56  6E5A               	movwf	(??_animation3+2)& (0+255),c
  8141  006A58  0E7C               	movlw	high _show3_3
  8142  006A5A  6E5B               	movwf	(??_animation3+3)& (0+255),c
  8143  006A5C  5058               	movf	??_animation3,w,c
  8144  006A5E  265A               	addwf	??_animation3+2,f,c
  8145  006A60  5059               	movf	??_animation3+1,w,c
  8146  006A62  225B               	addwfc	??_animation3+3,f,c
  8147  006A64  505F               	movf	animation3@j,w,c
  8148  006A66  265A               	addwf	??_animation3+2,f,c
  8149  006A68  5060               	movf	animation3@j+1,w,c
  8150  006A6A  225B               	addwfc	??_animation3+3,f,c
  8151  006A6C  C05A  FFF6         	movff	??_animation3+2,tblptrl
  8152  006A70  C05B  FFF7         	movff	??_animation3+3,tblptrh
  8153  006A74                     	if	0	;tblptru may be non-zero
  8154  006A74                     	endif
  8155  006A74                     	if	0	;tblptru may be non-zero
  8156  006A74                     	endif
  8157  006A74  0008               	tblrd		*
  8158  006A76  50F5               	movf	tablat,w,c
  8159  006A78  EC58  F023         	call	_set_led
  8160                           
  8161                           ;newmain.c: 861: else
  8162                           ;newmain.c: 862: break;
  8163  006A7C  4A5F               	infsnz	animation3@j,f,c
  8164  006A7E  2A60               	incf	animation3@j+1,f,c
  8165  006A80  D7B8               	goto	l3992
  8166  006A82                     u4850:
  8167  006A82                     l4004:
  8168                           
  8169                           ;newmain.c: 863: }
  8170                           ;newmain.c: 864: write_display();
  8171  006A82  EC0A  F024         	call	_write_display	;wreg free
  8172                           
  8173                           ;newmain.c: 865: _delay((unsigned long)((10)*(4000000/4000.0)));
  8174  006A86  0E0D               	movlw	13
  8175  006A88  6E58               	movwf	??_animation3& (0+255),c
  8176  006A8A  0EFC               	movlw	252
  8177  006A8C                     u7067:
  8178  006A8C  2EE8               	decfsz	wreg,f,c
  8179  006A8E  D7FE               	bra	u7067
  8180  006A90  2E58               	decfsz	??_animation3& (0+255),f,c
  8181  006A92  D7FC               	bra	u7067
  8182                           
  8183                           ;newmain.c: 866: for (j = 0; j < 4; j++) {
  8184  006A94  0E00               	movlw	0
  8185  006A96  6E60               	movwf	animation3@j+1,c
  8186  006A98  0E00               	movlw	0
  8187  006A9A  6E5F               	movwf	animation3@j,c
  8188  006A9C                     l4010:
  8189  006A9C  BE60               	btfsc	animation3@j+1,7,c
  8190  006A9E  D006               	goto	l381
  8191  006AA0  5060               	movf	animation3@j+1,w,c
  8192  006AA2  E144               	bnz	l4022
  8193  006AA4  0E04               	movlw	4
  8194  006AA6  5C5F               	subwf	animation3@j,w,c
  8195  006AA8  B0D8               	btfsc	status,0,c
  8196  006AAA  D040               	goto	u4880
  8197  006AAC                     l381:
  8198                           
  8199                           ;newmain.c: 867: if (show3_3[i][j] != 100)
  8200  006AAC  C05D  F058         	movff	animation3@i,??_animation3
  8201  006AB0  C05E  F059         	movff	animation3@i+1,??_animation3+1
  8202  006AB4  90D8               	bcf	status,0,c
  8203  006AB6  3658               	rlcf	??_animation3,f,c
  8204  006AB8  3659               	rlcf	??_animation3+1,f,c
  8205  006ABA  90D8               	bcf	status,0,c
  8206  006ABC  3658               	rlcf	??_animation3,f,c
  8207  006ABE  3659               	rlcf	??_animation3+1,f,c
  8208  006AC0  0ECB               	movlw	low _show3_3
  8209  006AC2  6E5A               	movwf	(??_animation3+2)& (0+255),c
  8210  006AC4  0E7C               	movlw	high _show3_3
  8211  006AC6  6E5B               	movwf	(??_animation3+3)& (0+255),c
  8212  006AC8  5058               	movf	??_animation3,w,c
  8213  006ACA  265A               	addwf	??_animation3+2,f,c
  8214  006ACC  5059               	movf	??_animation3+1,w,c
  8215  006ACE  225B               	addwfc	??_animation3+3,f,c
  8216  006AD0  505F               	movf	animation3@j,w,c
  8217  006AD2  265A               	addwf	??_animation3+2,f,c
  8218  006AD4  5060               	movf	animation3@j+1,w,c
  8219  006AD6  225B               	addwfc	??_animation3+3,f,c
  8220  006AD8  C05A  FFF6         	movff	??_animation3+2,tblptrl
  8221  006ADC  C05B  FFF7         	movff	??_animation3+3,tblptrh
  8222  006AE0                     	if	0	;tblptru may be non-zero
  8223  006AE0                     	endif
  8224  006AE0                     	if	0	;tblptru may be non-zero
  8225  006AE0                     	endif
  8226  006AE0  0008               	tblrd		*
  8227  006AE2  50F5               	movf	tablat,w,c
  8228  006AE4  0A64               	xorlw	100
  8229  006AE6  B4D8               	btfsc	status,2,c
  8230  006AE8  D021               	goto	u4880
  8231                           
  8232                           ;newmain.c: 868: clr_led(show3_3[i][j]);
  8233  006AEA  C05D  F058         	movff	animation3@i,??_animation3
  8234  006AEE  C05E  F059         	movff	animation3@i+1,??_animation3+1
  8235  006AF2  90D8               	bcf	status,0,c
  8236  006AF4  3658               	rlcf	??_animation3,f,c
  8237  006AF6  3659               	rlcf	??_animation3+1,f,c
  8238  006AF8  90D8               	bcf	status,0,c
  8239  006AFA  3658               	rlcf	??_animation3,f,c
  8240  006AFC  3659               	rlcf	??_animation3+1,f,c
  8241  006AFE  0ECB               	movlw	low _show3_3
  8242  006B00  6E5A               	movwf	(??_animation3+2)& (0+255),c
  8243  006B02  0E7C               	movlw	high _show3_3
  8244  006B04  6E5B               	movwf	(??_animation3+3)& (0+255),c
  8245  006B06  5058               	movf	??_animation3,w,c
  8246  006B08  265A               	addwf	??_animation3+2,f,c
  8247  006B0A  5059               	movf	??_animation3+1,w,c
  8248  006B0C  225B               	addwfc	??_animation3+3,f,c
  8249  006B0E  505F               	movf	animation3@j,w,c
  8250  006B10  265A               	addwf	??_animation3+2,f,c
  8251  006B12  5060               	movf	animation3@j+1,w,c
  8252  006B14  225B               	addwfc	??_animation3+3,f,c
  8253  006B16  C05A  FFF6         	movff	??_animation3+2,tblptrl
  8254  006B1A  C05B  FFF7         	movff	??_animation3+3,tblptrh
  8255  006B1E                     	if	0	;tblptru may be non-zero
  8256  006B1E                     	endif
  8257  006B1E                     	if	0	;tblptru may be non-zero
  8258  006B1E                     	endif
  8259  006B1E  0008               	tblrd		*
  8260  006B20  50F5               	movf	tablat,w,c
  8261  006B22  ECAF  F023         	call	_clr_led
  8262                           
  8263                           ;newmain.c: 869: else
  8264                           ;newmain.c: 870: break;
  8265  006B26  4A5F               	infsnz	animation3@j,f,c
  8266  006B28  2A60               	incf	animation3@j+1,f,c
  8267  006B2A  D7B8               	goto	l4010
  8268  006B2C                     u4880:
  8269  006B2C                     l4022:
  8270                           
  8271                           ;newmain.c: 871: }
  8272                           ;newmain.c: 872: write_display();
  8273  006B2C  EC0A  F024         	call	_write_display	;wreg free
  8274  006B30  4A5D               	infsnz	animation3@i,f,c
  8275  006B32  2A5E               	incf	animation3@i+1,f,c
  8276  006B34  BE5E               	btfsc	animation3@i+1,7,c
  8277  006B36  D759               	goto	l375
  8278  006B38  505E               	movf	animation3@i+1,w,c
  8279  006B3A  E101               	bnz	u4890
  8280  006B3C  D750               	goto	L14
  8281  006B3E                     u4890:
  8282                           
  8283                           ;newmain.c: 873: }
  8284                           ;newmain.c: 874: } else if (m == 3) {
  8285  006B3E  0012               	return	
  8286  006B40                     l374:
  8287  006B40  0E03               	movlw	3
  8288  006B42  185C               	xorwf	animation3@m,w,c
  8289  006B44  A4D8               	btfss	status,2,c
  8290  006B46  0012               	return	
  8291                           
  8292                           ;newmain.c: 876: for (i = 3; i >= 0; i--) {
  8293  006B48  0E00               	movlw	0
  8294  006B4A  6E5E               	movwf	animation3@i+1,c
  8295  006B4C  0E03               	movlw	3
  8296  006B4E  6E5D               	movwf	animation3@i,c
  8297  006B50                     l4032:
  8298  006B50  BE5E               	btfsc	animation3@i+1,7,c
  8299  006B52  D0A7               	goto	u4980
  8300                           
  8301                           ;newmain.c: 877: for (j = 0; j < 26; j++) {
  8302  006B54  0E00               	movlw	0
  8303  006B56  6E60               	movwf	animation3@j+1,c
  8304  006B58  0E00               	movlw	0
  8305  006B5A  6E5F               	movwf	animation3@j,c
  8306  006B5C                     l4038:
  8307  006B5C  BE60               	btfsc	animation3@j+1,7,c
  8308  006B5E  D006               	goto	l389
  8309  006B60  5060               	movf	animation3@j+1,w,c
  8310  006B62  E144               	bnz	l4050
  8311  006B64  0E1A               	movlw	26
  8312  006B66  5C5F               	subwf	animation3@j,w,c
  8313  006B68  B0D8               	btfsc	status,0,c
  8314  006B6A  D040               	goto	u4940
  8315  006B6C                     l389:
  8316                           
  8317                           ;newmain.c: 878: if (circle[i][j] != 100)
  8318  006B6C  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8319  006B70  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8320  006B74  0E00               	movlw	0
  8321  006B76  6E46               	movwf	___wmul@multiplicand+1,c
  8322  006B78  0E1A               	movlw	26
  8323  006B7A  6E45               	movwf	___wmul@multiplicand,c
  8324  006B7C  ECF1  F021         	call	___wmul	;wreg free
  8325  006B80  0E41               	movlw	low _circle
  8326  006B82  6E58               	movwf	??_animation3& (0+255),c
  8327  006B84  0E79               	movlw	high _circle
  8328  006B86  6E59               	movwf	(??_animation3+1)& (0+255),c
  8329  006B88  5043               	movf	?___wmul,w,c
  8330  006B8A  2658               	addwf	??_animation3,f,c
  8331  006B8C  5044               	movf	?___wmul+1,w,c
  8332  006B8E  2259               	addwfc	??_animation3+1,f,c
  8333  006B90  505F               	movf	animation3@j,w,c
  8334  006B92  2658               	addwf	??_animation3,f,c
  8335  006B94  5060               	movf	animation3@j+1,w,c
  8336  006B96  2259               	addwfc	??_animation3+1,f,c
  8337  006B98  C058  FFF6         	movff	??_animation3,tblptrl
  8338  006B9C  C059  FFF7         	movff	??_animation3+1,tblptrh
  8339  006BA0                     	if	0	;tblptru may be non-zero
  8340  006BA0                     	endif
  8341  006BA0                     	if	0	;tblptru may be non-zero
  8342  006BA0                     	endif
  8343  006BA0  0008               	tblrd		*
  8344  006BA2  50F5               	movf	tablat,w,c
  8345  006BA4  0A64               	xorlw	100
  8346  006BA6  B4D8               	btfsc	status,2,c
  8347  006BA8  D021               	goto	u4940
  8348                           
  8349                           ;newmain.c: 879: set_led(circle[i][j]);
  8350  006BAA  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8351  006BAE  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8352  006BB2  0E00               	movlw	0
  8353  006BB4  6E46               	movwf	___wmul@multiplicand+1,c
  8354  006BB6  0E1A               	movlw	26
  8355  006BB8  6E45               	movwf	___wmul@multiplicand,c
  8356  006BBA  ECF1  F021         	call	___wmul	;wreg free
  8357  006BBE  0E41               	movlw	low _circle
  8358  006BC0  6E58               	movwf	??_animation3& (0+255),c
  8359  006BC2  0E79               	movlw	high _circle
  8360  006BC4  6E59               	movwf	(??_animation3+1)& (0+255),c
  8361  006BC6  5043               	movf	?___wmul,w,c
  8362  006BC8  2658               	addwf	??_animation3,f,c
  8363  006BCA  5044               	movf	?___wmul+1,w,c
  8364  006BCC  2259               	addwfc	??_animation3+1,f,c
  8365  006BCE  505F               	movf	animation3@j,w,c
  8366  006BD0  2658               	addwf	??_animation3,f,c
  8367  006BD2  5060               	movf	animation3@j+1,w,c
  8368  006BD4  2259               	addwfc	??_animation3+1,f,c
  8369  006BD6  C058  FFF6         	movff	??_animation3,tblptrl
  8370  006BDA  C059  FFF7         	movff	??_animation3+1,tblptrh
  8371  006BDE                     	if	0	;tblptru may be non-zero
  8372  006BDE                     	endif
  8373  006BDE                     	if	0	;tblptru may be non-zero
  8374  006BDE                     	endif
  8375  006BDE  0008               	tblrd		*
  8376  006BE0  50F5               	movf	tablat,w,c
  8377  006BE2  EC58  F023         	call	_set_led
  8378                           
  8379                           ;newmain.c: 880: else
  8380                           ;newmain.c: 881: break;
  8381  006BE6  4A5F               	infsnz	animation3@j,f,c
  8382  006BE8  2A60               	incf	animation3@j+1,f,c
  8383  006BEA  D7B8               	goto	l4038
  8384  006BEC                     u4940:
  8385  006BEC                     l4050:
  8386                           
  8387                           ;newmain.c: 882: }
  8388                           ;newmain.c: 883: write_display();
  8389  006BEC  EC0A  F024         	call	_write_display	;wreg free
  8390                           
  8391                           ;newmain.c: 884: _delay((unsigned long)((10)*(4000000/4000.0)));
  8392  006BF0  0E0D               	movlw	13
  8393  006BF2  6E58               	movwf	??_animation3& (0+255),c
  8394  006BF4  0EFC               	movlw	252
  8395  006BF6                     u7077:
  8396  006BF6  2EE8               	decfsz	wreg,f,c
  8397  006BF8  D7FE               	bra	u7077
  8398  006BFA  2E58               	decfsz	??_animation3& (0+255),f,c
  8399  006BFC  D7FC               	bra	u7077
  8400                           
  8401                           ;newmain.c: 885: for (j = 0; j < 26; j++) {
  8402  006BFE  0E00               	movlw	0
  8403  006C00  6E60               	movwf	animation3@j+1,c
  8404  006C02  0E00               	movlw	0
  8405  006C04  6E5F               	movwf	animation3@j,c
  8406  006C06                     l4056:
  8407  006C06  BE60               	btfsc	animation3@j+1,7,c
  8408  006C08  D006               	goto	l393
  8409  006C0A  5060               	movf	animation3@j+1,w,c
  8410  006C0C  E144               	bnz	l4068
  8411  006C0E  0E1A               	movlw	26
  8412  006C10  5C5F               	subwf	animation3@j,w,c
  8413  006C12  B0D8               	btfsc	status,0,c
  8414  006C14  D040               	goto	u4970
  8415  006C16                     l393:
  8416                           
  8417                           ;newmain.c: 886: if (circle[i][j] != 100)
  8418  006C16  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8419  006C1A  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8420  006C1E  0E00               	movlw	0
  8421  006C20  6E46               	movwf	___wmul@multiplicand+1,c
  8422  006C22  0E1A               	movlw	26
  8423  006C24  6E45               	movwf	___wmul@multiplicand,c
  8424  006C26  ECF1  F021         	call	___wmul	;wreg free
  8425  006C2A  0E41               	movlw	low _circle
  8426  006C2C  6E58               	movwf	??_animation3& (0+255),c
  8427  006C2E  0E79               	movlw	high _circle
  8428  006C30  6E59               	movwf	(??_animation3+1)& (0+255),c
  8429  006C32  5043               	movf	?___wmul,w,c
  8430  006C34  2658               	addwf	??_animation3,f,c
  8431  006C36  5044               	movf	?___wmul+1,w,c
  8432  006C38  2259               	addwfc	??_animation3+1,f,c
  8433  006C3A  505F               	movf	animation3@j,w,c
  8434  006C3C  2658               	addwf	??_animation3,f,c
  8435  006C3E  5060               	movf	animation3@j+1,w,c
  8436  006C40  2259               	addwfc	??_animation3+1,f,c
  8437  006C42  C058  FFF6         	movff	??_animation3,tblptrl
  8438  006C46  C059  FFF7         	movff	??_animation3+1,tblptrh
  8439  006C4A                     	if	0	;tblptru may be non-zero
  8440  006C4A                     	endif
  8441  006C4A                     	if	0	;tblptru may be non-zero
  8442  006C4A                     	endif
  8443  006C4A  0008               	tblrd		*
  8444  006C4C  50F5               	movf	tablat,w,c
  8445  006C4E  0A64               	xorlw	100
  8446  006C50  B4D8               	btfsc	status,2,c
  8447  006C52  D021               	goto	u4970
  8448                           
  8449                           ;newmain.c: 887: clr_led(circle[i][j]);
  8450  006C54  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8451  006C58  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8452  006C5C  0E00               	movlw	0
  8453  006C5E  6E46               	movwf	___wmul@multiplicand+1,c
  8454  006C60  0E1A               	movlw	26
  8455  006C62  6E45               	movwf	___wmul@multiplicand,c
  8456  006C64  ECF1  F021         	call	___wmul	;wreg free
  8457  006C68  0E41               	movlw	low _circle
  8458  006C6A  6E58               	movwf	??_animation3& (0+255),c
  8459  006C6C  0E79               	movlw	high _circle
  8460  006C6E  6E59               	movwf	(??_animation3+1)& (0+255),c
  8461  006C70  5043               	movf	?___wmul,w,c
  8462  006C72  2658               	addwf	??_animation3,f,c
  8463  006C74  5044               	movf	?___wmul+1,w,c
  8464  006C76  2259               	addwfc	??_animation3+1,f,c
  8465  006C78  505F               	movf	animation3@j,w,c
  8466  006C7A  2658               	addwf	??_animation3,f,c
  8467  006C7C  5060               	movf	animation3@j+1,w,c
  8468  006C7E  2259               	addwfc	??_animation3+1,f,c
  8469  006C80  C058  FFF6         	movff	??_animation3,tblptrl
  8470  006C84  C059  FFF7         	movff	??_animation3+1,tblptrh
  8471  006C88                     	if	0	;tblptru may be non-zero
  8472  006C88                     	endif
  8473  006C88                     	if	0	;tblptru may be non-zero
  8474  006C88                     	endif
  8475  006C88  0008               	tblrd		*
  8476  006C8A  50F5               	movf	tablat,w,c
  8477  006C8C  ECAF  F023         	call	_clr_led
  8478                           
  8479                           ;newmain.c: 888: else
  8480                           ;newmain.c: 889: break;
  8481  006C90  4A5F               	infsnz	animation3@j,f,c
  8482  006C92  2A60               	incf	animation3@j+1,f,c
  8483  006C94  D7B8               	goto	l4056
  8484  006C96                     u4970:
  8485  006C96                     l4068:
  8486                           
  8487                           ;newmain.c: 890: }
  8488                           ;newmain.c: 891: write_display();
  8489  006C96  EC0A  F024         	call	_write_display	;wreg free
  8490  006C9A  065D               	decf	animation3@i,f,c
  8491  006C9C  A0D8               	btfss	status,0,c
  8492  006C9E  065E               	decf	animation3@i+1,f,c
  8493  006CA0  D757               	goto	l4032
  8494  006CA2                     u4980:
  8495                           
  8496                           ;newmain.c: 892: }
  8497                           ;newmain.c: 894: for (i = 0; i < 3; i++) {
  8498  006CA2  0E00               	movlw	0
  8499  006CA4  6E5E               	movwf	animation3@i+1,c
  8500  006CA6  0E00               	movlw	0
  8501  006CA8  6E5D               	movwf	animation3@i,c
  8502  006CAA  BE5E               	btfsc	animation3@i+1,7,c
  8503  006CAC  D008               	goto	l397
  8504  006CAE  505E               	movf	animation3@i+1,w,c
  8505  006CB0  E105               	bnz	u4990
  8506  006CB2  0E03               	movlw	3
  8507  006CB4  5C5D               	subwf	animation3@i,w,c
  8508  006CB6  B0D8               	btfsc	status,0,c
  8509  006CB8  0012               	return	
  8510  006CBA  D001               	goto	l397
  8511  006CBC                     u4990:
  8512  006CBC  0012               	return	
  8513  006CBE                     l397:
  8514                           
  8515                           ;newmain.c: 895: for (j = 0; j < 26; j++) {
  8516  006CBE  0E00               	movlw	0
  8517  006CC0  6E60               	movwf	animation3@j+1,c
  8518  006CC2  0E00               	movlw	0
  8519  006CC4  6E5F               	movwf	animation3@j,c
  8520  006CC6                     l4082:
  8521  006CC6  BE60               	btfsc	animation3@j+1,7,c
  8522  006CC8  D006               	goto	l399
  8523  006CCA  5060               	movf	animation3@j+1,w,c
  8524  006CCC  E144               	bnz	l4094
  8525  006CCE  0E1A               	movlw	26
  8526  006CD0  5C5F               	subwf	animation3@j,w,c
  8527  006CD2  B0D8               	btfsc	status,0,c
  8528  006CD4  D040               	goto	u5020
  8529  006CD6                     l399:
  8530                           
  8531                           ;newmain.c: 896: if (circle[i][j] != 100)
  8532  006CD6  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8533  006CDA  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8534  006CDE  0E00               	movlw	0
  8535  006CE0  6E46               	movwf	___wmul@multiplicand+1,c
  8536  006CE2  0E1A               	movlw	26
  8537  006CE4  6E45               	movwf	___wmul@multiplicand,c
  8538  006CE6  ECF1  F021         	call	___wmul	;wreg free
  8539  006CEA  0E41               	movlw	low _circle
  8540  006CEC  6E58               	movwf	??_animation3& (0+255),c
  8541  006CEE  0E79               	movlw	high _circle
  8542  006CF0  6E59               	movwf	(??_animation3+1)& (0+255),c
  8543  006CF2  5043               	movf	?___wmul,w,c
  8544  006CF4  2658               	addwf	??_animation3,f,c
  8545  006CF6  5044               	movf	?___wmul+1,w,c
  8546  006CF8  2259               	addwfc	??_animation3+1,f,c
  8547  006CFA  505F               	movf	animation3@j,w,c
  8548  006CFC  2658               	addwf	??_animation3,f,c
  8549  006CFE  5060               	movf	animation3@j+1,w,c
  8550  006D00  2259               	addwfc	??_animation3+1,f,c
  8551  006D02  C058  FFF6         	movff	??_animation3,tblptrl
  8552  006D06  C059  FFF7         	movff	??_animation3+1,tblptrh
  8553  006D0A                     	if	0	;tblptru may be non-zero
  8554  006D0A                     	endif
  8555  006D0A                     	if	0	;tblptru may be non-zero
  8556  006D0A                     	endif
  8557  006D0A  0008               	tblrd		*
  8558  006D0C  50F5               	movf	tablat,w,c
  8559  006D0E  0A64               	xorlw	100
  8560  006D10  B4D8               	btfsc	status,2,c
  8561  006D12  D021               	goto	u5020
  8562                           
  8563                           ;newmain.c: 897: set_led(circle[i][j]);
  8564  006D14  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8565  006D18  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8566  006D1C  0E00               	movlw	0
  8567  006D1E  6E46               	movwf	___wmul@multiplicand+1,c
  8568  006D20  0E1A               	movlw	26
  8569  006D22  6E45               	movwf	___wmul@multiplicand,c
  8570  006D24  ECF1  F021         	call	___wmul	;wreg free
  8571  006D28  0E41               	movlw	low _circle
  8572  006D2A  6E58               	movwf	??_animation3& (0+255),c
  8573  006D2C  0E79               	movlw	high _circle
  8574  006D2E  6E59               	movwf	(??_animation3+1)& (0+255),c
  8575  006D30  5043               	movf	?___wmul,w,c
  8576  006D32  2658               	addwf	??_animation3,f,c
  8577  006D34  5044               	movf	?___wmul+1,w,c
  8578  006D36  2259               	addwfc	??_animation3+1,f,c
  8579  006D38  505F               	movf	animation3@j,w,c
  8580  006D3A  2658               	addwf	??_animation3,f,c
  8581  006D3C  5060               	movf	animation3@j+1,w,c
  8582  006D3E  2259               	addwfc	??_animation3+1,f,c
  8583  006D40  C058  FFF6         	movff	??_animation3,tblptrl
  8584  006D44  C059  FFF7         	movff	??_animation3+1,tblptrh
  8585  006D48                     	if	0	;tblptru may be non-zero
  8586  006D48                     	endif
  8587  006D48                     	if	0	;tblptru may be non-zero
  8588  006D48                     	endif
  8589  006D48  0008               	tblrd		*
  8590  006D4A  50F5               	movf	tablat,w,c
  8591  006D4C  EC58  F023         	call	_set_led
  8592                           
  8593                           ;newmain.c: 898: else
  8594                           ;newmain.c: 899: break;
  8595  006D50  4A5F               	infsnz	animation3@j,f,c
  8596  006D52  2A60               	incf	animation3@j+1,f,c
  8597  006D54  D7B8               	goto	l4082
  8598  006D56                     u5020:
  8599  006D56                     l4094:
  8600                           
  8601                           ;newmain.c: 900: }
  8602                           ;newmain.c: 901: write_display();
  8603  006D56  EC0A  F024         	call	_write_display	;wreg free
  8604                           
  8605                           ;newmain.c: 902: _delay((unsigned long)((10)*(4000000/4000.0)));
  8606  006D5A  0E0D               	movlw	13
  8607  006D5C  6E58               	movwf	??_animation3& (0+255),c
  8608  006D5E  0EFC               	movlw	252
  8609  006D60                     u7087:
  8610  006D60  2EE8               	decfsz	wreg,f,c
  8611  006D62  D7FE               	bra	u7087
  8612  006D64  2E58               	decfsz	??_animation3& (0+255),f,c
  8613  006D66  D7FC               	bra	u7087
  8614                           
  8615                           ;newmain.c: 903: for (j = 0; j < 26; j++) {
  8616  006D68  0E00               	movlw	0
  8617  006D6A  6E60               	movwf	animation3@j+1,c
  8618  006D6C  0E00               	movlw	0
  8619  006D6E  6E5F               	movwf	animation3@j,c
  8620  006D70                     l4100:
  8621  006D70  BE60               	btfsc	animation3@j+1,7,c
  8622  006D72  D006               	goto	l403
  8623  006D74  5060               	movf	animation3@j+1,w,c
  8624  006D76  E144               	bnz	l4112
  8625  006D78  0E1A               	movlw	26
  8626  006D7A  5C5F               	subwf	animation3@j,w,c
  8627  006D7C  B0D8               	btfsc	status,0,c
  8628  006D7E  D040               	goto	u5050
  8629  006D80                     l403:
  8630                           
  8631                           ;newmain.c: 904: if (circle[i][j] != 100)
  8632  006D80  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8633  006D84  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8634  006D88  0E00               	movlw	0
  8635  006D8A  6E46               	movwf	___wmul@multiplicand+1,c
  8636  006D8C  0E1A               	movlw	26
  8637  006D8E  6E45               	movwf	___wmul@multiplicand,c
  8638  006D90  ECF1  F021         	call	___wmul	;wreg free
  8639  006D94  0E41               	movlw	low _circle
  8640  006D96  6E58               	movwf	??_animation3& (0+255),c
  8641  006D98  0E79               	movlw	high _circle
  8642  006D9A  6E59               	movwf	(??_animation3+1)& (0+255),c
  8643  006D9C  5043               	movf	?___wmul,w,c
  8644  006D9E  2658               	addwf	??_animation3,f,c
  8645  006DA0  5044               	movf	?___wmul+1,w,c
  8646  006DA2  2259               	addwfc	??_animation3+1,f,c
  8647  006DA4  505F               	movf	animation3@j,w,c
  8648  006DA6  2658               	addwf	??_animation3,f,c
  8649  006DA8  5060               	movf	animation3@j+1,w,c
  8650  006DAA  2259               	addwfc	??_animation3+1,f,c
  8651  006DAC  C058  FFF6         	movff	??_animation3,tblptrl
  8652  006DB0  C059  FFF7         	movff	??_animation3+1,tblptrh
  8653  006DB4                     	if	0	;tblptru may be non-zero
  8654  006DB4                     	endif
  8655  006DB4                     	if	0	;tblptru may be non-zero
  8656  006DB4                     	endif
  8657  006DB4  0008               	tblrd		*
  8658  006DB6  50F5               	movf	tablat,w,c
  8659  006DB8  0A64               	xorlw	100
  8660  006DBA  B4D8               	btfsc	status,2,c
  8661  006DBC  D021               	goto	u5050
  8662                           
  8663                           ;newmain.c: 905: clr_led(circle[i][j]);
  8664  006DBE  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8665  006DC2  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8666  006DC6  0E00               	movlw	0
  8667  006DC8  6E46               	movwf	___wmul@multiplicand+1,c
  8668  006DCA  0E1A               	movlw	26
  8669  006DCC  6E45               	movwf	___wmul@multiplicand,c
  8670  006DCE  ECF1  F021         	call	___wmul	;wreg free
  8671  006DD2  0E41               	movlw	low _circle
  8672  006DD4  6E58               	movwf	??_animation3& (0+255),c
  8673  006DD6  0E79               	movlw	high _circle
  8674  006DD8  6E59               	movwf	(??_animation3+1)& (0+255),c
  8675  006DDA  5043               	movf	?___wmul,w,c
  8676  006DDC  2658               	addwf	??_animation3,f,c
  8677  006DDE  5044               	movf	?___wmul+1,w,c
  8678  006DE0  2259               	addwfc	??_animation3+1,f,c
  8679  006DE2  505F               	movf	animation3@j,w,c
  8680  006DE4  2658               	addwf	??_animation3,f,c
  8681  006DE6  5060               	movf	animation3@j+1,w,c
  8682  006DE8  2259               	addwfc	??_animation3+1,f,c
  8683  006DEA  C058  FFF6         	movff	??_animation3,tblptrl
  8684  006DEE  C059  FFF7         	movff	??_animation3+1,tblptrh
  8685  006DF2                     	if	0	;tblptru may be non-zero
  8686  006DF2                     	endif
  8687  006DF2                     	if	0	;tblptru may be non-zero
  8688  006DF2                     	endif
  8689  006DF2  0008               	tblrd		*
  8690  006DF4  50F5               	movf	tablat,w,c
  8691  006DF6  ECAF  F023         	call	_clr_led
  8692                           
  8693                           ;newmain.c: 906: else
  8694                           ;newmain.c: 907: break;
  8695  006DFA  4A5F               	infsnz	animation3@j,f,c
  8696  006DFC  2A60               	incf	animation3@j+1,f,c
  8697  006DFE  D7B8               	goto	l4100
  8698  006E00                     u5050:
  8699  006E00                     l4112:
  8700                           
  8701                           ;newmain.c: 908: }
  8702                           ;newmain.c: 909: write_display();
  8703  006E00  EC0A  F024         	call	_write_display	;wreg free
  8704  006E04  4A5D               	infsnz	animation3@i,f,c
  8705  006E06  2A5E               	incf	animation3@i+1,f,c
  8706  006E08  BE5E               	btfsc	animation3@i+1,7,c
  8707  006E0A  D759               	goto	l397
  8708  006E0C  505E               	movf	animation3@i+1,w,c
  8709  006E0E  E101               	bnz	l407
  8710  006E10  D750               	goto	L15
  8711  006E12                     l407:
  8712  006E12  0012               	return		;funcret
  8713  006E14                     __end_of_animation3:
  8714                           	opt stack 0
  8715                           tblptru	equ	0xFF8
  8716                           tblptrh	equ	0xFF7
  8717                           tblptrl	equ	0xFF6
  8718                           tablat	equ	0xFF5
  8719                           prodh	equ	0xFF4
  8720                           prodl	equ	0xFF3
  8721                           postinc0	equ	0xFEE
  8722                           wreg	equ	0xFE8
  8723                           postinc1	equ	0xFE6
  8724                           fsr1h	equ	0xFE2
  8725                           fsr1l	equ	0xFE1
  8726                           indf2	equ	0xFDF
  8727                           postinc2	equ	0xFDE
  8728                           postdec2	equ	0xFDD
  8729                           fsr2h	equ	0xFDA
  8730                           fsr2l	equ	0xFD9
  8731                           status	equ	0xFD8
  8732                           
  8733 ;; *************** function _animation2 *****************
  8734 ;; Defined at:
  8735 ;;		line 723 in file "newmain.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  m               1    wreg     unsigned char 
  8738 ;;  n               1   21[COMRAM] unsigned char 
  8739 ;;  h               1   22[COMRAM] unsigned char 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  m               1   29[COMRAM] unsigned char 
  8742 ;;  j               2   36[COMRAM] int 
  8743 ;;  i               2   34[COMRAM] int 
  8744 ;;  x               2   32[COMRAM] int 
  8745 ;;  row             2   30[COMRAM] int 
  8746 ;;  col             2   27[COMRAM] int 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8756 ;;      Params:         2       0       0       0       0       0       0
  8757 ;;      Locals:        11       0       0       0       0       0       0
  8758 ;;      Temps:          4       0       0       0       0       0       0
  8759 ;;      Totals:        17       0       0       0       0       0       0
  8760 ;;Total ram usage:       17 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    4
  8763 ;; This function calls:
  8764 ;;		___wmul
  8765 ;;		_clr_led
  8766 ;;		_set_led
  8767 ;;		_write_display
  8768 ;; This function is called by:
  8769 ;;		_main
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text14
  8774  005FAC                     __ptext14:
  8775                           	opt stack 0
  8776  005FAC                     _animation2:
  8777                           	opt stack 26
  8778                           
  8779                           ;incstack = 0
  8780                           ;animation2@m stored from wreg
  8781  005FAC  6E60               	movwf	animation2@m,c
  8782                           
  8783                           ;newmain.c: 724: int i = 0, j = 0, x = 0;
  8784  005FAE  0E00               	movlw	0
  8785  005FB0  6E66               	movwf	animation2@i+1,c
  8786  005FB2  0E00               	movlw	0
  8787  005FB4  6E65               	movwf	animation2@i,c
  8788  005FB6  0E00               	movlw	0
  8789  005FB8  6E68               	movwf	animation2@j+1,c
  8790  005FBA  0E00               	movlw	0
  8791  005FBC  6E67               	movwf	animation2@j,c
  8792  005FBE  0E00               	movlw	0
  8793  005FC0  6E64               	movwf	animation2@x+1,c
  8794  005FC2  0E00               	movlw	0
  8795  005FC4  6E63               	movwf	animation2@x,c
  8796                           
  8797                           ;newmain.c: 725: int row = 0, col = n % 4;
  8798  005FC6  0E00               	movlw	0
  8799  005FC8  6E62               	movwf	animation2@row+1,c
  8800  005FCA  0E00               	movlw	0
  8801  005FCC  6E61               	movwf	animation2@row,c
  8802  005FCE  C058  F05A         	movff	animation2@n,??_animation2
  8803  005FD2  0E03               	movlw	3
  8804  005FD4  165A               	andwf	??_animation2,f,c
  8805  005FD6  505A               	movf	??_animation2,w,c
  8806  005FD8  6E5E               	movwf	animation2@col,c
  8807  005FDA  6A5F               	clrf	animation2@col+1,c
  8808                           
  8809                           ;newmain.c: 726: for (i = 0; i < 8; i++) {
  8810  005FDC  0E00               	movlw	0
  8811  005FDE  6E66               	movwf	animation2@i+1,c
  8812  005FE0  0E00               	movlw	0
  8813  005FE2  6E65               	movwf	animation2@i,c
  8814  005FE4                     l3670:
  8815  005FE4  BE66               	btfsc	animation2@i+1,7,c
  8816  005FE6  D006               	goto	l295
  8817  005FE8  5066               	movf	animation2@i+1,w,c
  8818  005FEA  E150               	bnz	l3692
  8819  005FEC  0E08               	movlw	8
  8820  005FEE  5C65               	subwf	animation2@i,w,c
  8821  005FF0  B0D8               	btfsc	status,0,c
  8822  005FF2  D04C               	goto	u4260
  8823  005FF4                     l295:
  8824                           
  8825                           ;newmain.c: 727: for (j = 0; j < 8; j++) {
  8826  005FF4  0E00               	movlw	0
  8827  005FF6  6E68               	movwf	animation2@j+1,c
  8828  005FF8  0E00               	movlw	0
  8829  005FFA  6E67               	movwf	animation2@j,c
  8830  005FFC                     l3676:
  8831  005FFC  BE68               	btfsc	animation2@j+1,7,c
  8832  005FFE  D006               	goto	l297
  8833  006000  5068               	movf	animation2@j+1,w,c
  8834  006002  E141               	bnz	l3688
  8835  006004  0E08               	movlw	8
  8836  006006  5C67               	subwf	animation2@j,w,c
  8837  006008  B0D8               	btfsc	status,0,c
  8838  00600A  D03D               	goto	u4250
  8839  00600C                     l297:
  8840                           
  8841                           ;newmain.c: 728: if (h == Buttons[i][j]) {
  8842  00600C  C065  F05A         	movff	animation2@i,??_animation2
  8843  006010  C066  F05B         	movff	animation2@i+1,??_animation2+1
  8844  006014  90D8               	bcf	status,0,c
  8845  006016  365A               	rlcf	??_animation2,f,c
  8846  006018  365B               	rlcf	??_animation2+1,f,c
  8847  00601A  90D8               	bcf	status,0,c
  8848  00601C  365A               	rlcf	??_animation2,f,c
  8849  00601E  365B               	rlcf	??_animation2+1,f,c
  8850  006020  90D8               	bcf	status,0,c
  8851  006022  365A               	rlcf	??_animation2,f,c
  8852  006024  365B               	rlcf	??_animation2+1,f,c
  8853  006026  0EF9               	movlw	low _Buttons
  8854  006028  6E5C               	movwf	(??_animation2+2)& (0+255),c
  8855  00602A  0E7B               	movlw	high _Buttons
  8856  00602C  6E5D               	movwf	(??_animation2+3)& (0+255),c
  8857  00602E  505A               	movf	??_animation2,w,c
  8858  006030  265C               	addwf	??_animation2+2,f,c
  8859  006032  505B               	movf	??_animation2+1,w,c
  8860  006034  225D               	addwfc	??_animation2+3,f,c
  8861  006036  5067               	movf	animation2@j,w,c
  8862  006038  265C               	addwf	??_animation2+2,f,c
  8863  00603A  5068               	movf	animation2@j+1,w,c
  8864  00603C  225D               	addwfc	??_animation2+3,f,c
  8865  00603E  C05C  FFF6         	movff	??_animation2+2,tblptrl
  8866  006042  C05D  FFF7         	movff	??_animation2+3,tblptrh
  8867  006046                     	if	0	;tblptru may be non-zero
  8868  006046                     	endif
  8869  006046                     	if	0	;tblptru may be non-zero
  8870  006046                     	endif
  8871  006046  0008               	tblrd		*
  8872  006048  50F5               	movf	tablat,w,c
  8873  00604A  1859               	xorwf	animation2@h,w,c
  8874  00604C  A4D8               	btfss	status,2,c
  8875  00604E  D018               	goto	l299
  8876                           
  8877                           ;newmain.c: 729: row = Buttons[i][0];
  8878  006050  C065  F05A         	movff	animation2@i,??_animation2
  8879  006054  C066  F05B         	movff	animation2@i+1,??_animation2+1
  8880  006058  90D8               	bcf	status,0,c
  8881  00605A  365A               	rlcf	??_animation2,f,c
  8882  00605C  365B               	rlcf	??_animation2+1,f,c
  8883  00605E  90D8               	bcf	status,0,c
  8884  006060  365A               	rlcf	??_animation2,f,c
  8885  006062  365B               	rlcf	??_animation2+1,f,c
  8886  006064  90D8               	bcf	status,0,c
  8887  006066  365A               	rlcf	??_animation2,f,c
  8888  006068  365B               	rlcf	??_animation2+1,f,c
  8889  00606A  0EF9               	movlw	low _Buttons
  8890  00606C  245A               	addwf	??_animation2,w,c
  8891  00606E  6EF6               	movwf	tblptrl,c
  8892  006070  0E7B               	movlw	high _Buttons
  8893  006072  205B               	addwfc	??_animation2+1,w,c
  8894  006074  6EF7               	movwf	tblptrh,c
  8895  006076                     	if	0	;There are less than 3 active tblptr bytes
  8896  006076                     	endif
  8897  006076  0008               	tblrd		*
  8898  006078  50F5               	movf	tablat,w,c
  8899  00607A  6E61               	movwf	animation2@row,c
  8900  00607C  6A62               	clrf	animation2@row+1,c
  8901                           
  8902                           ;newmain.c: 730: break;
  8903  00607E  D003               	goto	u4250
  8904  006080                     l299:
  8905  006080  4A67               	infsnz	animation2@j,f,c
  8906  006082  2A68               	incf	animation2@j+1,f,c
  8907  006084  D7BB               	goto	l3676
  8908  006086                     u4250:
  8909  006086                     l3688:
  8910  006086  4A65               	infsnz	animation2@i,f,c
  8911  006088  2A66               	incf	animation2@i+1,f,c
  8912  00608A  D7AC               	goto	l3670
  8913  00608C                     u4260:
  8914  00608C                     l3692:
  8915                           
  8916                           ;newmain.c: 731: }
  8917                           ;newmain.c: 732: }
  8918                           ;newmain.c: 733: }
  8919                           ;newmain.c: 735: if (m == 0) {
  8920  00608C  5060               	movf	animation2@m,w,c
  8921  00608E  A4D8               	btfss	status,2,c
  8922  006090  D0C5               	goto	l300
  8923                           
  8924                           ;newmain.c: 736: for (i = col; i < 8; i++) {
  8925  006092  C05E  F065         	movff	animation2@col,animation2@i
  8926  006096  C05F  F066         	movff	animation2@col+1,animation2@i+1
  8927  00609A  BE66               	btfsc	animation2@i+1,7,c
  8928  00609C  D008               	goto	l301
  8929  00609E  5066               	movf	animation2@i+1,w,c
  8930  0060A0  E105               	bnz	u4280
  8931  0060A2  0E08               	movlw	8
  8932  0060A4  5C65               	subwf	animation2@i,w,c
  8933  0060A6  B0D8               	btfsc	status,0,c
  8934  0060A8  0012               	return	
  8935  0060AA  D001               	goto	l301
  8936  0060AC                     u4280:
  8937  0060AC  0012               	return	
  8938  0060AE                     l301:
  8939                           
  8940                           ;newmain.c: 737: for (j = 0; j < 3; j++){
  8941  0060AE  0E00               	movlw	0
  8942  0060B0  6E68               	movwf	animation2@j+1,c
  8943  0060B2  0E00               	movlw	0
  8944  0060B4  6E67               	movwf	animation2@j,c
  8945  0060B6                     l3702:
  8946  0060B6  BE68               	btfsc	animation2@j+1,7,c
  8947  0060B8  D006               	goto	l303
  8948  0060BA  5068               	movf	animation2@j+1,w,c
  8949  0060BC  E14A               	bnz	l3716
  8950  0060BE  0E03               	movlw	3
  8951  0060C0  5C67               	subwf	animation2@j,w,c
  8952  0060C2  B0D8               	btfsc	status,0,c
  8953  0060C4  D046               	goto	u4310
  8954  0060C6                     l303:
  8955                           
  8956                           ;newmain.c: 738: if (horizental_flash[i][j] != 100) {
  8957  0060C6  C065  F043         	movff	animation2@i,___wmul@multiplier
  8958  0060CA  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8959  0060CE  0E00               	movlw	0
  8960  0060D0  6E46               	movwf	___wmul@multiplicand+1,c
  8961  0060D2  0E03               	movlw	3
  8962  0060D4  6E45               	movwf	___wmul@multiplicand,c
  8963  0060D6  ECF1  F021         	call	___wmul	;wreg free
  8964  0060DA  0EB3               	movlw	low _horizental_flash
  8965  0060DC  6E5A               	movwf	??_animation2& (0+255),c
  8966  0060DE  0E7C               	movlw	high _horizental_flash
  8967  0060E0  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8968  0060E2  5043               	movf	?___wmul,w,c
  8969  0060E4  265A               	addwf	??_animation2,f,c
  8970  0060E6  5044               	movf	?___wmul+1,w,c
  8971  0060E8  225B               	addwfc	??_animation2+1,f,c
  8972  0060EA  5067               	movf	animation2@j,w,c
  8973  0060EC  265A               	addwf	??_animation2,f,c
  8974  0060EE  5068               	movf	animation2@j+1,w,c
  8975  0060F0  225B               	addwfc	??_animation2+1,f,c
  8976  0060F2  C05A  FFF6         	movff	??_animation2,tblptrl
  8977  0060F6  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8978  0060FA                     	if	0	;tblptru may be non-zero
  8979  0060FA                     	endif
  8980  0060FA                     	if	0	;tblptru may be non-zero
  8981  0060FA                     	endif
  8982  0060FA  0008               	tblrd		*
  8983  0060FC  50F5               	movf	tablat,w,c
  8984  0060FE  0A64               	xorlw	100
  8985  006100  B4D8               	btfsc	status,2,c
  8986  006102  D027               	goto	u4310
  8987                           
  8988                           ;newmain.c: 739: x = horizental_flash[i][j] + row;
  8989  006104  C065  F043         	movff	animation2@i,___wmul@multiplier
  8990  006108  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8991  00610C  0E00               	movlw	0
  8992  00610E  6E46               	movwf	___wmul@multiplicand+1,c
  8993  006110  0E03               	movlw	3
  8994  006112  6E45               	movwf	___wmul@multiplicand,c
  8995  006114  ECF1  F021         	call	___wmul	;wreg free
  8996  006118  0EB3               	movlw	low _horizental_flash
  8997  00611A  6E5A               	movwf	??_animation2& (0+255),c
  8998  00611C  0E7C               	movlw	high _horizental_flash
  8999  00611E  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9000  006120  5043               	movf	?___wmul,w,c
  9001  006122  265A               	addwf	??_animation2,f,c
  9002  006124  5044               	movf	?___wmul+1,w,c
  9003  006126  225B               	addwfc	??_animation2+1,f,c
  9004  006128  5067               	movf	animation2@j,w,c
  9005  00612A  265A               	addwf	??_animation2,f,c
  9006  00612C  5068               	movf	animation2@j+1,w,c
  9007  00612E  225B               	addwfc	??_animation2+1,f,c
  9008  006130  C05A  FFF6         	movff	??_animation2,tblptrl
  9009  006134  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9010  006138                     	if	0	;tblptru may be non-zero
  9011  006138                     	endif
  9012  006138                     	if	0	;tblptru may be non-zero
  9013  006138                     	endif
  9014  006138  0008               	tblrd		*
  9015  00613A  50F5               	movf	tablat,w,c
  9016  00613C  2461               	addwf	animation2@row,w,c
  9017  00613E  6E63               	movwf	animation2@x,c
  9018  006140  0E00               	movlw	0
  9019  006142  2062               	addwfc	animation2@row+1,w,c
  9020  006144  6E64               	movwf	animation2@x+1,c
  9021                           
  9022                           ;newmain.c: 740: set_led(x);
  9023  006146  5063               	movf	animation2@x,w,c
  9024  006148  EC58  F023         	call	_set_led
  9025                           
  9026                           ;newmain.c: 742: break;
  9027                           
  9028                           ;newmain.c: 741: }else
  9029  00614C  4A67               	infsnz	animation2@j,f,c
  9030  00614E  2A68               	incf	animation2@j+1,f,c
  9031  006150  D7B2               	goto	l3702
  9032  006152                     u4310:
  9033  006152                     l3716:
  9034                           
  9035                           ;newmain.c: 743: }
  9036                           ;newmain.c: 744: write_display();
  9037  006152  EC0A  F024         	call	_write_display	;wreg free
  9038                           
  9039                           ;newmain.c: 745: _delay((unsigned long)((10)*(4000000/4000.0)));
  9040  006156  0E0D               	movlw	13
  9041  006158  6E5A               	movwf	??_animation2& (0+255),c
  9042  00615A  0EFC               	movlw	252
  9043  00615C                     u7097:
  9044  00615C  2EE8               	decfsz	wreg,f,c
  9045  00615E  D7FE               	bra	u7097
  9046  006160  2E5A               	decfsz	??_animation2& (0+255),f,c
  9047  006162  D7FC               	bra	u7097
  9048                           
  9049                           ;newmain.c: 746: for (j = 0; j < 3; j++){
  9050  006164  0E00               	movlw	0
  9051  006166  6E68               	movwf	animation2@j+1,c
  9052  006168  0E00               	movlw	0
  9053  00616A  6E67               	movwf	animation2@j,c
  9054  00616C                     l3722:
  9055  00616C  BE68               	btfsc	animation2@j+1,7,c
  9056  00616E  D006               	goto	l307
  9057  006170  5068               	movf	animation2@j+1,w,c
  9058  006172  E14A               	bnz	l3736
  9059  006174  0E03               	movlw	3
  9060  006176  5C67               	subwf	animation2@j,w,c
  9061  006178  B0D8               	btfsc	status,0,c
  9062  00617A  D046               	goto	u4340
  9063  00617C                     l307:
  9064                           
  9065                           ;newmain.c: 747: if (horizental_flash[i][j] != 100) {
  9066  00617C  C065  F043         	movff	animation2@i,___wmul@multiplier
  9067  006180  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9068  006184  0E00               	movlw	0
  9069  006186  6E46               	movwf	___wmul@multiplicand+1,c
  9070  006188  0E03               	movlw	3
  9071  00618A  6E45               	movwf	___wmul@multiplicand,c
  9072  00618C  ECF1  F021         	call	___wmul	;wreg free
  9073  006190  0EB3               	movlw	low _horizental_flash
  9074  006192  6E5A               	movwf	??_animation2& (0+255),c
  9075  006194  0E7C               	movlw	high _horizental_flash
  9076  006196  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9077  006198  5043               	movf	?___wmul,w,c
  9078  00619A  265A               	addwf	??_animation2,f,c
  9079  00619C  5044               	movf	?___wmul+1,w,c
  9080  00619E  225B               	addwfc	??_animation2+1,f,c
  9081  0061A0  5067               	movf	animation2@j,w,c
  9082  0061A2  265A               	addwf	??_animation2,f,c
  9083  0061A4  5068               	movf	animation2@j+1,w,c
  9084  0061A6  225B               	addwfc	??_animation2+1,f,c
  9085  0061A8  C05A  FFF6         	movff	??_animation2,tblptrl
  9086  0061AC  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9087  0061B0                     	if	0	;tblptru may be non-zero
  9088  0061B0                     	endif
  9089  0061B0                     	if	0	;tblptru may be non-zero
  9090  0061B0                     	endif
  9091  0061B0  0008               	tblrd		*
  9092  0061B2  50F5               	movf	tablat,w,c
  9093  0061B4  0A64               	xorlw	100
  9094  0061B6  B4D8               	btfsc	status,2,c
  9095  0061B8  D027               	goto	u4340
  9096                           
  9097                           ;newmain.c: 748: x = horizental_flash[i][j] + row;
  9098  0061BA  C065  F043         	movff	animation2@i,___wmul@multiplier
  9099  0061BE  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9100  0061C2  0E00               	movlw	0
  9101  0061C4  6E46               	movwf	___wmul@multiplicand+1,c
  9102  0061C6  0E03               	movlw	3
  9103  0061C8  6E45               	movwf	___wmul@multiplicand,c
  9104  0061CA  ECF1  F021         	call	___wmul	;wreg free
  9105  0061CE  0EB3               	movlw	low _horizental_flash
  9106  0061D0  6E5A               	movwf	??_animation2& (0+255),c
  9107  0061D2  0E7C               	movlw	high _horizental_flash
  9108  0061D4  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9109  0061D6  5043               	movf	?___wmul,w,c
  9110  0061D8  265A               	addwf	??_animation2,f,c
  9111  0061DA  5044               	movf	?___wmul+1,w,c
  9112  0061DC  225B               	addwfc	??_animation2+1,f,c
  9113  0061DE  5067               	movf	animation2@j,w,c
  9114  0061E0  265A               	addwf	??_animation2,f,c
  9115  0061E2  5068               	movf	animation2@j+1,w,c
  9116  0061E4  225B               	addwfc	??_animation2+1,f,c
  9117  0061E6  C05A  FFF6         	movff	??_animation2,tblptrl
  9118  0061EA  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9119  0061EE                     	if	0	;tblptru may be non-zero
  9120  0061EE                     	endif
  9121  0061EE                     	if	0	;tblptru may be non-zero
  9122  0061EE                     	endif
  9123  0061EE  0008               	tblrd		*
  9124  0061F0  50F5               	movf	tablat,w,c
  9125  0061F2  2461               	addwf	animation2@row,w,c
  9126  0061F4  6E63               	movwf	animation2@x,c
  9127  0061F6  0E00               	movlw	0
  9128  0061F8  2062               	addwfc	animation2@row+1,w,c
  9129  0061FA  6E64               	movwf	animation2@x+1,c
  9130                           
  9131                           ;newmain.c: 749: clr_led(x);
  9132  0061FC  5063               	movf	animation2@x,w,c
  9133  0061FE  ECAF  F023         	call	_clr_led
  9134                           
  9135                           ;newmain.c: 751: break;
  9136                           
  9137                           ;newmain.c: 750: }else
  9138  006202  4A67               	infsnz	animation2@j,f,c
  9139  006204  2A68               	incf	animation2@j+1,f,c
  9140  006206  D7B2               	goto	l3722
  9141  006208                     u4340:
  9142  006208                     l3736:
  9143                           
  9144                           ;newmain.c: 752: }
  9145                           ;newmain.c: 753: write_display();
  9146  006208  EC0A  F024         	call	_write_display	;wreg free
  9147  00620C  4A65               	infsnz	animation2@i,f,c
  9148  00620E  2A66               	incf	animation2@i+1,f,c
  9149  006210  BE66               	btfsc	animation2@i+1,7,c
  9150  006212  D74D               	goto	l301
  9151  006214  5066               	movf	animation2@i+1,w,c
  9152  006216  E101               	bnz	u4350
  9153  006218  D744               	goto	L16
  9154  00621A                     u4350:
  9155                           
  9156                           ;newmain.c: 754: }
  9157                           ;newmain.c: 755: } else if (m == 1) {
  9158  00621A  0012               	return	
  9159  00621C                     l300:
  9160  00621C  0460               	decf	animation2@m,w,c
  9161  00621E  A4D8               	btfss	status,2,c
  9162  006220  D0BB               	goto	l312
  9163                           
  9164                           ;newmain.c: 756: for (i = col + 2; i >= 0; i--) {
  9165  006222  0E02               	movlw	2
  9166  006224  245E               	addwf	animation2@col,w,c
  9167  006226  6E65               	movwf	animation2@i,c
  9168  006228  0E00               	movlw	0
  9169  00622A  205F               	addwfc	animation2@col+1,w,c
  9170  00622C  6E66               	movwf	animation2@i+1,c
  9171  00622E  BE66               	btfsc	animation2@i+1,7,c
  9172  006230  0012               	return	
  9173                           
  9174                           ;newmain.c: 757: for (j = 0; j < 3; j++) {
  9175  006232  0E00               	movlw	0
  9176  006234  6E68               	movwf	animation2@j+1,c
  9177  006236  0E00               	movlw	0
  9178  006238  6E67               	movwf	animation2@j,c
  9179  00623A                     l3750:
  9180  00623A  BE68               	btfsc	animation2@j+1,7,c
  9181  00623C  D006               	goto	l315
  9182  00623E  5068               	movf	animation2@j+1,w,c
  9183  006240  E14A               	bnz	l3764
  9184  006242  0E03               	movlw	3
  9185  006244  5C67               	subwf	animation2@j,w,c
  9186  006246  B0D8               	btfsc	status,0,c
  9187  006248  D046               	goto	u4400
  9188  00624A                     l315:
  9189                           
  9190                           ;newmain.c: 758: if (horizental_flash[i][j] != 100) {
  9191  00624A  C065  F043         	movff	animation2@i,___wmul@multiplier
  9192  00624E  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9193  006252  0E00               	movlw	0
  9194  006254  6E46               	movwf	___wmul@multiplicand+1,c
  9195  006256  0E03               	movlw	3
  9196  006258  6E45               	movwf	___wmul@multiplicand,c
  9197  00625A  ECF1  F021         	call	___wmul	;wreg free
  9198  00625E  0EB3               	movlw	low _horizental_flash
  9199  006260  6E5A               	movwf	??_animation2& (0+255),c
  9200  006262  0E7C               	movlw	high _horizental_flash
  9201  006264  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9202  006266  5043               	movf	?___wmul,w,c
  9203  006268  265A               	addwf	??_animation2,f,c
  9204  00626A  5044               	movf	?___wmul+1,w,c
  9205  00626C  225B               	addwfc	??_animation2+1,f,c
  9206  00626E  5067               	movf	animation2@j,w,c
  9207  006270  265A               	addwf	??_animation2,f,c
  9208  006272  5068               	movf	animation2@j+1,w,c
  9209  006274  225B               	addwfc	??_animation2+1,f,c
  9210  006276  C05A  FFF6         	movff	??_animation2,tblptrl
  9211  00627A  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9212  00627E                     	if	0	;tblptru may be non-zero
  9213  00627E                     	endif
  9214  00627E                     	if	0	;tblptru may be non-zero
  9215  00627E                     	endif
  9216  00627E  0008               	tblrd		*
  9217  006280  50F5               	movf	tablat,w,c
  9218  006282  0A64               	xorlw	100
  9219  006284  B4D8               	btfsc	status,2,c
  9220  006286  D027               	goto	u4400
  9221                           
  9222                           ;newmain.c: 759: x = horizental_flash[i][j] + row;
  9223  006288  C065  F043         	movff	animation2@i,___wmul@multiplier
  9224  00628C  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9225  006290  0E00               	movlw	0
  9226  006292  6E46               	movwf	___wmul@multiplicand+1,c
  9227  006294  0E03               	movlw	3
  9228  006296  6E45               	movwf	___wmul@multiplicand,c
  9229  006298  ECF1  F021         	call	___wmul	;wreg free
  9230  00629C  0EB3               	movlw	low _horizental_flash
  9231  00629E  6E5A               	movwf	??_animation2& (0+255),c
  9232  0062A0  0E7C               	movlw	high _horizental_flash
  9233  0062A2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9234  0062A4  5043               	movf	?___wmul,w,c
  9235  0062A6  265A               	addwf	??_animation2,f,c
  9236  0062A8  5044               	movf	?___wmul+1,w,c
  9237  0062AA  225B               	addwfc	??_animation2+1,f,c
  9238  0062AC  5067               	movf	animation2@j,w,c
  9239  0062AE  265A               	addwf	??_animation2,f,c
  9240  0062B0  5068               	movf	animation2@j+1,w,c
  9241  0062B2  225B               	addwfc	??_animation2+1,f,c
  9242  0062B4  C05A  FFF6         	movff	??_animation2,tblptrl
  9243  0062B8  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9244  0062BC                     	if	0	;tblptru may be non-zero
  9245  0062BC                     	endif
  9246  0062BC                     	if	0	;tblptru may be non-zero
  9247  0062BC                     	endif
  9248  0062BC  0008               	tblrd		*
  9249  0062BE  50F5               	movf	tablat,w,c
  9250  0062C0  2461               	addwf	animation2@row,w,c
  9251  0062C2  6E63               	movwf	animation2@x,c
  9252  0062C4  0E00               	movlw	0
  9253  0062C6  2062               	addwfc	animation2@row+1,w,c
  9254  0062C8  6E64               	movwf	animation2@x+1,c
  9255                           
  9256                           ;newmain.c: 760: set_led(x);
  9257  0062CA  5063               	movf	animation2@x,w,c
  9258  0062CC  EC58  F023         	call	_set_led
  9259                           
  9260                           ;newmain.c: 762: break;
  9261                           
  9262                           ;newmain.c: 761: }else
  9263  0062D0  4A67               	infsnz	animation2@j,f,c
  9264  0062D2  2A68               	incf	animation2@j+1,f,c
  9265  0062D4  D7B2               	goto	l3750
  9266  0062D6                     u4400:
  9267  0062D6                     l3764:
  9268                           
  9269                           ;newmain.c: 763: }
  9270                           ;newmain.c: 764: write_display();
  9271  0062D6  EC0A  F024         	call	_write_display	;wreg free
  9272                           
  9273                           ;newmain.c: 765: _delay((unsigned long)((10)*(4000000/4000.0)));
  9274  0062DA  0E0D               	movlw	13
  9275  0062DC  6E5A               	movwf	??_animation2& (0+255),c
  9276  0062DE  0EFC               	movlw	252
  9277  0062E0                     u7107:
  9278  0062E0  2EE8               	decfsz	wreg,f,c
  9279  0062E2  D7FE               	bra	u7107
  9280  0062E4  2E5A               	decfsz	??_animation2& (0+255),f,c
  9281  0062E6  D7FC               	bra	u7107
  9282                           
  9283                           ;newmain.c: 766: for (j = 0; j < 3; j++){
  9284  0062E8  0E00               	movlw	0
  9285  0062EA  6E68               	movwf	animation2@j+1,c
  9286  0062EC  0E00               	movlw	0
  9287  0062EE  6E67               	movwf	animation2@j,c
  9288  0062F0                     l3770:
  9289  0062F0  BE68               	btfsc	animation2@j+1,7,c
  9290  0062F2  D006               	goto	l319
  9291  0062F4  5068               	movf	animation2@j+1,w,c
  9292  0062F6  E14A               	bnz	l3784
  9293  0062F8  0E03               	movlw	3
  9294  0062FA  5C67               	subwf	animation2@j,w,c
  9295  0062FC  B0D8               	btfsc	status,0,c
  9296  0062FE  D046               	goto	u4430
  9297  006300                     l319:
  9298                           
  9299                           ;newmain.c: 767: if (horizental_flash[i][j] != 100) {
  9300  006300  C065  F043         	movff	animation2@i,___wmul@multiplier
  9301  006304  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9302  006308  0E00               	movlw	0
  9303  00630A  6E46               	movwf	___wmul@multiplicand+1,c
  9304  00630C  0E03               	movlw	3
  9305  00630E  6E45               	movwf	___wmul@multiplicand,c
  9306  006310  ECF1  F021         	call	___wmul	;wreg free
  9307  006314  0EB3               	movlw	low _horizental_flash
  9308  006316  6E5A               	movwf	??_animation2& (0+255),c
  9309  006318  0E7C               	movlw	high _horizental_flash
  9310  00631A  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9311  00631C  5043               	movf	?___wmul,w,c
  9312  00631E  265A               	addwf	??_animation2,f,c
  9313  006320  5044               	movf	?___wmul+1,w,c
  9314  006322  225B               	addwfc	??_animation2+1,f,c
  9315  006324  5067               	movf	animation2@j,w,c
  9316  006326  265A               	addwf	??_animation2,f,c
  9317  006328  5068               	movf	animation2@j+1,w,c
  9318  00632A  225B               	addwfc	??_animation2+1,f,c
  9319  00632C  C05A  FFF6         	movff	??_animation2,tblptrl
  9320  006330  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9321  006334                     	if	0	;tblptru may be non-zero
  9322  006334                     	endif
  9323  006334                     	if	0	;tblptru may be non-zero
  9324  006334                     	endif
  9325  006334  0008               	tblrd		*
  9326  006336  50F5               	movf	tablat,w,c
  9327  006338  0A64               	xorlw	100
  9328  00633A  B4D8               	btfsc	status,2,c
  9329  00633C  D027               	goto	u4430
  9330                           
  9331                           ;newmain.c: 768: x = horizental_flash[i][j] + row;
  9332  00633E  C065  F043         	movff	animation2@i,___wmul@multiplier
  9333  006342  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9334  006346  0E00               	movlw	0
  9335  006348  6E46               	movwf	___wmul@multiplicand+1,c
  9336  00634A  0E03               	movlw	3
  9337  00634C  6E45               	movwf	___wmul@multiplicand,c
  9338  00634E  ECF1  F021         	call	___wmul	;wreg free
  9339  006352  0EB3               	movlw	low _horizental_flash
  9340  006354  6E5A               	movwf	??_animation2& (0+255),c
  9341  006356  0E7C               	movlw	high _horizental_flash
  9342  006358  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9343  00635A  5043               	movf	?___wmul,w,c
  9344  00635C  265A               	addwf	??_animation2,f,c
  9345  00635E  5044               	movf	?___wmul+1,w,c
  9346  006360  225B               	addwfc	??_animation2+1,f,c
  9347  006362  5067               	movf	animation2@j,w,c
  9348  006364  265A               	addwf	??_animation2,f,c
  9349  006366  5068               	movf	animation2@j+1,w,c
  9350  006368  225B               	addwfc	??_animation2+1,f,c
  9351  00636A  C05A  FFF6         	movff	??_animation2,tblptrl
  9352  00636E  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9353  006372                     	if	0	;tblptru may be non-zero
  9354  006372                     	endif
  9355  006372                     	if	0	;tblptru may be non-zero
  9356  006372                     	endif
  9357  006372  0008               	tblrd		*
  9358  006374  50F5               	movf	tablat,w,c
  9359  006376  2461               	addwf	animation2@row,w,c
  9360  006378  6E63               	movwf	animation2@x,c
  9361  00637A  0E00               	movlw	0
  9362  00637C  2062               	addwfc	animation2@row+1,w,c
  9363  00637E  6E64               	movwf	animation2@x+1,c
  9364                           
  9365                           ;newmain.c: 769: clr_led(x);
  9366  006380  5063               	movf	animation2@x,w,c
  9367  006382  ECAF  F023         	call	_clr_led
  9368                           
  9369                           ;newmain.c: 771: break;
  9370                           
  9371                           ;newmain.c: 770: }else
  9372  006386  4A67               	infsnz	animation2@j,f,c
  9373  006388  2A68               	incf	animation2@j+1,f,c
  9374  00638A  D7B2               	goto	l3770
  9375  00638C                     u4430:
  9376  00638C                     l3784:
  9377                           
  9378                           ;newmain.c: 772: }
  9379                           ;newmain.c: 773: write_display();
  9380  00638C  EC0A  F024         	call	_write_display	;wreg free
  9381  006390  0665               	decf	animation2@i,f,c
  9382  006392  A0D8               	btfss	status,0,c
  9383  006394  0666               	decf	animation2@i+1,f,c
  9384  006396  D74B               	goto	L17
  9385  006398                     l312:
  9386  006398  0E02               	movlw	2
  9387  00639A  1860               	xorwf	animation2@m,w,c
  9388  00639C  A4D8               	btfss	status,2,c
  9389  00639E  D0C5               	goto	l324
  9390                           
  9391                           ;newmain.c: 776: for (i = col; i < 7; i++) {
  9392  0063A0  C05E  F065         	movff	animation2@col,animation2@i
  9393  0063A4  C05F  F066         	movff	animation2@col+1,animation2@i+1
  9394  0063A8  BE66               	btfsc	animation2@i+1,7,c
  9395  0063AA  D008               	goto	l325
  9396  0063AC  5066               	movf	animation2@i+1,w,c
  9397  0063AE  E105               	bnz	u4460
  9398  0063B0  0E07               	movlw	7
  9399  0063B2  5C65               	subwf	animation2@i,w,c
  9400  0063B4  B0D8               	btfsc	status,0,c
  9401  0063B6  0012               	return	
  9402  0063B8  D001               	goto	l325
  9403  0063BA                     u4460:
  9404  0063BA  0012               	return	
  9405  0063BC                     l325:
  9406                           
  9407                           ;newmain.c: 777: for (j = 0; j < 3; j++){
  9408  0063BC  0E00               	movlw	0
  9409  0063BE  6E68               	movwf	animation2@j+1,c
  9410  0063C0  0E00               	movlw	0
  9411  0063C2  6E67               	movwf	animation2@j,c
  9412  0063C4                     l3800:
  9413  0063C4  BE68               	btfsc	animation2@j+1,7,c
  9414  0063C6  D006               	goto	l327
  9415  0063C8  5068               	movf	animation2@j+1,w,c
  9416  0063CA  E14A               	bnz	l3814
  9417  0063CC  0E03               	movlw	3
  9418  0063CE  5C67               	subwf	animation2@j,w,c
  9419  0063D0  B0D8               	btfsc	status,0,c
  9420  0063D2  D046               	goto	u4490
  9421  0063D4                     l327:
  9422                           
  9423                           ;newmain.c: 778: if (horizental_flash[i][j] != 100) {
  9424  0063D4  C065  F043         	movff	animation2@i,___wmul@multiplier
  9425  0063D8  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9426  0063DC  0E00               	movlw	0
  9427  0063DE  6E46               	movwf	___wmul@multiplicand+1,c
  9428  0063E0  0E03               	movlw	3
  9429  0063E2  6E45               	movwf	___wmul@multiplicand,c
  9430  0063E4  ECF1  F021         	call	___wmul	;wreg free
  9431  0063E8  0EB3               	movlw	low _horizental_flash
  9432  0063EA  6E5A               	movwf	??_animation2& (0+255),c
  9433  0063EC  0E7C               	movlw	high _horizental_flash
  9434  0063EE  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9435  0063F0  5043               	movf	?___wmul,w,c
  9436  0063F2  265A               	addwf	??_animation2,f,c
  9437  0063F4  5044               	movf	?___wmul+1,w,c
  9438  0063F6  225B               	addwfc	??_animation2+1,f,c
  9439  0063F8  5067               	movf	animation2@j,w,c
  9440  0063FA  265A               	addwf	??_animation2,f,c
  9441  0063FC  5068               	movf	animation2@j+1,w,c
  9442  0063FE  225B               	addwfc	??_animation2+1,f,c
  9443  006400  C05A  FFF6         	movff	??_animation2,tblptrl
  9444  006404  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9445  006408                     	if	0	;tblptru may be non-zero
  9446  006408                     	endif
  9447  006408                     	if	0	;tblptru may be non-zero
  9448  006408                     	endif
  9449  006408  0008               	tblrd		*
  9450  00640A  50F5               	movf	tablat,w,c
  9451  00640C  0A64               	xorlw	100
  9452  00640E  B4D8               	btfsc	status,2,c
  9453  006410  D027               	goto	u4490
  9454                           
  9455                           ;newmain.c: 779: x = horizental_flash[i][j] + row;
  9456  006412  C065  F043         	movff	animation2@i,___wmul@multiplier
  9457  006416  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9458  00641A  0E00               	movlw	0
  9459  00641C  6E46               	movwf	___wmul@multiplicand+1,c
  9460  00641E  0E03               	movlw	3
  9461  006420  6E45               	movwf	___wmul@multiplicand,c
  9462  006422  ECF1  F021         	call	___wmul	;wreg free
  9463  006426  0EB3               	movlw	low _horizental_flash
  9464  006428  6E5A               	movwf	??_animation2& (0+255),c
  9465  00642A  0E7C               	movlw	high _horizental_flash
  9466  00642C  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9467  00642E  5043               	movf	?___wmul,w,c
  9468  006430  265A               	addwf	??_animation2,f,c
  9469  006432  5044               	movf	?___wmul+1,w,c
  9470  006434  225B               	addwfc	??_animation2+1,f,c
  9471  006436  5067               	movf	animation2@j,w,c
  9472  006438  265A               	addwf	??_animation2,f,c
  9473  00643A  5068               	movf	animation2@j+1,w,c
  9474  00643C  225B               	addwfc	??_animation2+1,f,c
  9475  00643E  C05A  FFF6         	movff	??_animation2,tblptrl
  9476  006442  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9477  006446                     	if	0	;tblptru may be non-zero
  9478  006446                     	endif
  9479  006446                     	if	0	;tblptru may be non-zero
  9480  006446                     	endif
  9481  006446  0008               	tblrd		*
  9482  006448  50F5               	movf	tablat,w,c
  9483  00644A  2461               	addwf	animation2@row,w,c
  9484  00644C  6E63               	movwf	animation2@x,c
  9485  00644E  0E00               	movlw	0
  9486  006450  2062               	addwfc	animation2@row+1,w,c
  9487  006452  6E64               	movwf	animation2@x+1,c
  9488                           
  9489                           ;newmain.c: 780: set_led(x);
  9490  006454  5063               	movf	animation2@x,w,c
  9491  006456  EC58  F023         	call	_set_led
  9492                           
  9493                           ;newmain.c: 782: break;
  9494                           
  9495                           ;newmain.c: 781: }else
  9496  00645A  4A67               	infsnz	animation2@j,f,c
  9497  00645C  2A68               	incf	animation2@j+1,f,c
  9498  00645E  D7B2               	goto	l3800
  9499  006460                     u4490:
  9500  006460                     l3814:
  9501                           
  9502                           ;newmain.c: 783: }
  9503                           ;newmain.c: 784: write_display();
  9504  006460  EC0A  F024         	call	_write_display	;wreg free
  9505                           
  9506                           ;newmain.c: 785: _delay((unsigned long)((10)*(4000000/4000.0)));
  9507  006464  0E0D               	movlw	13
  9508  006466  6E5A               	movwf	??_animation2& (0+255),c
  9509  006468  0EFC               	movlw	252
  9510  00646A                     u7117:
  9511  00646A  2EE8               	decfsz	wreg,f,c
  9512  00646C  D7FE               	bra	u7117
  9513  00646E  2E5A               	decfsz	??_animation2& (0+255),f,c
  9514  006470  D7FC               	bra	u7117
  9515                           
  9516                           ;newmain.c: 786: for (j = 0; j < 3; j++){
  9517  006472  0E00               	movlw	0
  9518  006474  6E68               	movwf	animation2@j+1,c
  9519  006476  0E00               	movlw	0
  9520  006478  6E67               	movwf	animation2@j,c
  9521  00647A                     l3820:
  9522  00647A  BE68               	btfsc	animation2@j+1,7,c
  9523  00647C  D006               	goto	l331
  9524  00647E  5068               	movf	animation2@j+1,w,c
  9525  006480  E14A               	bnz	l3834
  9526  006482  0E03               	movlw	3
  9527  006484  5C67               	subwf	animation2@j,w,c
  9528  006486  B0D8               	btfsc	status,0,c
  9529  006488  D046               	goto	u4520
  9530  00648A                     l331:
  9531                           
  9532                           ;newmain.c: 787: if (horizental_flash[i][j] != 100) {
  9533  00648A  C065  F043         	movff	animation2@i,___wmul@multiplier
  9534  00648E  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9535  006492  0E00               	movlw	0
  9536  006494  6E46               	movwf	___wmul@multiplicand+1,c
  9537  006496  0E03               	movlw	3
  9538  006498  6E45               	movwf	___wmul@multiplicand,c
  9539  00649A  ECF1  F021         	call	___wmul	;wreg free
  9540  00649E  0EB3               	movlw	low _horizental_flash
  9541  0064A0  6E5A               	movwf	??_animation2& (0+255),c
  9542  0064A2  0E7C               	movlw	high _horizental_flash
  9543  0064A4  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9544  0064A6  5043               	movf	?___wmul,w,c
  9545  0064A8  265A               	addwf	??_animation2,f,c
  9546  0064AA  5044               	movf	?___wmul+1,w,c
  9547  0064AC  225B               	addwfc	??_animation2+1,f,c
  9548  0064AE  5067               	movf	animation2@j,w,c
  9549  0064B0  265A               	addwf	??_animation2,f,c
  9550  0064B2  5068               	movf	animation2@j+1,w,c
  9551  0064B4  225B               	addwfc	??_animation2+1,f,c
  9552  0064B6  C05A  FFF6         	movff	??_animation2,tblptrl
  9553  0064BA  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9554  0064BE                     	if	0	;tblptru may be non-zero
  9555  0064BE                     	endif
  9556  0064BE                     	if	0	;tblptru may be non-zero
  9557  0064BE                     	endif
  9558  0064BE  0008               	tblrd		*
  9559  0064C0  50F5               	movf	tablat,w,c
  9560  0064C2  0A64               	xorlw	100
  9561  0064C4  B4D8               	btfsc	status,2,c
  9562  0064C6  D027               	goto	u4520
  9563                           
  9564                           ;newmain.c: 788: x = horizental_flash[i][j] + row;
  9565  0064C8  C065  F043         	movff	animation2@i,___wmul@multiplier
  9566  0064CC  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9567  0064D0  0E00               	movlw	0
  9568  0064D2  6E46               	movwf	___wmul@multiplicand+1,c
  9569  0064D4  0E03               	movlw	3
  9570  0064D6  6E45               	movwf	___wmul@multiplicand,c
  9571  0064D8  ECF1  F021         	call	___wmul	;wreg free
  9572  0064DC  0EB3               	movlw	low _horizental_flash
  9573  0064DE  6E5A               	movwf	??_animation2& (0+255),c
  9574  0064E0  0E7C               	movlw	high _horizental_flash
  9575  0064E2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9576  0064E4  5043               	movf	?___wmul,w,c
  9577  0064E6  265A               	addwf	??_animation2,f,c
  9578  0064E8  5044               	movf	?___wmul+1,w,c
  9579  0064EA  225B               	addwfc	??_animation2+1,f,c
  9580  0064EC  5067               	movf	animation2@j,w,c
  9581  0064EE  265A               	addwf	??_animation2,f,c
  9582  0064F0  5068               	movf	animation2@j+1,w,c
  9583  0064F2  225B               	addwfc	??_animation2+1,f,c
  9584  0064F4  C05A  FFF6         	movff	??_animation2,tblptrl
  9585  0064F8  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9586  0064FC                     	if	0	;tblptru may be non-zero
  9587  0064FC                     	endif
  9588  0064FC                     	if	0	;tblptru may be non-zero
  9589  0064FC                     	endif
  9590  0064FC  0008               	tblrd		*
  9591  0064FE  50F5               	movf	tablat,w,c
  9592  006500  2461               	addwf	animation2@row,w,c
  9593  006502  6E63               	movwf	animation2@x,c
  9594  006504  0E00               	movlw	0
  9595  006506  2062               	addwfc	animation2@row+1,w,c
  9596  006508  6E64               	movwf	animation2@x+1,c
  9597                           
  9598                           ;newmain.c: 789: clr_led(x);
  9599  00650A  5063               	movf	animation2@x,w,c
  9600  00650C  ECAF  F023         	call	_clr_led
  9601                           
  9602                           ;newmain.c: 791: break;
  9603                           
  9604                           ;newmain.c: 790: }else
  9605  006510  4A67               	infsnz	animation2@j,f,c
  9606  006512  2A68               	incf	animation2@j+1,f,c
  9607  006514  D7B2               	goto	l3820
  9608  006516                     u4520:
  9609  006516                     l3834:
  9610                           
  9611                           ;newmain.c: 792: }
  9612                           ;newmain.c: 793: write_display();
  9613  006516  EC0A  F024         	call	_write_display	;wreg free
  9614  00651A  4A65               	infsnz	animation2@i,f,c
  9615  00651C  2A66               	incf	animation2@i+1,f,c
  9616  00651E  BE66               	btfsc	animation2@i+1,7,c
  9617  006520  D74D               	goto	l325
  9618  006522  5066               	movf	animation2@i+1,w,c
  9619  006524  E101               	bnz	u4530
  9620  006526  D744               	goto	L18
  9621  006528                     u4530:
  9622                           
  9623                           ;newmain.c: 794: }
  9624                           ;newmain.c: 795: } else if (m == 3) {
  9625  006528  0012               	return	
  9626  00652A                     l324:
  9627  00652A  0E03               	movlw	3
  9628  00652C  1860               	xorwf	animation2@m,w,c
  9629  00652E  A4D8               	btfss	status,2,c
  9630  006530  0012               	return	
  9631                           
  9632                           ;newmain.c: 796: for (i = col + 2; i >= 0; i--) {
  9633  006532  0E02               	movlw	2
  9634  006534  245E               	addwf	animation2@col,w,c
  9635  006536  6E65               	movwf	animation2@i,c
  9636  006538  0E00               	movlw	0
  9637  00653A  205F               	addwfc	animation2@col+1,w,c
  9638  00653C  6E66               	movwf	animation2@i+1,c
  9639  00653E  BE66               	btfsc	animation2@i+1,7,c
  9640  006540  0012               	return	
  9641                           
  9642                           ;newmain.c: 797: for (j = 0; j < 3; j++){
  9643  006542  0E00               	movlw	0
  9644  006544  6E68               	movwf	animation2@j+1,c
  9645  006546  0E00               	movlw	0
  9646  006548  6E67               	movwf	animation2@j,c
  9647  00654A                     l3848:
  9648  00654A  BE68               	btfsc	animation2@j+1,7,c
  9649  00654C  D006               	goto	l339
  9650  00654E  5068               	movf	animation2@j+1,w,c
  9651  006550  E14A               	bnz	l3862
  9652  006552  0E03               	movlw	3
  9653  006554  5C67               	subwf	animation2@j,w,c
  9654  006556  B0D8               	btfsc	status,0,c
  9655  006558  D046               	goto	u4580
  9656  00655A                     l339:
  9657                           
  9658                           ;newmain.c: 798: if (horizental_flash[i][j] != 100) {
  9659  00655A  C065  F043         	movff	animation2@i,___wmul@multiplier
  9660  00655E  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9661  006562  0E00               	movlw	0
  9662  006564  6E46               	movwf	___wmul@multiplicand+1,c
  9663  006566  0E03               	movlw	3
  9664  006568  6E45               	movwf	___wmul@multiplicand,c
  9665  00656A  ECF1  F021         	call	___wmul	;wreg free
  9666  00656E  0EB3               	movlw	low _horizental_flash
  9667  006570  6E5A               	movwf	??_animation2& (0+255),c
  9668  006572  0E7C               	movlw	high _horizental_flash
  9669  006574  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9670  006576  5043               	movf	?___wmul,w,c
  9671  006578  265A               	addwf	??_animation2,f,c
  9672  00657A  5044               	movf	?___wmul+1,w,c
  9673  00657C  225B               	addwfc	??_animation2+1,f,c
  9674  00657E  5067               	movf	animation2@j,w,c
  9675  006580  265A               	addwf	??_animation2,f,c
  9676  006582  5068               	movf	animation2@j+1,w,c
  9677  006584  225B               	addwfc	??_animation2+1,f,c
  9678  006586  C05A  FFF6         	movff	??_animation2,tblptrl
  9679  00658A  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9680  00658E                     	if	0	;tblptru may be non-zero
  9681  00658E                     	endif
  9682  00658E                     	if	0	;tblptru may be non-zero
  9683  00658E                     	endif
  9684  00658E  0008               	tblrd		*
  9685  006590  50F5               	movf	tablat,w,c
  9686  006592  0A64               	xorlw	100
  9687  006594  B4D8               	btfsc	status,2,c
  9688  006596  D027               	goto	u4580
  9689                           
  9690                           ;newmain.c: 799: x = horizental_flash[i][j] + row;
  9691  006598  C065  F043         	movff	animation2@i,___wmul@multiplier
  9692  00659C  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9693  0065A0  0E00               	movlw	0
  9694  0065A2  6E46               	movwf	___wmul@multiplicand+1,c
  9695  0065A4  0E03               	movlw	3
  9696  0065A6  6E45               	movwf	___wmul@multiplicand,c
  9697  0065A8  ECF1  F021         	call	___wmul	;wreg free
  9698  0065AC  0EB3               	movlw	low _horizental_flash
  9699  0065AE  6E5A               	movwf	??_animation2& (0+255),c
  9700  0065B0  0E7C               	movlw	high _horizental_flash
  9701  0065B2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9702  0065B4  5043               	movf	?___wmul,w,c
  9703  0065B6  265A               	addwf	??_animation2,f,c
  9704  0065B8  5044               	movf	?___wmul+1,w,c
  9705  0065BA  225B               	addwfc	??_animation2+1,f,c
  9706  0065BC  5067               	movf	animation2@j,w,c
  9707  0065BE  265A               	addwf	??_animation2,f,c
  9708  0065C0  5068               	movf	animation2@j+1,w,c
  9709  0065C2  225B               	addwfc	??_animation2+1,f,c
  9710  0065C4  C05A  FFF6         	movff	??_animation2,tblptrl
  9711  0065C8  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9712  0065CC                     	if	0	;tblptru may be non-zero
  9713  0065CC                     	endif
  9714  0065CC                     	if	0	;tblptru may be non-zero
  9715  0065CC                     	endif
  9716  0065CC  0008               	tblrd		*
  9717  0065CE  50F5               	movf	tablat,w,c
  9718  0065D0  2461               	addwf	animation2@row,w,c
  9719  0065D2  6E63               	movwf	animation2@x,c
  9720  0065D4  0E00               	movlw	0
  9721  0065D6  2062               	addwfc	animation2@row+1,w,c
  9722  0065D8  6E64               	movwf	animation2@x+1,c
  9723                           
  9724                           ;newmain.c: 800: set_led(x);
  9725  0065DA  5063               	movf	animation2@x,w,c
  9726  0065DC  EC58  F023         	call	_set_led
  9727                           
  9728                           ;newmain.c: 802: break;
  9729                           
  9730                           ;newmain.c: 801: }else
  9731  0065E0  4A67               	infsnz	animation2@j,f,c
  9732  0065E2  2A68               	incf	animation2@j+1,f,c
  9733  0065E4  D7B2               	goto	l3848
  9734  0065E6                     u4580:
  9735  0065E6                     l3862:
  9736                           
  9737                           ;newmain.c: 803: }
  9738                           ;newmain.c: 804: write_display();
  9739  0065E6  EC0A  F024         	call	_write_display	;wreg free
  9740                           
  9741                           ;newmain.c: 805: _delay((unsigned long)((10)*(4000000/4000.0)));
  9742  0065EA  0E0D               	movlw	13
  9743  0065EC  6E5A               	movwf	??_animation2& (0+255),c
  9744  0065EE  0EFC               	movlw	252
  9745  0065F0                     u7127:
  9746  0065F0  2EE8               	decfsz	wreg,f,c
  9747  0065F2  D7FE               	bra	u7127
  9748  0065F4  2E5A               	decfsz	??_animation2& (0+255),f,c
  9749  0065F6  D7FC               	bra	u7127
  9750                           
  9751                           ;newmain.c: 806: for (j = 0; j < 3; j++){
  9752  0065F8  0E00               	movlw	0
  9753  0065FA  6E68               	movwf	animation2@j+1,c
  9754  0065FC  0E00               	movlw	0
  9755  0065FE  6E67               	movwf	animation2@j,c
  9756  006600                     l3868:
  9757  006600  BE68               	btfsc	animation2@j+1,7,c
  9758  006602  D006               	goto	l343
  9759  006604  5068               	movf	animation2@j+1,w,c
  9760  006606  E14A               	bnz	l3882
  9761  006608  0E03               	movlw	3
  9762  00660A  5C67               	subwf	animation2@j,w,c
  9763  00660C  B0D8               	btfsc	status,0,c
  9764  00660E  D046               	goto	u4610
  9765  006610                     l343:
  9766                           
  9767                           ;newmain.c: 807: if (horizental_flash[i][j] != 100) {
  9768  006610  C065  F043         	movff	animation2@i,___wmul@multiplier
  9769  006614  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9770  006618  0E00               	movlw	0
  9771  00661A  6E46               	movwf	___wmul@multiplicand+1,c
  9772  00661C  0E03               	movlw	3
  9773  00661E  6E45               	movwf	___wmul@multiplicand,c
  9774  006620  ECF1  F021         	call	___wmul	;wreg free
  9775  006624  0EB3               	movlw	low _horizental_flash
  9776  006626  6E5A               	movwf	??_animation2& (0+255),c
  9777  006628  0E7C               	movlw	high _horizental_flash
  9778  00662A  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9779  00662C  5043               	movf	?___wmul,w,c
  9780  00662E  265A               	addwf	??_animation2,f,c
  9781  006630  5044               	movf	?___wmul+1,w,c
  9782  006632  225B               	addwfc	??_animation2+1,f,c
  9783  006634  5067               	movf	animation2@j,w,c
  9784  006636  265A               	addwf	??_animation2,f,c
  9785  006638  5068               	movf	animation2@j+1,w,c
  9786  00663A  225B               	addwfc	??_animation2+1,f,c
  9787  00663C  C05A  FFF6         	movff	??_animation2,tblptrl
  9788  006640  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9789  006644                     	if	0	;tblptru may be non-zero
  9790  006644                     	endif
  9791  006644                     	if	0	;tblptru may be non-zero
  9792  006644                     	endif
  9793  006644  0008               	tblrd		*
  9794  006646  50F5               	movf	tablat,w,c
  9795  006648  0A64               	xorlw	100
  9796  00664A  B4D8               	btfsc	status,2,c
  9797  00664C  D027               	goto	u4610
  9798                           
  9799                           ;newmain.c: 808: x = horizental_flash[i][j] + row;
  9800  00664E  C065  F043         	movff	animation2@i,___wmul@multiplier
  9801  006652  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9802  006656  0E00               	movlw	0
  9803  006658  6E46               	movwf	___wmul@multiplicand+1,c
  9804  00665A  0E03               	movlw	3
  9805  00665C  6E45               	movwf	___wmul@multiplicand,c
  9806  00665E  ECF1  F021         	call	___wmul	;wreg free
  9807  006662  0EB3               	movlw	low _horizental_flash
  9808  006664  6E5A               	movwf	??_animation2& (0+255),c
  9809  006666  0E7C               	movlw	high _horizental_flash
  9810  006668  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9811  00666A  5043               	movf	?___wmul,w,c
  9812  00666C  265A               	addwf	??_animation2,f,c
  9813  00666E  5044               	movf	?___wmul+1,w,c
  9814  006670  225B               	addwfc	??_animation2+1,f,c
  9815  006672  5067               	movf	animation2@j,w,c
  9816  006674  265A               	addwf	??_animation2,f,c
  9817  006676  5068               	movf	animation2@j+1,w,c
  9818  006678  225B               	addwfc	??_animation2+1,f,c
  9819  00667A  C05A  FFF6         	movff	??_animation2,tblptrl
  9820  00667E  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9821  006682                     	if	0	;tblptru may be non-zero
  9822  006682                     	endif
  9823  006682                     	if	0	;tblptru may be non-zero
  9824  006682                     	endif
  9825  006682  0008               	tblrd		*
  9826  006684  50F5               	movf	tablat,w,c
  9827  006686  2461               	addwf	animation2@row,w,c
  9828  006688  6E63               	movwf	animation2@x,c
  9829  00668A  0E00               	movlw	0
  9830  00668C  2062               	addwfc	animation2@row+1,w,c
  9831  00668E  6E64               	movwf	animation2@x+1,c
  9832                           
  9833                           ;newmain.c: 809: clr_led(x);
  9834  006690  5063               	movf	animation2@x,w,c
  9835  006692  ECAF  F023         	call	_clr_led
  9836                           
  9837                           ;newmain.c: 811: break;
  9838                           
  9839                           ;newmain.c: 810: }else
  9840  006696  4A67               	infsnz	animation2@j,f,c
  9841  006698  2A68               	incf	animation2@j+1,f,c
  9842  00669A  D7B2               	goto	l3868
  9843  00669C                     u4610:
  9844  00669C                     l3882:
  9845                           
  9846                           ;newmain.c: 812: }
  9847                           ;newmain.c: 813: write_display();
  9848  00669C  EC0A  F024         	call	_write_display	;wreg free
  9849  0066A0  0665               	decf	animation2@i,f,c
  9850  0066A2  A0D8               	btfss	status,0,c
  9851  0066A4  0666               	decf	animation2@i+1,f,c
  9852  0066A6  D74B               	goto	L19
  9853  0066A8                     __end_of_animation2:
  9854                           	opt stack 0
  9855                           tblptru	equ	0xFF8
  9856                           tblptrh	equ	0xFF7
  9857                           tblptrl	equ	0xFF6
  9858                           tablat	equ	0xFF5
  9859                           prodh	equ	0xFF4
  9860                           prodl	equ	0xFF3
  9861                           postinc0	equ	0xFEE
  9862                           wreg	equ	0xFE8
  9863                           postinc1	equ	0xFE6
  9864                           fsr1h	equ	0xFE2
  9865                           fsr1l	equ	0xFE1
  9866                           indf2	equ	0xFDF
  9867                           postinc2	equ	0xFDE
  9868                           postdec2	equ	0xFDD
  9869                           fsr2h	equ	0xFDA
  9870                           fsr2l	equ	0xFD9
  9871                           status	equ	0xFD8
  9872                           
  9873 ;; *************** function _animation1 *****************
  9874 ;; Defined at:
  9875 ;;		line 700 in file "newmain.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  m               1    wreg     unsigned char 
  9878 ;;  n               1   21[COMRAM] unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  m               1   25[COMRAM] unsigned char 
  9881 ;;  j               1   28[COMRAM] unsigned char 
  9882 ;;  i               1   27[COMRAM] unsigned char 
  9883 ;;  x               1   26[COMRAM] unsigned char 
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  1    wreg      void 
  9886 ;; Registers used:
  9887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9893 ;;      Params:         1       0       0       0       0       0       0
  9894 ;;      Locals:         4       0       0       0       0       0       0
  9895 ;;      Temps:          3       0       0       0       0       0       0
  9896 ;;      Totals:         8       0       0       0       0       0       0
  9897 ;;Total ram usage:        8 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; Hardware stack levels required when called:    4
  9900 ;; This function calls:
  9901 ;;		_clr_led
  9902 ;;		_set_led
  9903 ;;		_write_display
  9904 ;; This function is called by:
  9905 ;;		_main
  9906 ;; This function uses a non-reentrant model
  9907 ;;
  9908                           
  9909                           	psect	text15
  9910  004948                     __ptext15:
  9911                           	opt stack 0
  9912  004948                     _animation1:
  9913                           	opt stack 26
  9914                           
  9915                           ;incstack = 0
  9916                           ;animation1@m stored from wreg
  9917  004948  6E5C               	movwf	animation1@m,c
  9918                           
  9919                           ;newmain.c: 701: uint8_t i = 0, j = 0, x = 0;
  9920  00494A  0E00               	movlw	0
  9921  00494C  6E5E               	movwf	animation1@i,c
  9922  00494E  0E00               	movlw	0
  9923  004950  6E5F               	movwf	animation1@j,c
  9924  004952  0E00               	movlw	0
  9925  004954  6E5D               	movwf	animation1@x,c
  9926                           
  9927                           ;newmain.c: 702: for (i = 0; i < 4; i++) {
  9928  004956  0E00               	movlw	0
  9929  004958  6E5E               	movwf	animation1@i,c
  9930  00495A                     l3618:
  9931  00495A  0E03               	movlw	3
  9932  00495C  645E               	cpfsgt	animation1@i,c
  9933  00495E  D001               	goto	l282
  9934  004960  0012               	return	
  9935  004962                     l282:
  9936                           
  9937                           ;newmain.c: 703: for (j = 0; j < 4; j++) {
  9938  004962  0E00               	movlw	0
  9939  004964  6E5F               	movwf	animation1@j,c
  9940  004966                     l3624:
  9941  004966  0E03               	movlw	3
  9942  004968  645F               	cpfsgt	animation1@j,c
  9943  00496A  D001               	goto	l284
  9944  00496C  D046               	goto	u4170
  9945  00496E                     l284:
  9946                           
  9947                           ;newmain.c: 704: if (arrow[n][i][j] != 100) {
  9948  00496E  5058               	movf	animation1@n,w,c
  9949  004970  0D10               	mullw	16
  9950  004972  0EAD               	movlw	low _arrow
  9951  004974  6E59               	movwf	??_animation1& (0+255),c
  9952  004976  0E76               	movlw	high _arrow
  9953  004978  6E5A               	movwf	(??_animation1+1)& (0+255),c
  9954  00497A  50F3               	movf	prodl,w,c
  9955  00497C  2659               	addwf	??_animation1,f,c
  9956  00497E  50F4               	movf	prodh,w,c
  9957  004980  225A               	addwfc	??_animation1+1,f,c
  9958  004982  505E               	movf	animation1@i,w,c
  9959  004984  0D04               	mullw	4
  9960  004986  50F3               	movf	prodl,w,c
  9961  004988  2659               	addwf	??_animation1,f,c
  9962  00498A  50F4               	movf	prodh,w,c
  9963  00498C  225A               	addwfc	??_animation1+1,f,c
  9964  00498E  505F               	movf	animation1@j,w,c
  9965  004990  0D01               	mullw	1
  9966  004992  50F3               	movf	prodl,w,c
  9967  004994  2659               	addwf	??_animation1,f,c
  9968  004996  50F4               	movf	prodh,w,c
  9969  004998  225A               	addwfc	??_animation1+1,f,c
  9970  00499A  C059  FFF6         	movff	??_animation1,tblptrl
  9971  00499E  C05A  FFF7         	movff	??_animation1+1,tblptrh
  9972  0049A2                     	if	0	;tblptru may be non-zero
  9973  0049A2                     	endif
  9974  0049A2                     	if	0	;tblptru may be non-zero
  9975  0049A2                     	endif
  9976  0049A2  0008               	tblrd		*
  9977  0049A4  50F5               	movf	tablat,w,c
  9978  0049A6  0A64               	xorlw	100
  9979  0049A8  B4D8               	btfsc	status,2,c
  9980  0049AA  D027               	goto	u4170
  9981                           
  9982                           ;newmain.c: 705: x = arrow[n][i][j] + 16 * m;
  9983  0049AC  5058               	movf	animation1@n,w,c
  9984  0049AE  0D10               	mullw	16
  9985  0049B0  0EAD               	movlw	low _arrow
  9986  0049B2  6E59               	movwf	??_animation1& (0+255),c
  9987  0049B4  0E76               	movlw	high _arrow
  9988  0049B6  6E5A               	movwf	(??_animation1+1)& (0+255),c
  9989  0049B8  50F3               	movf	prodl,w,c
  9990  0049BA  2659               	addwf	??_animation1,f,c
  9991  0049BC  50F4               	movf	prodh,w,c
  9992  0049BE  225A               	addwfc	??_animation1+1,f,c
  9993  0049C0  505E               	movf	animation1@i,w,c
  9994  0049C2  0D04               	mullw	4
  9995  0049C4  50F3               	movf	prodl,w,c
  9996  0049C6  2659               	addwf	??_animation1,f,c
  9997  0049C8  50F4               	movf	prodh,w,c
  9998  0049CA  225A               	addwfc	??_animation1+1,f,c
  9999  0049CC  505F               	movf	animation1@j,w,c
 10000  0049CE  0D01               	mullw	1
 10001  0049D0  50F3               	movf	prodl,w,c
 10002  0049D2  2659               	addwf	??_animation1,f,c
 10003  0049D4  50F4               	movf	prodh,w,c
 10004  0049D6  225A               	addwfc	??_animation1+1,f,c
 10005  0049D8  C059  FFF6         	movff	??_animation1,tblptrl
 10006  0049DC  C05A  FFF7         	movff	??_animation1+1,tblptrh
 10007  0049E0                     	if	0	;tblptru may be non-zero
 10008  0049E0                     	endif
 10009  0049E0                     	if	0	;tblptru may be non-zero
 10010  0049E0                     	endif
 10011  0049E0  0008               	tblrd		*
 10012  0049E2  CFF5 F05B          	movff	tablat,??_animation1+2
 10013  0049E6  505C               	movf	animation1@m,w,c
 10014  0049E8  0D10               	mullw	16
 10015  0049EA  50F3               	movf	prodl,w,c
 10016  0049EC  245B               	addwf	??_animation1+2,w,c
 10017  0049EE  6E5D               	movwf	animation1@x,c
 10018                           
 10019                           ;newmain.c: 706: set_led(x);
 10020  0049F0  505D               	movf	animation1@x,w,c
 10021  0049F2  EC58  F023         	call	_set_led
 10022                           
 10023                           ;newmain.c: 708: break;
 10024                           
 10025                           ;newmain.c: 707: }else
 10026  0049F6  2A5F               	incf	animation1@j,f,c
 10027  0049F8  D7B6               	goto	l3624
 10028  0049FA                     u4170:
 10029                           
 10030                           ;newmain.c: 709: }
 10031                           ;newmain.c: 710: write_display();
 10032  0049FA  EC0A  F024         	call	_write_display	;wreg free
 10033                           
 10034                           ;newmain.c: 711: _delay((unsigned long)((10)*(4000000/4000.0)));
 10035  0049FE  0E0D               	movlw	13
 10036  004A00  6E59               	movwf	??_animation1& (0+255),c
 10037  004A02  0EFC               	movlw	252
 10038  004A04                     u7137:
 10039  004A04  2EE8               	decfsz	wreg,f,c
 10040  004A06  D7FE               	bra	u7137
 10041  004A08  2E59               	decfsz	??_animation1& (0+255),f,c
 10042  004A0A  D7FC               	bra	u7137
 10043                           
 10044                           ;newmain.c: 712: for (j = 0; j < 4; j++) {
 10045  004A0C  0E00               	movlw	0
 10046  004A0E  6E5F               	movwf	animation1@j,c
 10047  004A10                     l3644:
 10048  004A10  0E03               	movlw	3
 10049  004A12  645F               	cpfsgt	animation1@j,c
 10050  004A14  D001               	goto	l288
 10051  004A16  D046               	goto	u4200
 10052  004A18                     l288:
 10053                           
 10054                           ;newmain.c: 713: if (arrow[n][i][j] != 100) {
 10055  004A18  5058               	movf	animation1@n,w,c
 10056  004A1A  0D10               	mullw	16
 10057  004A1C  0EAD               	movlw	low _arrow
 10058  004A1E  6E59               	movwf	??_animation1& (0+255),c
 10059  004A20  0E76               	movlw	high _arrow
 10060  004A22  6E5A               	movwf	(??_animation1+1)& (0+255),c
 10061  004A24  50F3               	movf	prodl,w,c
 10062  004A26  2659               	addwf	??_animation1,f,c
 10063  004A28  50F4               	movf	prodh,w,c
 10064  004A2A  225A               	addwfc	??_animation1+1,f,c
 10065  004A2C  505E               	movf	animation1@i,w,c
 10066  004A2E  0D04               	mullw	4
 10067  004A30  50F3               	movf	prodl,w,c
 10068  004A32  2659               	addwf	??_animation1,f,c
 10069  004A34  50F4               	movf	prodh,w,c
 10070  004A36  225A               	addwfc	??_animation1+1,f,c
 10071  004A38  505F               	movf	animation1@j,w,c
 10072  004A3A  0D01               	mullw	1
 10073  004A3C  50F3               	movf	prodl,w,c
 10074  004A3E  2659               	addwf	??_animation1,f,c
 10075  004A40  50F4               	movf	prodh,w,c
 10076  004A42  225A               	addwfc	??_animation1+1,f,c
 10077  004A44  C059  FFF6         	movff	??_animation1,tblptrl
 10078  004A48  C05A  FFF7         	movff	??_animation1+1,tblptrh
 10079  004A4C                     	if	0	;tblptru may be non-zero
 10080  004A4C                     	endif
 10081  004A4C                     	if	0	;tblptru may be non-zero
 10082  004A4C                     	endif
 10083  004A4C  0008               	tblrd		*
 10084  004A4E  50F5               	movf	tablat,w,c
 10085  004A50  0A64               	xorlw	100
 10086  004A52  B4D8               	btfsc	status,2,c
 10087  004A54  D027               	goto	u4200
 10088                           
 10089                           ;newmain.c: 714: x = arrow[n][i][j] + 16 * m;
 10090  004A56  5058               	movf	animation1@n,w,c
 10091  004A58  0D10               	mullw	16
 10092  004A5A  0EAD               	movlw	low _arrow
 10093  004A5C  6E59               	movwf	??_animation1& (0+255),c
 10094  004A5E  0E76               	movlw	high _arrow
 10095  004A60  6E5A               	movwf	(??_animation1+1)& (0+255),c
 10096  004A62  50F3               	movf	prodl,w,c
 10097  004A64  2659               	addwf	??_animation1,f,c
 10098  004A66  50F4               	movf	prodh,w,c
 10099  004A68  225A               	addwfc	??_animation1+1,f,c
 10100  004A6A  505E               	movf	animation1@i,w,c
 10101  004A6C  0D04               	mullw	4
 10102  004A6E  50F3               	movf	prodl,w,c
 10103  004A70  2659               	addwf	??_animation1,f,c
 10104  004A72  50F4               	movf	prodh,w,c
 10105  004A74  225A               	addwfc	??_animation1+1,f,c
 10106  004A76  505F               	movf	animation1@j,w,c
 10107  004A78  0D01               	mullw	1
 10108  004A7A  50F3               	movf	prodl,w,c
 10109  004A7C  2659               	addwf	??_animation1,f,c
 10110  004A7E  50F4               	movf	prodh,w,c
 10111  004A80  225A               	addwfc	??_animation1+1,f,c
 10112  004A82  C059  FFF6         	movff	??_animation1,tblptrl
 10113  004A86  C05A  FFF7         	movff	??_animation1+1,tblptrh
 10114  004A8A                     	if	0	;tblptru may be non-zero
 10115  004A8A                     	endif
 10116  004A8A                     	if	0	;tblptru may be non-zero
 10117  004A8A                     	endif
 10118  004A8A  0008               	tblrd		*
 10119  004A8C  CFF5 F05B          	movff	tablat,??_animation1+2
 10120  004A90  505C               	movf	animation1@m,w,c
 10121  004A92  0D10               	mullw	16
 10122  004A94  50F3               	movf	prodl,w,c
 10123  004A96  245B               	addwf	??_animation1+2,w,c
 10124  004A98  6E5D               	movwf	animation1@x,c
 10125                           
 10126                           ;newmain.c: 715: clr_led(x);
 10127  004A9A  505D               	movf	animation1@x,w,c
 10128  004A9C  ECAF  F023         	call	_clr_led
 10129                           
 10130                           ;newmain.c: 717: break;
 10131                           
 10132                           ;newmain.c: 716: }else
 10133  004AA0  2A5F               	incf	animation1@j,f,c
 10134  004AA2  D7B6               	goto	l3644
 10135  004AA4                     u4200:
 10136                           
 10137                           ;newmain.c: 718: }
 10138                           ;newmain.c: 719: write_display();
 10139  004AA4  EC0A  F024         	call	_write_display	;wreg free
 10140  004AA8  2A5E               	incf	animation1@i,f,c
 10141  004AAA  D757               	goto	l3618
 10142  004AAC                     __end_of_animation1:
 10143                           	opt stack 0
 10144                           tblptru	equ	0xFF8
 10145                           tblptrh	equ	0xFF7
 10146                           tblptrl	equ	0xFF6
 10147                           tablat	equ	0xFF5
 10148                           prodh	equ	0xFF4
 10149                           prodl	equ	0xFF3
 10150                           postinc0	equ	0xFEE
 10151                           wreg	equ	0xFE8
 10152                           postinc1	equ	0xFE6
 10153                           fsr1h	equ	0xFE2
 10154                           fsr1l	equ	0xFE1
 10155                           indf2	equ	0xFDF
 10156                           postinc2	equ	0xFDE
 10157                           postdec2	equ	0xFDD
 10158                           fsr2h	equ	0xFDA
 10159                           fsr2l	equ	0xFD9
 10160                           status	equ	0xFD8
 10161                           
 10162 ;; *************** function _animation0 *****************
 10163 ;; Defined at:
 10164 ;;		line 633 in file "newmain.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  m               1    wreg     unsigned char 
 10167 ;;  n               1   21[COMRAM] unsigned char 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  m               1   26[COMRAM] unsigned char 
 10170 ;;  x               2   24[COMRAM] int 
 10171 ;;  i               1   28[COMRAM] unsigned char 
 10172 ;;  j               1   27[COMRAM] unsigned char 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10182 ;;      Params:         1       0       0       0       0       0       0
 10183 ;;      Locals:         5       0       0       0       0       0       0
 10184 ;;      Temps:          2       0       0       0       0       0       0
 10185 ;;      Totals:         8       0       0       0       0       0       0
 10186 ;;Total ram usage:        8 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:    4
 10189 ;; This function calls:
 10190 ;;		_clr_led
 10191 ;;		_set_led
 10192 ;;		_write_display
 10193 ;; This function is called by:
 10194 ;;		_main
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           	psect	text16
 10199  005274                     __ptext16:
 10200                           	opt stack 0
 10201  005274                     _animation0:
 10202                           	opt stack 26
 10203                           
 10204                           ;incstack = 0
 10205                           ;animation0@m stored from wreg
 10206  005274  6E5D               	movwf	animation0@m,c
 10207                           
 10208                           ;newmain.c: 634: uint8_t i = 0, j = 0;
 10209  005276  0E00               	movlw	0
 10210  005278  6E5F               	movwf	animation0@i,c
 10211  00527A  0E00               	movlw	0
 10212  00527C  6E5E               	movwf	animation0@j,c
 10213                           
 10214                           ;newmain.c: 635: if (m == 1) {
 10215  00527E  045D               	decf	animation0@m,w,c
 10216  005280  A4D8               	btfss	status,2,c
 10217  005282  D04E               	goto	l251
 10218                           
 10219                           ;newmain.c: 636: for (i = 0; i < 19; i += 2) {
 10220  005284  0E00               	movlw	0
 10221  005286  6E5F               	movwf	animation0@i,c
 10222  005288                     l3470:
 10223  005288  0E12               	movlw	18
 10224  00528A  645F               	cpfsgt	animation0@i,c
 10225  00528C  D001               	goto	l252
 10226  00528E  0012               	return	
 10227  005290                     l252:
 10228                           
 10229                           ;newmain.c: 637: set_led(show0_1[i]);
 10230  005290  505F               	movf	animation0@i,w,c
 10231  005292  0D01               	mullw	1
 10232  005294  0E8B               	movlw	low _show0_1
 10233  005296  24F3               	addwf	prodl,w,c
 10234  005298  6EF6               	movwf	tblptrl,c
 10235  00529A  0E7C               	movlw	high _show0_1
 10236  00529C  20F4               	addwfc	prodh,w,c
 10237  00529E  6EF7               	movwf	tblptrh,c
 10238  0052A0                     	if	0	;There are less than 3 active tblptr bytes
 10239  0052A0                     	endif
 10240  0052A0  0008               	tblrd		*
 10241  0052A2  50F5               	movf	tablat,w,c
 10242  0052A4  EC58  F023         	call	_set_led
 10243                           
 10244                           ;newmain.c: 638: set_led(show0_1[i + 1]);
 10245  0052A8  505F               	movf	animation0@i,w,c
 10246  0052AA  6E59               	movwf	??_animation0& (0+255),c
 10247  0052AC  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10248  0052AE  0E01               	movlw	1
 10249  0052B0  2659               	addwf	??_animation0,f,c
 10250  0052B2  0E00               	movlw	0
 10251  0052B4  225A               	addwfc	??_animation0+1,f,c
 10252  0052B6  0E8B               	movlw	low _show0_1
 10253  0052B8  2459               	addwf	??_animation0,w,c
 10254  0052BA  6EF6               	movwf	tblptrl,c
 10255  0052BC  0E7C               	movlw	high _show0_1
 10256  0052BE  205A               	addwfc	??_animation0+1,w,c
 10257  0052C0  6EF7               	movwf	tblptrh,c
 10258  0052C2                     	if	0	;There are less than 3 active tblptr bytes
 10259  0052C2                     	endif
 10260  0052C2  0008               	tblrd		*
 10261  0052C4  50F5               	movf	tablat,w,c
 10262  0052C6  EC58  F023         	call	_set_led
 10263                           
 10264                           ;newmain.c: 639: write_display();
 10265  0052CA  EC0A  F024         	call	_write_display	;wreg free
 10266                           
 10267                           ;newmain.c: 640: _delay((unsigned long)((10)*(4000000/4000.0)));
 10268  0052CE  0E0D               	movlw	13
 10269  0052D0  6E59               	movwf	??_animation0& (0+255),c
 10270  0052D2  0EFC               	movlw	252
 10271  0052D4                     u7147:
 10272  0052D4  2EE8               	decfsz	wreg,f,c
 10273  0052D6  D7FE               	bra	u7147
 10274  0052D8  2E59               	decfsz	??_animation0& (0+255),f,c
 10275  0052DA  D7FC               	bra	u7147
 10276                           
 10277                           ;newmain.c: 641: clr_led(show0_1[i]);
 10278  0052DC  505F               	movf	animation0@i,w,c
 10279  0052DE  0D01               	mullw	1
 10280  0052E0  0E8B               	movlw	low _show0_1
 10281  0052E2  24F3               	addwf	prodl,w,c
 10282  0052E4  6EF6               	movwf	tblptrl,c
 10283  0052E6  0E7C               	movlw	high _show0_1
 10284  0052E8  20F4               	addwfc	prodh,w,c
 10285  0052EA  6EF7               	movwf	tblptrh,c
 10286  0052EC                     	if	0	;There are less than 3 active tblptr bytes
 10287  0052EC                     	endif
 10288  0052EC  0008               	tblrd		*
 10289  0052EE  50F5               	movf	tablat,w,c
 10290  0052F0  ECAF  F023         	call	_clr_led
 10291                           
 10292                           ;newmain.c: 642: clr_led(show0_1[i + 1]);
 10293  0052F4  505F               	movf	animation0@i,w,c
 10294  0052F6  6E59               	movwf	??_animation0& (0+255),c
 10295  0052F8  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10296  0052FA  0E01               	movlw	1
 10297  0052FC  2659               	addwf	??_animation0,f,c
 10298  0052FE  0E00               	movlw	0
 10299  005300  225A               	addwfc	??_animation0+1,f,c
 10300  005302  0E8B               	movlw	low _show0_1
 10301  005304  2459               	addwf	??_animation0,w,c
 10302  005306  6EF6               	movwf	tblptrl,c
 10303  005308  0E7C               	movlw	high _show0_1
 10304  00530A  205A               	addwfc	??_animation0+1,w,c
 10305  00530C  6EF7               	movwf	tblptrh,c
 10306  00530E                     	if	0	;There are less than 3 active tblptr bytes
 10307  00530E                     	endif
 10308  00530E  0008               	tblrd		*
 10309  005310  50F5               	movf	tablat,w,c
 10310  005312  ECAF  F023         	call	_clr_led
 10311                           
 10312                           ;newmain.c: 643: write_display();
 10313  005316  EC0A  F024         	call	_write_display	;wreg free
 10314  00531A  0E02               	movlw	2
 10315  00531C  265F               	addwf	animation0@i,f,c
 10316  00531E  D7B4               	goto	l3470
 10317  005320                     l251:
 10318  005320  0E02               	movlw	2
 10319  005322  185D               	xorwf	animation0@m,w,c
 10320  005324  A4D8               	btfss	status,2,c
 10321  005326  D04E               	goto	l255
 10322                           
 10323                           ;newmain.c: 646: for (i = 39; i > 20; i -= 2) {
 10324  005328  0E27               	movlw	39
 10325  00532A  6E5F               	movwf	animation0@i,c
 10326  00532C                     l3494:
 10327  00532C  0E15               	movlw	21
 10328  00532E  605F               	cpfslt	animation0@i,c
 10329  005330  D001               	goto	l256
 10330  005332  0012               	return	
 10331  005334                     l256:
 10332                           
 10333                           ;newmain.c: 647: set_led(show0_1[i]);
 10334  005334  505F               	movf	animation0@i,w,c
 10335  005336  0D01               	mullw	1
 10336  005338  0E8B               	movlw	low _show0_1
 10337  00533A  24F3               	addwf	prodl,w,c
 10338  00533C  6EF6               	movwf	tblptrl,c
 10339  00533E  0E7C               	movlw	high _show0_1
 10340  005340  20F4               	addwfc	prodh,w,c
 10341  005342  6EF7               	movwf	tblptrh,c
 10342  005344                     	if	0	;There are less than 3 active tblptr bytes
 10343  005344                     	endif
 10344  005344  0008               	tblrd		*
 10345  005346  50F5               	movf	tablat,w,c
 10346  005348  EC58  F023         	call	_set_led
 10347                           
 10348                           ;newmain.c: 648: set_led(show0_1[i + 1]);
 10349  00534C  505F               	movf	animation0@i,w,c
 10350  00534E  6E59               	movwf	??_animation0& (0+255),c
 10351  005350  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10352  005352  0E01               	movlw	1
 10353  005354  2659               	addwf	??_animation0,f,c
 10354  005356  0E00               	movlw	0
 10355  005358  225A               	addwfc	??_animation0+1,f,c
 10356  00535A  0E8B               	movlw	low _show0_1
 10357  00535C  2459               	addwf	??_animation0,w,c
 10358  00535E  6EF6               	movwf	tblptrl,c
 10359  005360  0E7C               	movlw	high _show0_1
 10360  005362  205A               	addwfc	??_animation0+1,w,c
 10361  005364  6EF7               	movwf	tblptrh,c
 10362  005366                     	if	0	;There are less than 3 active tblptr bytes
 10363  005366                     	endif
 10364  005366  0008               	tblrd		*
 10365  005368  50F5               	movf	tablat,w,c
 10366  00536A  EC58  F023         	call	_set_led
 10367                           
 10368                           ;newmain.c: 649: write_display();
 10369  00536E  EC0A  F024         	call	_write_display	;wreg free
 10370                           
 10371                           ;newmain.c: 650: _delay((unsigned long)((10)*(4000000/4000.0)));
 10372  005372  0E0D               	movlw	13
 10373  005374  6E59               	movwf	??_animation0& (0+255),c
 10374  005376  0EFC               	movlw	252
 10375  005378                     u7157:
 10376  005378  2EE8               	decfsz	wreg,f,c
 10377  00537A  D7FE               	bra	u7157
 10378  00537C  2E59               	decfsz	??_animation0& (0+255),f,c
 10379  00537E  D7FC               	bra	u7157
 10380                           
 10381                           ;newmain.c: 651: clr_led(show0_1[i]);
 10382  005380  505F               	movf	animation0@i,w,c
 10383  005382  0D01               	mullw	1
 10384  005384  0E8B               	movlw	low _show0_1
 10385  005386  24F3               	addwf	prodl,w,c
 10386  005388  6EF6               	movwf	tblptrl,c
 10387  00538A  0E7C               	movlw	high _show0_1
 10388  00538C  20F4               	addwfc	prodh,w,c
 10389  00538E  6EF7               	movwf	tblptrh,c
 10390  005390                     	if	0	;There are less than 3 active tblptr bytes
 10391  005390                     	endif
 10392  005390  0008               	tblrd		*
 10393  005392  50F5               	movf	tablat,w,c
 10394  005394  ECAF  F023         	call	_clr_led
 10395                           
 10396                           ;newmain.c: 652: clr_led(show0_1[i + 1]);
 10397  005398  505F               	movf	animation0@i,w,c
 10398  00539A  6E59               	movwf	??_animation0& (0+255),c
 10399  00539C  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10400  00539E  0E01               	movlw	1
 10401  0053A0  2659               	addwf	??_animation0,f,c
 10402  0053A2  0E00               	movlw	0
 10403  0053A4  225A               	addwfc	??_animation0+1,f,c
 10404  0053A6  0E8B               	movlw	low _show0_1
 10405  0053A8  2459               	addwf	??_animation0,w,c
 10406  0053AA  6EF6               	movwf	tblptrl,c
 10407  0053AC  0E7C               	movlw	high _show0_1
 10408  0053AE  205A               	addwfc	??_animation0+1,w,c
 10409  0053B0  6EF7               	movwf	tblptrh,c
 10410  0053B2                     	if	0	;There are less than 3 active tblptr bytes
 10411  0053B2                     	endif
 10412  0053B2  0008               	tblrd		*
 10413  0053B4  50F5               	movf	tablat,w,c
 10414  0053B6  ECAF  F023         	call	_clr_led
 10415                           
 10416                           ;newmain.c: 653: write_display();
 10417  0053BA  EC0A  F024         	call	_write_display	;wreg free
 10418  0053BE  0E02               	movlw	2
 10419  0053C0  5E5F               	subwf	animation0@i,f,c
 10420  0053C2  D7B4               	goto	l3494
 10421  0053C4                     l255:
 10422  0053C4  0E03               	movlw	3
 10423  0053C6  185D               	xorwf	animation0@m,w,c
 10424  0053C8  A4D8               	btfss	status,2,c
 10425  0053CA  D04E               	goto	l259
 10426                           
 10427                           ;newmain.c: 656: for (i = 0; i < 19; i += 2) {
 10428  0053CC  0E00               	movlw	0
 10429  0053CE  6E5F               	movwf	animation0@i,c
 10430  0053D0                     l3518:
 10431  0053D0  0E12               	movlw	18
 10432  0053D2  645F               	cpfsgt	animation0@i,c
 10433  0053D4  D001               	goto	l260
 10434  0053D6  0012               	return	
 10435  0053D8                     l260:
 10436                           
 10437                           ;newmain.c: 657: set_led(show0_2[i]);
 10438  0053D8  505F               	movf	animation0@i,w,c
 10439  0053DA  0D01               	mullw	1
 10440  0053DC  0E63               	movlw	low _show0_2
 10441  0053DE  24F3               	addwf	prodl,w,c
 10442  0053E0  6EF6               	movwf	tblptrl,c
 10443  0053E2  0E7C               	movlw	high _show0_2
 10444  0053E4  20F4               	addwfc	prodh,w,c
 10445  0053E6  6EF7               	movwf	tblptrh,c
 10446  0053E8                     	if	0	;There are less than 3 active tblptr bytes
 10447  0053E8                     	endif
 10448  0053E8  0008               	tblrd		*
 10449  0053EA  50F5               	movf	tablat,w,c
 10450  0053EC  EC58  F023         	call	_set_led
 10451                           
 10452                           ;newmain.c: 658: set_led(show0_2[i + 1]);
 10453  0053F0  505F               	movf	animation0@i,w,c
 10454  0053F2  6E59               	movwf	??_animation0& (0+255),c
 10455  0053F4  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10456  0053F6  0E01               	movlw	1
 10457  0053F8  2659               	addwf	??_animation0,f,c
 10458  0053FA  0E00               	movlw	0
 10459  0053FC  225A               	addwfc	??_animation0+1,f,c
 10460  0053FE  0E63               	movlw	low _show0_2
 10461  005400  2459               	addwf	??_animation0,w,c
 10462  005402  6EF6               	movwf	tblptrl,c
 10463  005404  0E7C               	movlw	high _show0_2
 10464  005406  205A               	addwfc	??_animation0+1,w,c
 10465  005408  6EF7               	movwf	tblptrh,c
 10466  00540A                     	if	0	;There are less than 3 active tblptr bytes
 10467  00540A                     	endif
 10468  00540A  0008               	tblrd		*
 10469  00540C  50F5               	movf	tablat,w,c
 10470  00540E  EC58  F023         	call	_set_led
 10471                           
 10472                           ;newmain.c: 659: write_display();
 10473  005412  EC0A  F024         	call	_write_display	;wreg free
 10474                           
 10475                           ;newmain.c: 660: _delay((unsigned long)((10)*(4000000/4000.0)));
 10476  005416  0E0D               	movlw	13
 10477  005418  6E59               	movwf	??_animation0& (0+255),c
 10478  00541A  0EFC               	movlw	252
 10479  00541C                     u7167:
 10480  00541C  2EE8               	decfsz	wreg,f,c
 10481  00541E  D7FE               	bra	u7167
 10482  005420  2E59               	decfsz	??_animation0& (0+255),f,c
 10483  005422  D7FC               	bra	u7167
 10484                           
 10485                           ;newmain.c: 661: clr_led(show0_2[i]);
 10486  005424  505F               	movf	animation0@i,w,c
 10487  005426  0D01               	mullw	1
 10488  005428  0E63               	movlw	low _show0_2
 10489  00542A  24F3               	addwf	prodl,w,c
 10490  00542C  6EF6               	movwf	tblptrl,c
 10491  00542E  0E7C               	movlw	high _show0_2
 10492  005430  20F4               	addwfc	prodh,w,c
 10493  005432  6EF7               	movwf	tblptrh,c
 10494  005434                     	if	0	;There are less than 3 active tblptr bytes
 10495  005434                     	endif
 10496  005434  0008               	tblrd		*
 10497  005436  50F5               	movf	tablat,w,c
 10498  005438  ECAF  F023         	call	_clr_led
 10499                           
 10500                           ;newmain.c: 662: clr_led(show0_2[i + 1]);
 10501  00543C  505F               	movf	animation0@i,w,c
 10502  00543E  6E59               	movwf	??_animation0& (0+255),c
 10503  005440  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10504  005442  0E01               	movlw	1
 10505  005444  2659               	addwf	??_animation0,f,c
 10506  005446  0E00               	movlw	0
 10507  005448  225A               	addwfc	??_animation0+1,f,c
 10508  00544A  0E63               	movlw	low _show0_2
 10509  00544C  2459               	addwf	??_animation0,w,c
 10510  00544E  6EF6               	movwf	tblptrl,c
 10511  005450  0E7C               	movlw	high _show0_2
 10512  005452  205A               	addwfc	??_animation0+1,w,c
 10513  005454  6EF7               	movwf	tblptrh,c
 10514  005456                     	if	0	;There are less than 3 active tblptr bytes
 10515  005456                     	endif
 10516  005456  0008               	tblrd		*
 10517  005458  50F5               	movf	tablat,w,c
 10518  00545A  ECAF  F023         	call	_clr_led
 10519                           
 10520                           ;newmain.c: 663: write_display();
 10521  00545E  EC0A  F024         	call	_write_display	;wreg free
 10522  005462  0E02               	movlw	2
 10523  005464  265F               	addwf	animation0@i,f,c
 10524  005466  D7B4               	goto	l3518
 10525  005468                     l259:
 10526  005468  0E04               	movlw	4
 10527  00546A  185D               	xorwf	animation0@m,w,c
 10528  00546C  A4D8               	btfss	status,2,c
 10529  00546E  D04E               	goto	l263
 10530                           
 10531                           ;newmain.c: 666: for (i = 39; i > 20; i -= 2) {
 10532  005470  0E27               	movlw	39
 10533  005472  6E5F               	movwf	animation0@i,c
 10534  005474                     l3542:
 10535  005474  0E15               	movlw	21
 10536  005476  605F               	cpfslt	animation0@i,c
 10537  005478  D001               	goto	l264
 10538  00547A  0012               	return	
 10539  00547C                     l264:
 10540                           
 10541                           ;newmain.c: 667: set_led(show0_2[i]);
 10542  00547C  505F               	movf	animation0@i,w,c
 10543  00547E  0D01               	mullw	1
 10544  005480  0E63               	movlw	low _show0_2
 10545  005482  24F3               	addwf	prodl,w,c
 10546  005484  6EF6               	movwf	tblptrl,c
 10547  005486  0E7C               	movlw	high _show0_2
 10548  005488  20F4               	addwfc	prodh,w,c
 10549  00548A  6EF7               	movwf	tblptrh,c
 10550  00548C                     	if	0	;There are less than 3 active tblptr bytes
 10551  00548C                     	endif
 10552  00548C  0008               	tblrd		*
 10553  00548E  50F5               	movf	tablat,w,c
 10554  005490  EC58  F023         	call	_set_led
 10555                           
 10556                           ;newmain.c: 668: set_led(show0_2[i + 1]);
 10557  005494  505F               	movf	animation0@i,w,c
 10558  005496  6E59               	movwf	??_animation0& (0+255),c
 10559  005498  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10560  00549A  0E01               	movlw	1
 10561  00549C  2659               	addwf	??_animation0,f,c
 10562  00549E  0E00               	movlw	0
 10563  0054A0  225A               	addwfc	??_animation0+1,f,c
 10564  0054A2  0E63               	movlw	low _show0_2
 10565  0054A4  2459               	addwf	??_animation0,w,c
 10566  0054A6  6EF6               	movwf	tblptrl,c
 10567  0054A8  0E7C               	movlw	high _show0_2
 10568  0054AA  205A               	addwfc	??_animation0+1,w,c
 10569  0054AC  6EF7               	movwf	tblptrh,c
 10570  0054AE                     	if	0	;There are less than 3 active tblptr bytes
 10571  0054AE                     	endif
 10572  0054AE  0008               	tblrd		*
 10573  0054B0  50F5               	movf	tablat,w,c
 10574  0054B2  EC58  F023         	call	_set_led
 10575                           
 10576                           ;newmain.c: 669: write_display();
 10577  0054B6  EC0A  F024         	call	_write_display	;wreg free
 10578                           
 10579                           ;newmain.c: 670: _delay((unsigned long)((10)*(4000000/4000.0)));
 10580  0054BA  0E0D               	movlw	13
 10581  0054BC  6E59               	movwf	??_animation0& (0+255),c
 10582  0054BE  0EFC               	movlw	252
 10583  0054C0                     u7177:
 10584  0054C0  2EE8               	decfsz	wreg,f,c
 10585  0054C2  D7FE               	bra	u7177
 10586  0054C4  2E59               	decfsz	??_animation0& (0+255),f,c
 10587  0054C6  D7FC               	bra	u7177
 10588                           
 10589                           ;newmain.c: 671: clr_led(show0_2[i]);
 10590  0054C8  505F               	movf	animation0@i,w,c
 10591  0054CA  0D01               	mullw	1
 10592  0054CC  0E63               	movlw	low _show0_2
 10593  0054CE  24F3               	addwf	prodl,w,c
 10594  0054D0  6EF6               	movwf	tblptrl,c
 10595  0054D2  0E7C               	movlw	high _show0_2
 10596  0054D4  20F4               	addwfc	prodh,w,c
 10597  0054D6  6EF7               	movwf	tblptrh,c
 10598  0054D8                     	if	0	;There are less than 3 active tblptr bytes
 10599  0054D8                     	endif
 10600  0054D8  0008               	tblrd		*
 10601  0054DA  50F5               	movf	tablat,w,c
 10602  0054DC  ECAF  F023         	call	_clr_led
 10603                           
 10604                           ;newmain.c: 672: clr_led(show0_2[i + 1]);
 10605  0054E0  505F               	movf	animation0@i,w,c
 10606  0054E2  6E59               	movwf	??_animation0& (0+255),c
 10607  0054E4  6A5A               	clrf	(??_animation0+1)& (0+255),c
 10608  0054E6  0E01               	movlw	1
 10609  0054E8  2659               	addwf	??_animation0,f,c
 10610  0054EA  0E00               	movlw	0
 10611  0054EC  225A               	addwfc	??_animation0+1,f,c
 10612  0054EE  0E63               	movlw	low _show0_2
 10613  0054F0  2459               	addwf	??_animation0,w,c
 10614  0054F2  6EF6               	movwf	tblptrl,c
 10615  0054F4  0E7C               	movlw	high _show0_2
 10616  0054F6  205A               	addwfc	??_animation0+1,w,c
 10617  0054F8  6EF7               	movwf	tblptrh,c
 10618  0054FA                     	if	0	;There are less than 3 active tblptr bytes
 10619  0054FA                     	endif
 10620  0054FA  0008               	tblrd		*
 10621  0054FC  50F5               	movf	tablat,w,c
 10622  0054FE  ECAF  F023         	call	_clr_led
 10623                           
 10624                           ;newmain.c: 673: write_display();
 10625  005502  EC0A  F024         	call	_write_display	;wreg free
 10626  005506  0E02               	movlw	2
 10627  005508  5E5F               	subwf	animation0@i,f,c
 10628  00550A  D7B4               	goto	l3542
 10629  00550C                     l263:
 10630  00550C  0E05               	movlw	5
 10631  00550E  185D               	xorwf	animation0@m,w,c
 10632  005510  A4D8               	btfss	status,2,c
 10633  005512  0012               	return	
 10634                           
 10635                           ;newmain.c: 676: int x = 0;
 10636  005514  0E00               	movlw	0
 10637  005516  6E5C               	movwf	animation0@x+1,c
 10638  005518  0E00               	movlw	0
 10639  00551A  6E5B               	movwf	animation0@x,c
 10640                           
 10641                           ;newmain.c: 677: for (i = n; i < 6; i++) {
 10642  00551C  C058  F05F         	movff	animation0@n,animation0@i
 10643  005520                     l3568:
 10644  005520  0E05               	movlw	5
 10645  005522  645F               	cpfsgt	animation0@i,c
 10646  005524  D001               	goto	l268
 10647  005526  D081               	goto	u4120
 10648  005528                     l268:
 10649                           
 10650                           ;newmain.c: 678: for (j = 0; j < 20; j++) {
 10651  005528  0E00               	movlw	0
 10652  00552A  6E5E               	movwf	animation0@j,c
 10653  00552C                     l3574:
 10654  00552C  0E13               	movlw	19
 10655  00552E  645E               	cpfsgt	animation0@j,c
 10656  005530  D001               	goto	l270
 10657  005532  D033               	goto	u4080
 10658  005534                     l270:
 10659                           
 10660                           ;newmain.c: 679: if (show0_3[i][j] != 100)
 10661  005534  505F               	movf	animation0@i,w,c
 10662  005536  0D14               	mullw	20
 10663  005538  0E55               	movlw	low _show0_3
 10664  00553A  6E59               	movwf	??_animation0& (0+255),c
 10665  00553C  0E78               	movlw	high _show0_3
 10666  00553E  6E5A               	movwf	(??_animation0+1)& (0+255),c
 10667  005540  50F3               	movf	prodl,w,c
 10668  005542  2659               	addwf	??_animation0,f,c
 10669  005544  50F4               	movf	prodh,w,c
 10670  005546  225A               	addwfc	??_animation0+1,f,c
 10671  005548  505E               	movf	animation0@j,w,c
 10672  00554A  0D01               	mullw	1
 10673  00554C  50F3               	movf	prodl,w,c
 10674  00554E  2659               	addwf	??_animation0,f,c
 10675  005550  50F4               	movf	prodh,w,c
 10676  005552  225A               	addwfc	??_animation0+1,f,c
 10677  005554  C059  FFF6         	movff	??_animation0,tblptrl
 10678  005558  C05A  FFF7         	movff	??_animation0+1,tblptrh
 10679  00555C                     	if	0	;tblptru may be non-zero
 10680  00555C                     	endif
 10681  00555C                     	if	0	;tblptru may be non-zero
 10682  00555C                     	endif
 10683  00555C  0008               	tblrd		*
 10684  00555E  50F5               	movf	tablat,w,c
 10685  005560  0A64               	xorlw	100
 10686  005562  B4D8               	btfsc	status,2,c
 10687  005564  D01A               	goto	u4080
 10688                           
 10689                           ;newmain.c: 680: set_led(show0_3[i][j]);
 10690  005566  505F               	movf	animation0@i,w,c
 10691  005568  0D14               	mullw	20
 10692  00556A  0E55               	movlw	low _show0_3
 10693  00556C  6E59               	movwf	??_animation0& (0+255),c
 10694  00556E  0E78               	movlw	high _show0_3
 10695  005570  6E5A               	movwf	(??_animation0+1)& (0+255),c
 10696  005572  50F3               	movf	prodl,w,c
 10697  005574  2659               	addwf	??_animation0,f,c
 10698  005576  50F4               	movf	prodh,w,c
 10699  005578  225A               	addwfc	??_animation0+1,f,c
 10700  00557A  505E               	movf	animation0@j,w,c
 10701  00557C  0D01               	mullw	1
 10702  00557E  50F3               	movf	prodl,w,c
 10703  005580  2659               	addwf	??_animation0,f,c
 10704  005582  50F4               	movf	prodh,w,c
 10705  005584  225A               	addwfc	??_animation0+1,f,c
 10706  005586  C059  FFF6         	movff	??_animation0,tblptrl
 10707  00558A  C05A  FFF7         	movff	??_animation0+1,tblptrh
 10708  00558E                     	if	0	;tblptru may be non-zero
 10709  00558E                     	endif
 10710  00558E                     	if	0	;tblptru may be non-zero
 10711  00558E                     	endif
 10712  00558E  0008               	tblrd		*
 10713  005590  50F5               	movf	tablat,w,c
 10714  005592  EC58  F023         	call	_set_led
 10715                           
 10716                           ;newmain.c: 681: else
 10717                           ;newmain.c: 682: break;
 10718  005596  2A5E               	incf	animation0@j,f,c
 10719  005598  D7C9               	goto	l3574
 10720  00559A                     u4080:
 10721                           
 10722                           ;newmain.c: 683: }
 10723                           ;newmain.c: 684: write_display();
 10724  00559A  EC0A  F024         	call	_write_display	;wreg free
 10725                           
 10726                           ;newmain.c: 685: _delay((unsigned long)((10)*(4000000/4000.0)));
 10727  00559E  0E0D               	movlw	13
 10728  0055A0  6E59               	movwf	??_animation0& (0+255),c
 10729  0055A2  0EFC               	movlw	252
 10730  0055A4                     u7187:
 10731  0055A4  2EE8               	decfsz	wreg,f,c
 10732  0055A6  D7FE               	bra	u7187
 10733  0055A8  2E59               	decfsz	??_animation0& (0+255),f,c
 10734  0055AA  D7FC               	bra	u7187
 10735                           
 10736                           ;newmain.c: 686: x++;
 10737  0055AC  4A5B               	infsnz	animation0@x,f,c
 10738  0055AE  2A5C               	incf	animation0@x+1,f,c
 10739                           
 10740                           ;newmain.c: 687: for (j = 0; j < 20; j++) {
 10741  0055B0  0E00               	movlw	0
 10742  0055B2  6E5E               	movwf	animation0@j,c
 10743  0055B4                     l3594:
 10744  0055B4  0E13               	movlw	19
 10745  0055B6  645E               	cpfsgt	animation0@j,c
 10746  0055B8  D001               	goto	l274
 10747  0055BA  D033               	goto	u4110
 10748  0055BC                     l274:
 10749                           
 10750                           ;newmain.c: 688: if (show0_3[i][j] != 100)
 10751  0055BC  505F               	movf	animation0@i,w,c
 10752  0055BE  0D14               	mullw	20
 10753  0055C0  0E55               	movlw	low _show0_3
 10754  0055C2  6E59               	movwf	??_animation0& (0+255),c
 10755  0055C4  0E78               	movlw	high _show0_3
 10756  0055C6  6E5A               	movwf	(??_animation0+1)& (0+255),c
 10757  0055C8  50F3               	movf	prodl,w,c
 10758  0055CA  2659               	addwf	??_animation0,f,c
 10759  0055CC  50F4               	movf	prodh,w,c
 10760  0055CE  225A               	addwfc	??_animation0+1,f,c
 10761  0055D0  505E               	movf	animation0@j,w,c
 10762  0055D2  0D01               	mullw	1
 10763  0055D4  50F3               	movf	prodl,w,c
 10764  0055D6  2659               	addwf	??_animation0,f,c
 10765  0055D8  50F4               	movf	prodh,w,c
 10766  0055DA  225A               	addwfc	??_animation0+1,f,c
 10767  0055DC  C059  FFF6         	movff	??_animation0,tblptrl
 10768  0055E0  C05A  FFF7         	movff	??_animation0+1,tblptrh
 10769  0055E4                     	if	0	;tblptru may be non-zero
 10770  0055E4                     	endif
 10771  0055E4                     	if	0	;tblptru may be non-zero
 10772  0055E4                     	endif
 10773  0055E4  0008               	tblrd		*
 10774  0055E6  50F5               	movf	tablat,w,c
 10775  0055E8  0A64               	xorlw	100
 10776  0055EA  B4D8               	btfsc	status,2,c
 10777  0055EC  D01A               	goto	u4110
 10778                           
 10779                           ;newmain.c: 689: clr_led(show0_3[i][j]);
 10780  0055EE  505F               	movf	animation0@i,w,c
 10781  0055F0  0D14               	mullw	20
 10782  0055F2  0E55               	movlw	low _show0_3
 10783  0055F4  6E59               	movwf	??_animation0& (0+255),c
 10784  0055F6  0E78               	movlw	high _show0_3
 10785  0055F8  6E5A               	movwf	(??_animation0+1)& (0+255),c
 10786  0055FA  50F3               	movf	prodl,w,c
 10787  0055FC  2659               	addwf	??_animation0,f,c
 10788  0055FE  50F4               	movf	prodh,w,c
 10789  005600  225A               	addwfc	??_animation0+1,f,c
 10790  005602  505E               	movf	animation0@j,w,c
 10791  005604  0D01               	mullw	1
 10792  005606  50F3               	movf	prodl,w,c
 10793  005608  2659               	addwf	??_animation0,f,c
 10794  00560A  50F4               	movf	prodh,w,c
 10795  00560C  225A               	addwfc	??_animation0+1,f,c
 10796  00560E  C059  FFF6         	movff	??_animation0,tblptrl
 10797  005612  C05A  FFF7         	movff	??_animation0+1,tblptrh
 10798  005616                     	if	0	;tblptru may be non-zero
 10799  005616                     	endif
 10800  005616                     	if	0	;tblptru may be non-zero
 10801  005616                     	endif
 10802  005616  0008               	tblrd		*
 10803  005618  50F5               	movf	tablat,w,c
 10804  00561A  ECAF  F023         	call	_clr_led
 10805                           
 10806                           ;newmain.c: 690: else
 10807                           ;newmain.c: 691: break;
 10808  00561E  2A5E               	incf	animation0@j,f,c
 10809  005620  D7C9               	goto	l3594
 10810  005622                     u4110:
 10811                           
 10812                           ;newmain.c: 692: }
 10813                           ;newmain.c: 693: write_display();
 10814  005622  EC0A  F024         	call	_write_display	;wreg free
 10815  005626  2A5F               	incf	animation0@i,f,c
 10816  005628  D77B               	goto	l3568
 10817  00562A                     u4120:
 10818                           
 10819                           ;newmain.c: 694: }
 10820                           ;newmain.c: 695: if (x < 3)
 10821  00562A  BE5C               	btfsc	animation0@x+1,7,c
 10822  00562C  D006               	goto	u4130
 10823  00562E  505C               	movf	animation0@x+1,w,c
 10824  005630  E10D               	bnz	l279
 10825  005632  0E03               	movlw	3
 10826  005634  5C5B               	subwf	animation0@x,w,c
 10827  005636  B0D8               	btfsc	status,0,c
 10828  005638  0012               	return	
 10829  00563A                     u4130:
 10830                           
 10831                           ;newmain.c: 696: _delay((unsigned long)((20)*(4000000/4000.0)));
 10832  00563A  0E1A               	movlw	26
 10833  00563C  6E59               	movwf	??_animation0& (0+255),c
 10834  00563E  0EF8               	movlw	248
 10835  005640                     u7197:
 10836  005640  2EE8               	decfsz	wreg,f,c
 10837  005642  D7FE               	bra	u7197
 10838  005644  2E59               	decfsz	??_animation0& (0+255),f,c
 10839  005646  D7FC               	bra	u7197
 10840  005648  D000               	nop2	
 10841  00564A  0012               	return	
 10842  00564C                     l279:
 10843  00564C  0012               	return		;funcret
 10844  00564E                     __end_of_animation0:
 10845                           	opt stack 0
 10846                           tblptru	equ	0xFF8
 10847                           tblptrh	equ	0xFF7
 10848                           tblptrl	equ	0xFF6
 10849                           tablat	equ	0xFF5
 10850                           prodh	equ	0xFF4
 10851                           prodl	equ	0xFF3
 10852                           postinc0	equ	0xFEE
 10853                           wreg	equ	0xFE8
 10854                           postinc1	equ	0xFE6
 10855                           fsr1h	equ	0xFE2
 10856                           fsr1l	equ	0xFE1
 10857                           indf2	equ	0xFDF
 10858                           postinc2	equ	0xFDE
 10859                           postdec2	equ	0xFDD
 10860                           fsr2h	equ	0xFDA
 10861                           fsr2l	equ	0xFD9
 10862                           status	equ	0xFD8
 10863                           
 10864 ;; *************** function _write_display *****************
 10865 ;; Defined at:
 10866 ;;		line 1175 in file "newmain.c"
 10867 ;; Parameters:    Size  Location     Type
 10868 ;;		None
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;  i               2   14[COMRAM] int 
 10871 ;;  j               2   12[COMRAM] int 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10881 ;;      Params:         0       0       0       0       0       0       0
 10882 ;;      Locals:         4       0       0       0       0       0       0
 10883 ;;      Temps:          6       0       0       0       0       0       0
 10884 ;;      Totals:        10       0       0       0       0       0       0
 10885 ;;Total ram usage:       10 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    3
 10888 ;; This function calls:
 10889 ;;		_MyIdleI2C
 10890 ;;		_MyStartI2C
 10891 ;;		_MyStopI2C
 10892 ;;		___wmul
 10893 ;;		_write
 10894 ;; This function is called by:
 10895 ;;		_main
 10896 ;;		_animation0
 10897 ;;		_animation1
 10898 ;;		_animation2
 10899 ;;		_animation3
 10900 ;;		_animation4
 10901 ;;		_animation5
 10902 ;;		_animation6
 10903 ;;		_animation7
 10904 ;; This function uses a non-reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text17
 10908  004814                     __ptext17:
 10909                           	opt stack 0
 10910  004814                     _write_display:
 10911                           	opt stack 27
 10912                           
 10913                           ;newmain.c: 1176: int i, j;
 10914                           ;newmain.c: 1177: for (i = 0; i < 4; i++) {
 10915                           
 10916                           ;incstack = 0
 10917  004814  0E00               	movlw	0
 10918  004816  6E52               	movwf	write_display@i+1,c
 10919  004818  0E00               	movlw	0
 10920  00481A  6E51               	movwf	write_display@i,c
 10921  00481C  BE52               	btfsc	write_display@i+1,7,c
 10922  00481E  D008               	goto	l551
 10923  004820  5052               	movf	write_display@i+1,w,c
 10924  004822  E105               	bnz	u3650
 10925  004824  0E04               	movlw	4
 10926  004826  5C51               	subwf	write_display@i,w,c
 10927  004828  B0D8               	btfsc	status,0,c
 10928  00482A  0012               	return	
 10929  00482C  D001               	goto	l551
 10930  00482E                     u3650:
 10931  00482E  0012               	return	
 10932  004830                     l551:
 10933                           
 10934                           ;newmain.c: 1178: MyIdleI2C();
 10935  004830  ECB0  F021         	call	_MyIdleI2C	;wreg free
 10936                           
 10937                           ;newmain.c: 1179: MyStartI2C();
 10938  004834  ECA9  F021         	call	_MyStartI2C	;wreg free
 10939                           
 10940                           ;newmain.c: 1180: MyIdleI2C();
 10941  004838  ECB0  F021         	call	_MyIdleI2C	;wreg free
 10942                           
 10943                           ;newmain.c: 1181: write(matrices[i].address | 0x00);
 10944  00483C  C051  F043         	movff	write_display@i,___wmul@multiplier
 10945  004840  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 10946  004844  0E00               	movlw	0
 10947  004846  6E46               	movwf	___wmul@multiplicand+1,c
 10948  004848  0E1D               	movlw	29
 10949  00484A  6E45               	movwf	___wmul@multiplicand,c
 10950  00484C  ECF1  F021         	call	___wmul	;wreg free
 10951  004850  0E80               	movlw	low _matrices
 10952  004852  2443               	addwf	?___wmul,w,c
 10953  004854  6ED9               	movwf	fsr2l,c
 10954  004856  0E00               	movlw	high _matrices
 10955  004858  2044               	addwfc	?___wmul+1,w,c
 10956  00485A  6EDA               	movwf	fsr2h,c
 10957  00485C  50DF               	movf	indf2,w,c
 10958  00485E  EC04  F022         	call	_write
 10959                           
 10960                           ;newmain.c: 1182: MyIdleI2C();
 10961  004862  ECB0  F021         	call	_MyIdleI2C	;wreg free
 10962                           
 10963                           ;newmain.c: 1183: write(0x00);
 10964  004866  0E00               	movlw	0
 10965  004868  EC04  F022         	call	_write
 10966                           
 10967                           ;newmain.c: 1184: MyIdleI2C();
 10968  00486C  ECB0  F021         	call	_MyIdleI2C	;wreg free
 10969                           
 10970                           ;newmain.c: 1186: for (j = 0; j < 8; j++) {
 10971  004870  0E00               	movlw	0
 10972  004872  6E50               	movwf	write_display@j+1,c
 10973  004874  0E00               	movlw	0
 10974  004876  6E4F               	movwf	write_display@j,c
 10975  004878                     l3298:
 10976  004878  BE50               	btfsc	write_display@j+1,7,c
 10977  00487A  D006               	goto	l553
 10978  00487C  5050               	movf	write_display@j+1,w,c
 10979  00487E  E15A               	bnz	l3308
 10980  004880  0E08               	movlw	8
 10981  004882  5C4F               	subwf	write_display@j,w,c
 10982  004884  B0D8               	btfsc	status,0,c
 10983  004886  D056               	goto	u3670
 10984  004888                     l553:
 10985                           
 10986                           ;newmain.c: 1187: write(matrices[i].display_buffer[j]&0xff);
 10987  004888  C051  F043         	movff	write_display@i,___wmul@multiplier
 10988  00488C  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 10989  004890  0E00               	movlw	0
 10990  004892  6E46               	movwf	___wmul@multiplicand+1,c
 10991  004894  0E1D               	movlw	29
 10992  004896  6E45               	movwf	___wmul@multiplicand,c
 10993  004898  ECF1  F021         	call	___wmul	;wreg free
 10994  00489C  C04F  F049         	movff	write_display@j,??_write_display
 10995  0048A0  C050  F04A         	movff	write_display@j+1,??_write_display+1
 10996  0048A4  90D8               	bcf	status,0,c
 10997  0048A6  3649               	rlcf	??_write_display,f,c
 10998  0048A8  364A               	rlcf	??_write_display+1,f,c
 10999  0048AA  0E0D               	movlw	13
 11000  0048AC  2649               	addwf	??_write_display,f,c
 11001  0048AE  0E00               	movlw	0
 11002  0048B0  224A               	addwfc	??_write_display+1,f,c
 11003  0048B2  0E80               	movlw	low _matrices
 11004  0048B4  6E4B               	movwf	(??_write_display+2)& (0+255),c
 11005  0048B6  0E00               	movlw	high _matrices
 11006  0048B8  6E4C               	movwf	(??_write_display+3)& (0+255),c
 11007  0048BA  5049               	movf	??_write_display,w,c
 11008  0048BC  264B               	addwf	??_write_display+2,f,c
 11009  0048BE  504A               	movf	??_write_display+1,w,c
 11010  0048C0  224C               	addwfc	??_write_display+3,f,c
 11011  0048C2  5043               	movf	?___wmul,w,c
 11012  0048C4  244B               	addwf	??_write_display+2,w,c
 11013  0048C6  6ED9               	movwf	fsr2l,c
 11014  0048C8  5044               	movf	?___wmul+1,w,c
 11015  0048CA  204C               	addwfc	??_write_display+3,w,c
 11016  0048CC  6EDA               	movwf	fsr2h,c
 11017  0048CE  50DF               	movf	indf2,w,c
 11018  0048D0  EC04  F022         	call	_write
 11019                           
 11020                           ;newmain.c: 1188: write(matrices[i].display_buffer[j] >> 8);
 11021  0048D4  C051  F043         	movff	write_display@i,___wmul@multiplier
 11022  0048D8  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 11023  0048DC  0E00               	movlw	0
 11024  0048DE  6E46               	movwf	___wmul@multiplicand+1,c
 11025  0048E0  0E1D               	movlw	29
 11026  0048E2  6E45               	movwf	___wmul@multiplicand,c
 11027  0048E4  ECF1  F021         	call	___wmul	;wreg free
 11028  0048E8  C04F  F049         	movff	write_display@j,??_write_display
 11029  0048EC  C050  F04A         	movff	write_display@j+1,??_write_display+1
 11030  0048F0  90D8               	bcf	status,0,c
 11031  0048F2  3649               	rlcf	??_write_display,f,c
 11032  0048F4  364A               	rlcf	??_write_display+1,f,c
 11033  0048F6  0E0D               	movlw	13
 11034  0048F8  2649               	addwf	??_write_display,f,c
 11035  0048FA  0E00               	movlw	0
 11036  0048FC  224A               	addwfc	??_write_display+1,f,c
 11037  0048FE  0E80               	movlw	low _matrices
 11038  004900  6E4B               	movwf	(??_write_display+2)& (0+255),c
 11039  004902  0E00               	movlw	high _matrices
 11040  004904  6E4C               	movwf	(??_write_display+3)& (0+255),c
 11041  004906  5049               	movf	??_write_display,w,c
 11042  004908  264B               	addwf	??_write_display+2,f,c
 11043  00490A  504A               	movf	??_write_display+1,w,c
 11044  00490C  224C               	addwfc	??_write_display+3,f,c
 11045  00490E  5043               	movf	?___wmul,w,c
 11046  004910  244B               	addwf	??_write_display+2,w,c
 11047  004912  6ED9               	movwf	fsr2l,c
 11048  004914  5044               	movf	?___wmul+1,w,c
 11049  004916  204C               	addwfc	??_write_display+3,w,c
 11050  004918  6EDA               	movwf	fsr2h,c
 11051  00491A  CFDE F04D          	movff	postinc2,??_write_display+4
 11052  00491E  CFDD F04E          	movff	postdec2,??_write_display+5
 11053  004922  C04E  F04D         	movff	??_write_display+5,??_write_display+4
 11054  004926  6A4E               	clrf	??_write_display+5,c
 11055  004928  504D               	movf	??_write_display+4,w,c
 11056  00492A  EC04  F022         	call	_write
 11057  00492E  4A4F               	infsnz	write_display@j,f,c
 11058  004930  2A50               	incf	write_display@j+1,f,c
 11059  004932  D7A2               	goto	l3298
 11060  004934                     u3670:
 11061  004934                     l3308:
 11062                           
 11063                           ;newmain.c: 1189: }
 11064                           ;newmain.c: 1190: MyStopI2C();
 11065  004934  ECAB  F021         	call	_MyStopI2C	;wreg free
 11066  004938  4A51               	infsnz	write_display@i,f,c
 11067  00493A  2A52               	incf	write_display@i+1,f,c
 11068  00493C  BE52               	btfsc	write_display@i+1,7,c
 11069  00493E  D778               	goto	l551
 11070  004940  5052               	movf	write_display@i+1,w,c
 11071  004942  E101               	bnz	l555
 11072  004944  D76F               	goto	L20
 11073  004946                     l555:
 11074  004946  0012               	return		;funcret
 11075  004948                     __end_of_write_display:
 11076                           	opt stack 0
 11077                           tblptru	equ	0xFF8
 11078                           tblptrh	equ	0xFF7
 11079                           tblptrl	equ	0xFF6
 11080                           tablat	equ	0xFF5
 11081                           prodh	equ	0xFF4
 11082                           prodl	equ	0xFF3
 11083                           postinc0	equ	0xFEE
 11084                           wreg	equ	0xFE8
 11085                           postinc1	equ	0xFE6
 11086                           fsr1h	equ	0xFE2
 11087                           fsr1l	equ	0xFE1
 11088                           indf2	equ	0xFDF
 11089                           postinc2	equ	0xFDE
 11090                           postdec2	equ	0xFDD
 11091                           fsr2h	equ	0xFDA
 11092                           fsr2l	equ	0xFD9
 11093                           status	equ	0xFD8
 11094                           
 11095 ;; *************** function _write *****************
 11096 ;; Defined at:
 11097 ;;		line 1303 in file "newmain.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  data_out        1    wreg     unsigned char 
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;  data_out        1    3[COMRAM] unsigned char 
 11102 ;;  status          2    4[COMRAM] int 
 11103 ;;  data            1    2[COMRAM] char 
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      void 
 11106 ;; Registers used:
 11107 ;;		wreg, status,2, status,0, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11113 ;;      Params:         0       0       0       0       0       0       0
 11114 ;;      Locals:         4       0       0       0       0       0       0
 11115 ;;      Temps:          0       0       0       0       0       0       0
 11116 ;;      Totals:         4       0       0       0       0       0       0
 11117 ;;Total ram usage:        4 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:    2
 11120 ;; This function calls:
 11121 ;;		_MyWriteI2C
 11122 ;; This function is called by:
 11123 ;;		_main
 11124 ;;		_write_display
 11125 ;;		_read_switch
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           	psect	text18
 11130  004408                     __ptext18:
 11131                           	opt stack 0
 11132  004408                     _write:
 11133                           	opt stack 27
 11134                           
 11135                           ;incstack = 0
 11136                           ;write@data_out stored from wreg
 11137  004408  6E46               	movwf	write@data_out,c
 11138                           
 11139                           ;newmain.c: 1304: signed char data;
 11140                           ;newmain.c: 1305: int status;
 11141                           ;newmain.c: 1306: data = SSPBUF;
 11142  00440A  CFC9 F045          	movff	4041,write@data	;volatile
 11143  00440E                     
 11144                           ;newmain.c: 1308: status = MyWriteI2C(data_out);
 11145  00440E  5046               	movf	write@data_out,w,c
 11146  004410  EC87  F022         	call	_MyWriteI2C
 11147  004414  6E47               	movwf	write@status,c
 11148  004416  6A48               	clrf	write@status+1,c
 11149  004418  BE47               	btfsc	write@status,7,c
 11150  00441A  0648               	decf	write@status+1,f,c
 11151                           
 11152                           ;newmain.c: 1309: if (status == -1) {
 11153  00441C  2847               	incf	write@status,w,c
 11154  00441E  E106               	bnz	l3254
 11155  004420  2848               	incf	write@status+1,w,c
 11156  004422  A4D8               	btfss	status,2,c
 11157  004424  D003               	goto	l620
 11158                           
 11159                           ;newmain.c: 1310: data = SSPBUF;
 11160  004426  CFC9 F045          	movff	4041,write@data	;volatile
 11161                           
 11162                           ;newmain.c: 1311: SSPCON1bits.WCOL = 0;
 11163  00442A  9EC6               	bcf	4038,7,c	;volatile
 11164  00442C                     l620:
 11165  00442C                     l3254:
 11166                           
 11167                           ;newmain.c: 1312: }
 11168                           ;newmain.c: 1313: } while (status != 0);
 11169  00442C  5047               	movf	write@status,w,c
 11170  00442E  1048               	iorwf	write@status+1,w,c
 11171  004430  B4D8               	btfsc	status,2,c
 11172  004432  0012               	return	
 11173  004434  D7EC               	goto	l619
 11174  004436                     __end_of_write:
 11175                           	opt stack 0
 11176                           tblptru	equ	0xFF8
 11177                           tblptrh	equ	0xFF7
 11178                           tblptrl	equ	0xFF6
 11179                           tablat	equ	0xFF5
 11180                           prodh	equ	0xFF4
 11181                           prodl	equ	0xFF3
 11182                           postinc0	equ	0xFEE
 11183                           wreg	equ	0xFE8
 11184                           postinc1	equ	0xFE6
 11185                           fsr1h	equ	0xFE2
 11186                           fsr1l	equ	0xFE1
 11187                           indf2	equ	0xFDF
 11188                           postinc2	equ	0xFDE
 11189                           postdec2	equ	0xFDD
 11190                           fsr2h	equ	0xFDA
 11191                           fsr2l	equ	0xFD9
 11192                           status	equ	0xFD8
 11193                           
 11194 ;; *************** function _MyWriteI2C *****************
 11195 ;; Defined at:
 11196 ;;		line 1275 in file "newmain.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;  data_out        1    wreg     unsigned char 
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;  data_out        1    1[COMRAM] unsigned char 
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  1    wreg      char 
 11203 ;; Registers used:
 11204 ;;		wreg, status,2, status,0, cstack
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11210 ;;      Params:         0       0       0       0       0       0       0
 11211 ;;      Locals:         1       0       0       0       0       0       0
 11212 ;;      Temps:          0       0       0       0       0       0       0
 11213 ;;      Totals:         1       0       0       0       0       0       0
 11214 ;;Total ram usage:        1 bytes
 11215 ;; Hardware stack levels used:    1
 11216 ;; Hardware stack levels required when called:    1
 11217 ;; This function calls:
 11218 ;;		_MyIdleI2C
 11219 ;; This function is called by:
 11220 ;;		_write
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           	psect	text19
 11225  00450E                     __ptext19:
 11226                           	opt stack 0
 11227  00450E                     _MyWriteI2C:
 11228                           	opt stack 27
 11229                           
 11230                           ;incstack = 0
 11231                           ;MyWriteI2C@data_out stored from wreg
 11232  00450E  6E44               	movwf	MyWriteI2C@data_out,c
 11233                           
 11234                           ;newmain.c: 1276: SSPBUF = data_out;
 11235  004510  C044  FFC9         	movff	MyWriteI2C@data_out,4041	;volatile
 11236                           
 11237                           ;newmain.c: 1277: if (SSPCON1bits.WCOL)
 11238  004514  AEC6               	btfss	4038,7,c	;volatile
 11239  004516  D002               	goto	l599
 11240                           
 11241                           ;newmain.c: 1278: return ( -1);
 11242  004518  0EFF               	movlw	255
 11243  00451A  0012               	return	
 11244  00451C                     l599:
 11245                           
 11246                           ;newmain.c: 1279: else {
 11247                           ;newmain.c: 1280: if (((SSPCON1 & 0x0F) != 0x08) && ((SSPCON1 & 0x0F) != 0x0B))
 11248  00451C  50C6               	movf	4038,w,c	;volatile
 11249  00451E  0B0F               	andlw	15
 11250  004520  0A08               	xorlw	8
 11251  004522  B4D8               	btfsc	status,2,c
 11252  004524  D00F               	goto	l602
 11253  004526  50C6               	movf	4038,w,c	;volatile
 11254  004528  0B0F               	andlw	15
 11255  00452A  0A0B               	xorlw	11
 11256  00452C  B4D8               	btfsc	status,2,c
 11257  00452E  D00A               	goto	l602
 11258                           
 11259                           ;newmain.c: 1281: {
 11260                           ;newmain.c: 1282: SSPCON1bits.CKP = 1;
 11261  004530  88C6               	bsf	4038,4,c	;volatile
 11262  004532  A69E               	btfss	3998,3,c	;volatile
 11263  004534  D7FE               	goto	l604
 11264                           
 11265                           ;newmain.c: 1285: if ((!SSPSTATbits.R_W) && (!SSPSTATbits.BF))
 11266  004536  A4C7               	btfss	4039,2,c	;volatile
 11267  004538  B0C7               	btfsc	4039,0,c	;volatile
 11268  00453A  D002               	goto	l606
 11269                           
 11270                           ;newmain.c: 1286: {
 11271                           ;newmain.c: 1287: return ( -2);
 11272  00453C  0EFE               	movlw	254
 11273                           
 11274                           ;newmain.c: 1288: } else {
 11275  00453E  0012               	return	
 11276  004540                     l606:
 11277                           
 11278                           ;newmain.c: 1289: return ( 0);
 11279  004540  0E00               	movlw	0
 11280                           
 11281                           ;newmain.c: 1290: }
 11282                           ;newmain.c: 1291: } else if (((SSPCON1 & 0x0F) == 0x08) || ((SSPCON1 & 0x0F) == 0x0B))
 11283  004542  0012               	return	
 11284  004544                     l602:
 11285  004544  50C6               	movf	4038,w,c	;volatile
 11286  004546  0B0F               	andlw	15
 11287  004548  0A08               	xorlw	8
 11288  00454A  B4D8               	btfsc	status,2,c
 11289  00454C  D005               	goto	u3560
 11290  00454E  50C6               	movf	4038,w,c	;volatile
 11291  004550  0B0F               	andlw	15
 11292  004552  0A0B               	xorlw	11
 11293  004554  A4D8               	btfss	status,2,c
 11294  004556  0012               	return	
 11295  004558                     u3560:
 11296                           
 11297                           ;newmain.c: 1292: {
 11298                           ;newmain.c: 1293: while (SSPSTATbits.BF);
 11299  004558  B0C7               	btfsc	4039,0,c	;volatile
 11300  00455A  D7FE               	goto	u3560
 11301                           
 11302                           ;newmain.c: 1294: MyIdleI2C();
 11303  00455C  ECB0  F021         	call	_MyIdleI2C	;wreg free
 11304                           
 11305                           ;newmain.c: 1295: if (SSPCON2bits.ACKSTAT)
 11306  004560  ACC5               	btfss	4037,6,c	;volatile
 11307  004562  D002               	goto	l615
 11308                           
 11309                           ;newmain.c: 1296: return ( -2);
 11310  004564  0EFE               	movlw	254
 11311  004566  0012               	return	
 11312  004568                     l615:
 11313                           
 11314                           ;newmain.c: 1297: else return ( 0);
 11315  004568  0E00               	movlw	0
 11316  00456A  0012               	return	
 11317  00456C                     __end_of_MyWriteI2C:
 11318                           	opt stack 0
 11319                           tblptru	equ	0xFF8
 11320                           tblptrh	equ	0xFF7
 11321                           tblptrl	equ	0xFF6
 11322                           tablat	equ	0xFF5
 11323                           prodh	equ	0xFF4
 11324                           prodl	equ	0xFF3
 11325                           postinc0	equ	0xFEE
 11326                           wreg	equ	0xFE8
 11327                           postinc1	equ	0xFE6
 11328                           fsr1h	equ	0xFE2
 11329                           fsr1l	equ	0xFE1
 11330                           indf2	equ	0xFDF
 11331                           postinc2	equ	0xFDE
 11332                           postdec2	equ	0xFDD
 11333                           fsr2h	equ	0xFDA
 11334                           fsr2l	equ	0xFD9
 11335                           status	equ	0xFD8
 11336                           
 11337 ;; *************** function _MyIdleI2C *****************
 11338 ;; Defined at:
 11339 ;;		line 1270 in file "newmain.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;		None
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;		None
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		wreg, status,2, status,0
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11353 ;;      Params:         0       0       0       0       0       0       0
 11354 ;;      Locals:         0       0       0       0       0       0       0
 11355 ;;      Temps:          1       0       0       0       0       0       0
 11356 ;;      Totals:         1       0       0       0       0       0       0
 11357 ;;Total ram usage:        1 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; This function calls:
 11360 ;;		Nothing
 11361 ;; This function is called by:
 11362 ;;		_main
 11363 ;;		_write_display
 11364 ;;		_read_switch
 11365 ;;		_MyWriteI2C
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text20
 11370  004360                     __ptext20:
 11371                           	opt stack 0
 11372  004360                     _MyIdleI2C:
 11373                           	opt stack 27
 11374                           
 11375                           ;newmain.c: 1272: continue;
 11376                           
 11377                           ;newmain.c: 1271: while ((SSPCON2 & 0x1F) || (SSPSTATbits.R_W))
 11378                           
 11379                           ;incstack = 0
 11380  004360  CFC5 F043          	movff	4037,??_MyIdleI2C	;volatile
 11381  004364  0E1F               	movlw	31
 11382  004366  1643               	andwf	??_MyIdleI2C,f,c
 11383  004368  A4D8               	btfss	status,2,c
 11384  00436A  D7FA               	goto	_MyIdleI2C
 11385  00436C  A4C7               	btfss	4039,2,c	;volatile
 11386  00436E  0012               	return	
 11387  004370  D7F7               	goto	_MyIdleI2C
 11388  004372                     __end_of_MyIdleI2C:
 11389                           	opt stack 0
 11390                           tblptru	equ	0xFF8
 11391                           tblptrh	equ	0xFF7
 11392                           tblptrl	equ	0xFF6
 11393                           tablat	equ	0xFF5
 11394                           prodh	equ	0xFF4
 11395                           prodl	equ	0xFF3
 11396                           postinc0	equ	0xFEE
 11397                           wreg	equ	0xFE8
 11398                           postinc1	equ	0xFE6
 11399                           fsr1h	equ	0xFE2
 11400                           fsr1l	equ	0xFE1
 11401                           indf2	equ	0xFDF
 11402                           postinc2	equ	0xFDE
 11403                           postdec2	equ	0xFDD
 11404                           fsr2h	equ	0xFDA
 11405                           fsr2l	equ	0xFD9
 11406                           status	equ	0xFD8
 11407                           
 11408 ;; *************** function _MyStopI2C *****************
 11409 ;; Defined at:
 11410 ;;		line 1262 in file "newmain.c"
 11411 ;; Parameters:    Size  Location     Type
 11412 ;;		None
 11413 ;; Auto vars:     Size  Location     Type
 11414 ;;		None
 11415 ;; Return value:  Size  Location     Type
 11416 ;;                  1    wreg      void 
 11417 ;; Registers used:
 11418 ;;		None
 11419 ;; Tracked objects:
 11420 ;;		On entry : 0/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11424 ;;      Params:         0       0       0       0       0       0       0
 11425 ;;      Locals:         0       0       0       0       0       0       0
 11426 ;;      Temps:          0       0       0       0       0       0       0
 11427 ;;      Totals:         0       0       0       0       0       0       0
 11428 ;;Total ram usage:        0 bytes
 11429 ;; Hardware stack levels used:    1
 11430 ;; This function calls:
 11431 ;;		Nothing
 11432 ;; This function is called by:
 11433 ;;		_main
 11434 ;;		_write_display
 11435 ;;		_read_switch
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text21
 11440  004356                     __ptext21:
 11441                           	opt stack 0
 11442  004356                     _MyStopI2C:
 11443                           	opt stack 29
 11444                           
 11445                           ;newmain.c: 1263: SSPCON2bits.PEN = 1;
 11446                           
 11447                           ;incstack = 0
 11448  004356  84C5               	bsf	4037,2,c	;volatile
 11449  004358  0012               	return		;funcret
 11450  00435A                     __end_of_MyStopI2C:
 11451                           	opt stack 0
 11452                           tblptru	equ	0xFF8
 11453                           tblptrh	equ	0xFF7
 11454                           tblptrl	equ	0xFF6
 11455                           tablat	equ	0xFF5
 11456                           prodh	equ	0xFF4
 11457                           prodl	equ	0xFF3
 11458                           postinc0	equ	0xFEE
 11459                           wreg	equ	0xFE8
 11460                           postinc1	equ	0xFE6
 11461                           fsr1h	equ	0xFE2
 11462                           fsr1l	equ	0xFE1
 11463                           indf2	equ	0xFDF
 11464                           postinc2	equ	0xFDE
 11465                           postdec2	equ	0xFDD
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function _MyStartI2C *****************
 11471 ;; Defined at:
 11472 ;;		line 1258 in file "newmain.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;		None
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		None
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11486 ;;      Params:         0       0       0       0       0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0
 11489 ;;      Totals:         0       0       0       0       0       0       0
 11490 ;;Total ram usage:        0 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_main
 11496 ;;		_write_display
 11497 ;;		_read_switch
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text22
 11502  004352                     __ptext22:
 11503                           	opt stack 0
 11504  004352                     _MyStartI2C:
 11505                           	opt stack 29
 11506                           
 11507                           ;newmain.c: 1259: SSPCON2bits.SEN = 1;
 11508                           
 11509                           ;incstack = 0
 11510  004352  80C5               	bsf	4037,0,c	;volatile
 11511  004354  0012               	return		;funcret
 11512  004356                     __end_of_MyStartI2C:
 11513                           	opt stack 0
 11514                           tblptru	equ	0xFF8
 11515                           tblptrh	equ	0xFF7
 11516                           tblptrl	equ	0xFF6
 11517                           tablat	equ	0xFF5
 11518                           prodh	equ	0xFF4
 11519                           prodl	equ	0xFF3
 11520                           postinc0	equ	0xFEE
 11521                           wreg	equ	0xFE8
 11522                           postinc1	equ	0xFE6
 11523                           fsr1h	equ	0xFE2
 11524                           fsr1l	equ	0xFE1
 11525                           indf2	equ	0xFDF
 11526                           postinc2	equ	0xFDE
 11527                           postdec2	equ	0xFDD
 11528                           fsr2h	equ	0xFDA
 11529                           fsr2l	equ	0xFD9
 11530                           status	equ	0xFD8
 11531                           
 11532 ;; *************** function _set_led *****************
 11533 ;; Defined at:
 11534 ;;		line 1201 in file "newmain.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;  i               1    wreg     unsigned char 
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  i               1   18[COMRAM] unsigned char 
 11539 ;;  led             2   16[COMRAM] int 
 11540 ;;  matrix          2   14[COMRAM] int 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11550 ;;      Params:         0       0       0       0       0       0       0
 11551 ;;      Locals:         5       0       0       0       0       0       0
 11552 ;;      Temps:          8       0       0       0       0       0       0
 11553 ;;      Totals:        13       0       0       0       0       0       0
 11554 ;;Total ram usage:       13 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    1
 11557 ;; This function calls:
 11558 ;;		___wmul
 11559 ;; This function is called by:
 11560 ;;		_main
 11561 ;;		_animation0
 11562 ;;		_animation1
 11563 ;;		_animation2
 11564 ;;		_animation3
 11565 ;;		_animation4
 11566 ;;		_animation5
 11567 ;;		_animation6
 11568 ;;		_animation7
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text23
 11573  0046B0                     __ptext23:
 11574                           	opt stack 0
 11575  0046B0                     _set_led:
 11576                           	opt stack 29
 11577                           
 11578                           ;incstack = 0
 11579                           ;set_led@i stored from wreg
 11580  0046B0  6E55               	movwf	set_led@i,c
 11581                           
 11582                           ;newmain.c: 1202: int matrix = i >> 4;
 11583  0046B2  C055  F049         	movff	set_led@i,??_set_led
 11584  0046B6  3A49               	swapf	??_set_led,f,c
 11585  0046B8  0E0F               	movlw	15
 11586  0046BA  1649               	andwf	??_set_led,f,c
 11587  0046BC  5049               	movf	??_set_led,w,c
 11588  0046BE  6E51               	movwf	set_led@matrix,c
 11589  0046C0  6A52               	clrf	set_led@matrix+1,c
 11590                           
 11591                           ;newmain.c: 1203: int led = i & 0b1111;
 11592  0046C2  C055  F049         	movff	set_led@i,??_set_led
 11593  0046C6  0E0F               	movlw	15
 11594  0046C8  1649               	andwf	??_set_led,f,c
 11595  0046CA  5049               	movf	??_set_led,w,c
 11596  0046CC  6E53               	movwf	set_led@led,c
 11597  0046CE  6A54               	clrf	set_led@led+1,c
 11598                           
 11599                           ;newmain.c: 1204: matrices[matrix].display_buffer[ledLUT[led] >> 4] |= (1 << (ledLUT[led
      +                          ]&0x0f));
 11600  0046D0  0EEF               	movlw	low _ledLUT
 11601  0046D2  2453               	addwf	set_led@led,w,c
 11602  0046D4  6EF6               	movwf	tblptrl,c
 11603  0046D6  0E7C               	movlw	high _ledLUT
 11604  0046D8  2054               	addwfc	set_led@led+1,w,c
 11605  0046DA  6EF7               	movwf	tblptrh,c
 11606  0046DC                     	if	0	;There are less than 3 active tblptr bytes
 11607  0046DC                     	endif
 11608  0046DC  0008               	tblrd		*
 11609  0046DE  CFF5 F049          	movff	tablat,??_set_led
 11610  0046E2  0E0F               	movlw	15
 11611  0046E4  1649               	andwf	??_set_led,f,c
 11612  0046E6  0E01               	movlw	1
 11613  0046E8  6E4A               	movwf	(??_set_led+1)& (0+255),c
 11614  0046EA  0E00               	movlw	0
 11615  0046EC  6E4B               	movwf	(??_set_led+2)& (0+255),c
 11616  0046EE  2A49               	incf	??_set_led,f,c
 11617  0046F0  D003               	goto	u3644
 11618  0046F2                     u3645:
 11619  0046F2  90D8               	bcf	status,0,c
 11620  0046F4  364A               	rlcf	??_set_led+1,f,c
 11621  0046F6  364B               	rlcf	??_set_led+2,f,c
 11622  0046F8                     u3644:
 11623  0046F8  2E49               	decfsz	??_set_led,f,c
 11624  0046FA  D7FB               	goto	u3645
 11625  0046FC  C051  F043         	movff	set_led@matrix,___wmul@multiplier
 11626  004700  C052  F044         	movff	set_led@matrix+1,___wmul@multiplier+1
 11627  004704  0E00               	movlw	0
 11628  004706  6E46               	movwf	___wmul@multiplicand+1,c
 11629  004708  0E1D               	movlw	29
 11630  00470A  6E45               	movwf	___wmul@multiplicand,c
 11631  00470C  ECF1  F021         	call	___wmul	;wreg free
 11632  004710  0EEF               	movlw	low _ledLUT
 11633  004712  2453               	addwf	set_led@led,w,c
 11634  004714  6EF6               	movwf	tblptrl,c
 11635  004716  0E7C               	movlw	high _ledLUT
 11636  004718  2054               	addwfc	set_led@led+1,w,c
 11637  00471A  6EF7               	movwf	tblptrh,c
 11638  00471C                     	if	0	;There are less than 3 active tblptr bytes
 11639  00471C                     	endif
 11640  00471C  0008               	tblrd		*
 11641  00471E  CFF5 F04C          	movff	tablat,??_set_led+3
 11642  004722  384C               	swapf	??_set_led+3,w,c
 11643  004724  0B0F               	andlw	15
 11644  004726  6E4D               	movwf	(??_set_led+4)& (0+255),c
 11645  004728  6A4E               	clrf	(??_set_led+5)& (0+255),c
 11646  00472A  90D8               	bcf	status,0,c
 11647  00472C  364D               	rlcf	??_set_led+4,f,c
 11648  00472E  364E               	rlcf	??_set_led+5,f,c
 11649  004730  0E0D               	movlw	13
 11650  004732  264D               	addwf	??_set_led+4,f,c
 11651  004734  0E00               	movlw	0
 11652  004736  224E               	addwfc	??_set_led+5,f,c
 11653  004738  0E80               	movlw	low _matrices
 11654  00473A  6E4F               	movwf	(??_set_led+6)& (0+255),c
 11655  00473C  0E00               	movlw	high _matrices
 11656  00473E  6E50               	movwf	(??_set_led+7)& (0+255),c
 11657  004740  504D               	movf	??_set_led+4,w,c
 11658  004742  264F               	addwf	??_set_led+6,f,c
 11659  004744  504E               	movf	??_set_led+5,w,c
 11660  004746  2250               	addwfc	??_set_led+7,f,c
 11661  004748  5043               	movf	?___wmul,w,c
 11662  00474A  244F               	addwf	??_set_led+6,w,c
 11663  00474C  6ED9               	movwf	fsr2l,c
 11664  00474E  5044               	movf	?___wmul+1,w,c
 11665  004750  2050               	addwfc	??_set_led+7,w,c
 11666  004752  6EDA               	movwf	fsr2h,c
 11667  004754  504A               	movf	??_set_led+1,w,c
 11668  004756  12DE               	iorwf	postinc2,f,c
 11669  004758  504B               	movf	??_set_led+2,w,c
 11670  00475A  12DD               	iorwf	postdec2,f,c
 11671  00475C  0012               	return		;funcret
 11672  00475E                     __end_of_set_led:
 11673                           	opt stack 0
 11674                           tblptru	equ	0xFF8
 11675                           tblptrh	equ	0xFF7
 11676                           tblptrl	equ	0xFF6
 11677                           tablat	equ	0xFF5
 11678                           prodh	equ	0xFF4
 11679                           prodl	equ	0xFF3
 11680                           postinc0	equ	0xFEE
 11681                           wreg	equ	0xFE8
 11682                           postinc1	equ	0xFE6
 11683                           fsr1h	equ	0xFE2
 11684                           fsr1l	equ	0xFE1
 11685                           indf2	equ	0xFDF
 11686                           postinc2	equ	0xFDE
 11687                           postdec2	equ	0xFDD
 11688                           fsr2h	equ	0xFDA
 11689                           fsr2l	equ	0xFD9
 11690                           status	equ	0xFD8
 11691                           
 11692 ;; *************** function _clr_led *****************
 11693 ;; Defined at:
 11694 ;;		line 1195 in file "newmain.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;  i               1    wreg     unsigned char 
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;  i               1   20[COMRAM] unsigned char 
 11699 ;;  led             2   18[COMRAM] int 
 11700 ;;  matrix          2   16[COMRAM] int 
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1    wreg      void 
 11703 ;; Registers used:
 11704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11710 ;;      Params:         0       0       0       0       0       0       0
 11711 ;;      Locals:         5       0       0       0       0       0       0
 11712 ;;      Temps:         10       0       0       0       0       0       0
 11713 ;;      Totals:        15       0       0       0       0       0       0
 11714 ;;Total ram usage:       15 bytes
 11715 ;; Hardware stack levels used:    1
 11716 ;; Hardware stack levels required when called:    1
 11717 ;; This function calls:
 11718 ;;		___wmul
 11719 ;; This function is called by:
 11720 ;;		_main
 11721 ;;		_animation0
 11722 ;;		_animation1
 11723 ;;		_animation2
 11724 ;;		_animation3
 11725 ;;		_animation4
 11726 ;;		_animation5
 11727 ;;		_animation6
 11728 ;;		_animation7
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           	psect	text24
 11733  00475E                     __ptext24:
 11734                           	opt stack 0
 11735  00475E                     _clr_led:
 11736                           	opt stack 29
 11737                           
 11738                           ;incstack = 0
 11739                           ;clr_led@i stored from wreg
 11740  00475E  6E57               	movwf	clr_led@i,c
 11741                           
 11742                           ;newmain.c: 1196: int matrix = i >> 4;
 11743  004760  C057  F049         	movff	clr_led@i,??_clr_led
 11744  004764  3A49               	swapf	??_clr_led,f,c
 11745  004766  0E0F               	movlw	15
 11746  004768  1649               	andwf	??_clr_led,f,c
 11747  00476A  5049               	movf	??_clr_led,w,c
 11748  00476C  6E53               	movwf	clr_led@matrix,c
 11749  00476E  6A54               	clrf	clr_led@matrix+1,c
 11750                           
 11751                           ;newmain.c: 1197: int led = i & 0b1111;
 11752  004770  C057  F049         	movff	clr_led@i,??_clr_led
 11753  004774  0E0F               	movlw	15
 11754  004776  1649               	andwf	??_clr_led,f,c
 11755  004778  5049               	movf	??_clr_led,w,c
 11756  00477A  6E55               	movwf	clr_led@led,c
 11757  00477C  6A56               	clrf	clr_led@led+1,c
 11758                           
 11759                           ;newmain.c: 1198: matrices[matrix].display_buffer[ledLUT[led] >> 4] &= ~(1 << (ledLUT[le
      +                          d]&0x0f));
 11760  00477E  0EEF               	movlw	low _ledLUT
 11761  004780  2455               	addwf	clr_led@led,w,c
 11762  004782  6EF6               	movwf	tblptrl,c
 11763  004784  0E7C               	movlw	high _ledLUT
 11764  004786  2056               	addwfc	clr_led@led+1,w,c
 11765  004788  6EF7               	movwf	tblptrh,c
 11766  00478A                     	if	0	;There are less than 3 active tblptr bytes
 11767  00478A                     	endif
 11768  00478A  0008               	tblrd		*
 11769  00478C  CFF5 F049          	movff	tablat,??_clr_led
 11770  004790  0E0F               	movlw	15
 11771  004792  1649               	andwf	??_clr_led,f,c
 11772  004794  0E01               	movlw	1
 11773  004796  6E4A               	movwf	(??_clr_led+1)& (0+255),c
 11774  004798  0E00               	movlw	0
 11775  00479A  6E4B               	movwf	(??_clr_led+2)& (0+255),c
 11776  00479C  2A49               	incf	??_clr_led,f,c
 11777  00479E  D003               	goto	u3694
 11778  0047A0                     u3695:
 11779  0047A0  90D8               	bcf	status,0,c
 11780  0047A2  364A               	rlcf	??_clr_led+1,f,c
 11781  0047A4  364B               	rlcf	??_clr_led+2,f,c
 11782  0047A6                     u3694:
 11783  0047A6  2E49               	decfsz	??_clr_led,f,c
 11784  0047A8  D7FB               	goto	u3695
 11785  0047AA  1C4A               	comf	??_clr_led+1,w,c
 11786  0047AC  6E4C               	movwf	(??_clr_led+3)& (0+255),c
 11787  0047AE  1C4B               	comf	??_clr_led+2,w,c
 11788  0047B0  6E4D               	movwf	(??_clr_led+4)& (0+255),c
 11789  0047B2  C053  F043         	movff	clr_led@matrix,___wmul@multiplier
 11790  0047B6  C054  F044         	movff	clr_led@matrix+1,___wmul@multiplier+1
 11791  0047BA  0E00               	movlw	0
 11792  0047BC  6E46               	movwf	___wmul@multiplicand+1,c
 11793  0047BE  0E1D               	movlw	29
 11794  0047C0  6E45               	movwf	___wmul@multiplicand,c
 11795  0047C2  ECF1  F021         	call	___wmul	;wreg free
 11796  0047C6  0EEF               	movlw	low _ledLUT
 11797  0047C8  2455               	addwf	clr_led@led,w,c
 11798  0047CA  6EF6               	movwf	tblptrl,c
 11799  0047CC  0E7C               	movlw	high _ledLUT
 11800  0047CE  2056               	addwfc	clr_led@led+1,w,c
 11801  0047D0  6EF7               	movwf	tblptrh,c
 11802  0047D2                     	if	0	;There are less than 3 active tblptr bytes
 11803  0047D2                     	endif
 11804  0047D2  0008               	tblrd		*
 11805  0047D4  CFF5 F04E          	movff	tablat,??_clr_led+5
 11806  0047D8  384E               	swapf	??_clr_led+5,w,c
 11807  0047DA  0B0F               	andlw	15
 11808  0047DC  6E4F               	movwf	(??_clr_led+6)& (0+255),c
 11809  0047DE  6A50               	clrf	(??_clr_led+7)& (0+255),c
 11810  0047E0  90D8               	bcf	status,0,c
 11811  0047E2  364F               	rlcf	??_clr_led+6,f,c
 11812  0047E4  3650               	rlcf	??_clr_led+7,f,c
 11813  0047E6  0E0D               	movlw	13
 11814  0047E8  264F               	addwf	??_clr_led+6,f,c
 11815  0047EA  0E00               	movlw	0
 11816  0047EC  2250               	addwfc	??_clr_led+7,f,c
 11817  0047EE  0E80               	movlw	low _matrices
 11818  0047F0  6E51               	movwf	(??_clr_led+8)& (0+255),c
 11819  0047F2  0E00               	movlw	high _matrices
 11820  0047F4  6E52               	movwf	(??_clr_led+9)& (0+255),c
 11821  0047F6  504F               	movf	??_clr_led+6,w,c
 11822  0047F8  2651               	addwf	??_clr_led+8,f,c
 11823  0047FA  5050               	movf	??_clr_led+7,w,c
 11824  0047FC  2252               	addwfc	??_clr_led+9,f,c
 11825  0047FE  5043               	movf	?___wmul,w,c
 11826  004800  2451               	addwf	??_clr_led+8,w,c
 11827  004802  6ED9               	movwf	fsr2l,c
 11828  004804  5044               	movf	?___wmul+1,w,c
 11829  004806  2052               	addwfc	??_clr_led+9,w,c
 11830  004808  6EDA               	movwf	fsr2h,c
 11831  00480A  504C               	movf	??_clr_led+3,w,c
 11832  00480C  16DE               	andwf	postinc2,f,c
 11833  00480E  504D               	movf	??_clr_led+4,w,c
 11834  004810  16DD               	andwf	postdec2,f,c
 11835  004812  0012               	return		;funcret
 11836  004814                     __end_of_clr_led:
 11837                           	opt stack 0
 11838                           tblptru	equ	0xFF8
 11839                           tblptrh	equ	0xFF7
 11840                           tblptrl	equ	0xFF6
 11841                           tablat	equ	0xFF5
 11842                           prodh	equ	0xFF4
 11843                           prodl	equ	0xFF3
 11844                           postinc0	equ	0xFEE
 11845                           wreg	equ	0xFE8
 11846                           postinc1	equ	0xFE6
 11847                           fsr1h	equ	0xFE2
 11848                           fsr1l	equ	0xFE1
 11849                           indf2	equ	0xFDF
 11850                           postinc2	equ	0xFDE
 11851                           postdec2	equ	0xFDD
 11852                           fsr2h	equ	0xFDA
 11853                           fsr2l	equ	0xFD9
 11854                           status	equ	0xFD8
 11855                           
 11856 ;; *************** function ___wmul *****************
 11857 ;; Defined at:
 11858 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  multiplier      2    0[COMRAM] unsigned int 
 11861 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;  product         2    4[COMRAM] unsigned int 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  2    0[COMRAM] unsigned int 
 11866 ;; Registers used:
 11867 ;;		wreg, status,2, status,0, prodl, prodh
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11873 ;;      Params:         4       0       0       0       0       0       0
 11874 ;;      Locals:         2       0       0       0       0       0       0
 11875 ;;      Temps:          0       0       0       0       0       0       0
 11876 ;;      Totals:         6       0       0       0       0       0       0
 11877 ;;Total ram usage:        6 bytes
 11878 ;; Hardware stack levels used:    1
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		_main
 11883 ;;		_animation2
 11884 ;;		_animation3
 11885 ;;		_animation7
 11886 ;;		_write_display
 11887 ;;		_clr_led
 11888 ;;		_set_led
 11889 ;;		_is_key_pressed
 11890 ;;		_was_key_pressed
 11891 ;;		_read_switch
 11892 ;;		_is_led
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           	psect	text25
 11897  0043E2                     __ptext25:
 11898                           	opt stack 0
 11899  0043E2                     ___wmul:
 11900                           	opt stack 29
 11901                           
 11902                           ;incstack = 0
 11903  0043E2  5043               	movf	___wmul@multiplier,w,c
 11904  0043E4  0245               	mulwf	___wmul@multiplicand,c
 11905  0043E6  CFF3 F047          	movff	prodl,___wmul@product
 11906  0043EA  CFF4 F048          	movff	prodh,___wmul@product+1
 11907  0043EE  5043               	movf	___wmul@multiplier,w,c
 11908  0043F0  0246               	mulwf	___wmul@multiplicand+1,c
 11909  0043F2  50F3               	movf	prodl,w,c
 11910  0043F4  2648               	addwf	___wmul@product+1,f,c
 11911  0043F6  5044               	movf	___wmul@multiplier+1,w,c
 11912  0043F8  0245               	mulwf	___wmul@multiplicand,c
 11913  0043FA  50F3               	movf	prodl,w,c
 11914  0043FC  2648               	addwf	___wmul@product+1,f,c
 11915  0043FE  C047  F043         	movff	___wmul@product,?___wmul
 11916  004402  C048  F044         	movff	___wmul@product+1,?___wmul+1
 11917  004406  0012               	return	
 11918  004408                     __end_of___wmul:
 11919                           	opt stack 0
 11920                           tblptru	equ	0xFF8
 11921                           tblptrh	equ	0xFF7
 11922                           tblptrl	equ	0xFF6
 11923                           tablat	equ	0xFF5
 11924                           prodh	equ	0xFF4
 11925                           prodl	equ	0xFF3
 11926                           postinc0	equ	0xFEE
 11927                           wreg	equ	0xFE8
 11928                           postinc1	equ	0xFE6
 11929                           fsr1h	equ	0xFE2
 11930                           fsr1l	equ	0xFE1
 11931                           indf2	equ	0xFDF
 11932                           postinc2	equ	0xFDE
 11933                           postdec2	equ	0xFDD
 11934                           fsr2h	equ	0xFDA
 11935                           fsr2l	equ	0xFD9
 11936                           status	equ	0xFD8
 11937                           
 11938 ;; *************** function _Myusartinit *****************
 11939 ;; Defined at:
 11940 ;;		line 605 in file "newmain.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      void 
 11947 ;; Registers used:
 11948 ;;		wreg, status,2
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11954 ;;      Params:         0       0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		_main
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           	psect	text26
 11968  004372                     __ptext26:
 11969                           	opt stack 0
 11970  004372                     _Myusartinit:
 11971                           	opt stack 30
 11972                           
 11973                           ;newmain.c: 607: TRISCbits.TRISC6 = 1;
 11974                           
 11975                           ;incstack = 0
 11976  004372  8C94               	bsf	3988,6,c	;volatile
 11977                           
 11978                           ;newmain.c: 608: TRISCbits.TRISC7 = 1;
 11979  004374  8E94               	bsf	3988,7,c	;volatile
 11980                           
 11981                           ;newmain.c: 610: BAUDCONbits.BRG16 = 0;
 11982  004376  96B8               	bcf	4024,3,c	;volatile
 11983                           
 11984                           ;newmain.c: 611: TXSTAbits.BRGH = 1;
 11985  004378  84AC               	bsf	4012,2,c	;volatile
 11986                           
 11987                           ;newmain.c: 612: SPBRG = 25;
 11988  00437A  0E19               	movlw	25
 11989  00437C  6EAF               	movwf	4015,c	;volatile
 11990                           
 11991                           ;newmain.c: 615: TXSTAbits.SYNC = 0;
 11992  00437E  98AC               	bcf	4012,4,c	;volatile
 11993                           
 11994                           ;newmain.c: 616: RCSTAbits.SPEN = 1;
 11995  004380  8EAB               	bsf	4011,7,c	;volatile
 11996                           
 11997                           ;newmain.c: 619: TXSTAbits.TXEN = 1;
 11998  004382  8AAC               	bsf	4012,5,c	;volatile
 11999  004384  0012               	return	
 12000  004386                     __end_of_Myusartinit:
 12001                           	opt stack 0
 12002                           tblptru	equ	0xFF8
 12003                           tblptrh	equ	0xFF7
 12004                           tblptrl	equ	0xFF6
 12005                           tablat	equ	0xFF5
 12006                           prodh	equ	0xFF4
 12007                           prodl	equ	0xFF3
 12008                           postinc0	equ	0xFEE
 12009                           wreg	equ	0xFE8
 12010                           postinc1	equ	0xFE6
 12011                           fsr1h	equ	0xFE2
 12012                           fsr1l	equ	0xFE1
 12013                           indf2	equ	0xFDF
 12014                           postinc2	equ	0xFDE
 12015                           postdec2	equ	0xFDD
 12016                           fsr2h	equ	0xFDA
 12017                           fsr2l	equ	0xFD9
 12018                           status	equ	0xFD8
 12019                           
 12020 ;; *************** function _MyOpenI2C *****************
 12021 ;; Defined at:
 12022 ;;		line 1315 in file "newmain.c"
 12023 ;; Parameters:    Size  Location     Type
 12024 ;;  sync_mode       1    wreg     unsigned char 
 12025 ;;  slew            1    0[COMRAM] unsigned char 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  sync_mode       1    1[COMRAM] unsigned char 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      void 
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12037 ;;      Params:         1       0       0       0       0       0       0
 12038 ;;      Locals:         1       0       0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0
 12040 ;;      Totals:         2       0       0       0       0       0       0
 12041 ;;Total ram usage:        2 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; This function calls:
 12044 ;;		Nothing
 12045 ;; This function is called by:
 12046 ;;		_main
 12047 ;; This function uses a non-reentrant model
 12048 ;;
 12049                           
 12050                           	psect	text27
 12051  0043A2                     __ptext27:
 12052                           	opt stack 0
 12053  0043A2                     _MyOpenI2C:
 12054                           	opt stack 30
 12055                           
 12056                           ;incstack = 0
 12057                           ;MyOpenI2C@sync_mode stored from wreg
 12058  0043A2  6E44               	movwf	MyOpenI2C@sync_mode,c
 12059                           
 12060                           ;newmain.c: 1316: SSPSTAT &= 0x3F;
 12061  0043A4  0E3F               	movlw	63
 12062  0043A6  16C7               	andwf	4039,f,c	;volatile
 12063                           
 12064                           ;newmain.c: 1317: SSPCON1 = 0x00;
 12065  0043A8  0E00               	movlw	0
 12066  0043AA  6EC6               	movwf	4038,c	;volatile
 12067                           
 12068                           ;newmain.c: 1318: SSPCON2 = 0x00;
 12069  0043AC  0E00               	movlw	0
 12070  0043AE  6EC5               	movwf	4037,c	;volatile
 12071                           
 12072                           ;newmain.c: 1319: SSPCON1 |= sync_mode;
 12073  0043B0  5044               	movf	MyOpenI2C@sync_mode,w,c
 12074  0043B2  12C6               	iorwf	4038,f,c	;volatile
 12075                           
 12076                           ;newmain.c: 1320: SSPSTAT |= slew;
 12077  0043B4  5043               	movf	MyOpenI2C@slew,w,c
 12078  0043B6  12C7               	iorwf	4039,f,c	;volatile
 12079                           
 12080                           ;newmain.c: 1322: TRISCbits.TRISC3 = 1;
 12081  0043B8  8694               	bsf	3988,3,c	;volatile
 12082                           
 12083                           ;newmain.c: 1323: TRISCbits.TRISC4 = 1;
 12084  0043BA  8894               	bsf	3988,4,c	;volatile
 12085                           
 12086                           ;newmain.c: 1325: SSPCON1 |= 0b00100000;
 12087  0043BC  8AC6               	bsf	4038,5,c	;volatile
 12088  0043BE  0012               	return		;funcret
 12089  0043C0                     __end_of_MyOpenI2C:
 12090                           	opt stack 0
 12091                           tblptru	equ	0xFF8
 12092                           tblptrh	equ	0xFF7
 12093                           tblptrl	equ	0xFF6
 12094                           tablat	equ	0xFF5
 12095                           prodh	equ	0xFF4
 12096                           prodl	equ	0xFF3
 12097                           postinc0	equ	0xFEE
 12098                           wreg	equ	0xFE8
 12099                           postinc1	equ	0xFE6
 12100                           fsr1h	equ	0xFE2
 12101                           fsr1l	equ	0xFE1
 12102                           indf2	equ	0xFDF
 12103                           postinc2	equ	0xFDE
 12104                           postdec2	equ	0xFDD
 12105                           fsr2h	equ	0xFDA
 12106                           fsr2l	equ	0xFD9
 12107                           status	equ	0xFD8
 12108                           
 12109 ;; *************** function _MyCloseI2C *****************
 12110 ;; Defined at:
 12111 ;;		line 1266 in file "newmain.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;		None
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;                  1    wreg      void 
 12118 ;; Registers used:
 12119 ;;		status,2, status,0
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12125 ;;      Params:         0       0       0       0       0       0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0
 12127 ;;      Temps:          0       0       0       0       0       0       0
 12128 ;;      Totals:         0       0       0       0       0       0       0
 12129 ;;Total ram usage:        0 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; This function calls:
 12132 ;;		Nothing
 12133 ;; This function is called by:
 12134 ;;		_main
 12135 ;; This function uses a non-reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text28
 12139  00434E                     __ptext28:
 12140                           	opt stack 0
 12141  00434E                     _MyCloseI2C:
 12142                           	opt stack 30
 12143                           
 12144                           ;newmain.c: 1267: SSPCON1 &= 0xDF;
 12145                           
 12146                           ;incstack = 0
 12147  00434E  9AC6               	bcf	4038,5,c	;volatile
 12148  004350  0012               	return		;funcret
 12149  004352                     __end_of_MyCloseI2C:
 12150                           	opt stack 0
 12151                           tblptru	equ	0xFF8
 12152                           tblptrh	equ	0xFF7
 12153                           tblptrl	equ	0xFF6
 12154                           tablat	equ	0xFF5
 12155                           prodh	equ	0xFF4
 12156                           prodl	equ	0xFF3
 12157                           postinc0	equ	0xFEE
 12158                           wreg	equ	0xFE8
 12159                           postinc1	equ	0xFE6
 12160                           fsr1h	equ	0xFE2
 12161                           fsr1l	equ	0xFE1
 12162                           indf2	equ	0xFDF
 12163                           postinc2	equ	0xFDE
 12164                           postdec2	equ	0xFDD
 12165                           fsr2h	equ	0xFDA
 12166                           fsr2l	equ	0xFD9
 12167                           status	equ	0xFD8
 12168                           tblptru	equ	0xFF8
 12169                           tblptrh	equ	0xFF7
 12170                           tblptrl	equ	0xFF6
 12171                           tablat	equ	0xFF5
 12172                           prodh	equ	0xFF4
 12173                           prodl	equ	0xFF3
 12174                           postinc0	equ	0xFEE
 12175                           wreg	equ	0xFE8
 12176                           postinc1	equ	0xFE6
 12177                           fsr1h	equ	0xFE2
 12178                           fsr1l	equ	0xFE1
 12179                           indf2	equ	0xFDF
 12180                           postinc2	equ	0xFDE
 12181                           postdec2	equ	0xFDD
 12182                           fsr2h	equ	0xFDA
 12183                           fsr2l	equ	0xFD9
 12184                           status	equ	0xFD8
 12185                           
 12186                           	psect	rparam
 12187  0000                     tblptru	equ	0xFF8
 12188                           tblptrh	equ	0xFF7
 12189                           tblptrl	equ	0xFF6
 12190                           tablat	equ	0xFF5
 12191                           prodh	equ	0xFF4
 12192                           prodl	equ	0xFF3
 12193                           postinc0	equ	0xFEE
 12194                           wreg	equ	0xFE8
 12195                           postinc1	equ	0xFE6
 12196                           fsr1h	equ	0xFE2
 12197                           fsr1l	equ	0xFE1
 12198                           indf2	equ	0xFDF
 12199                           postinc2	equ	0xFDE
 12200                           postdec2	equ	0xFDD
 12201                           fsr2h	equ	0xFDA
 12202                           fsr2l	equ	0xFD9
 12203                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1618
    Data        2
    BSS         310
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57     125
    BANK0           128      0     116
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    memcpy@s1	PTR const void  size(2) Largest target is 116
		 -> matrices.keys(BANK0[6]), matrices(BANK0[116]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 116
		 -> matrices.keys(BANK0[6]), matrices(BANK0[116]), 

    MygetsI2C@rdptr	PTR unsigned char  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    sp__memcpy	PTR void  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 


Critical Paths under _main in COMRAM

    _main->_animation2
    _was_key_pressed->___wmul
    _read_switch->_memcpy
    _memcpy->___wmul
    _MygetsI2C->___wmul
    _is_key_pressed->___wmul
    _animation7->_clr_led
    _animation6->_clr_led
    _animation5->_clr_led
    _animation4->_clr_led
    _animation3->_clr_led
    _animation2->_clr_led
    _animation1->_clr_led
    _animation0->_clr_led
    _write_display->___wmul
    _write_display->_write
    _write->_MyWriteI2C
    _MyWriteI2C->_MyIdleI2C
    _set_led->___wmul
    _clr_led->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  335922
                                             38 COMRAM    19    19      0
                         _MyCloseI2C
                          _MyIdleI2C
                          _MyOpenI2C
                         _MyStartI2C
                          _MyStopI2C
                        _Myusartinit
                             ___wmul
                         _animation0
                         _animation1
                         _animation2
                         _animation3
                         _animation4
                         _animation5
                         _animation6
                         _animation7
                            _clr_led
                     _is_key_pressed
                        _read_switch
                          _send_note
                            _set_led
                    _was_key_pressed
                              _write
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _was_key_pressed                                     13    13      0    9391
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _send_note                                            3     1      2     978
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _read_switch                                         14    14      0   10250
                                             17 COMRAM    14    14      0
                          _MyIdleI2C
                        _MyNotAckI2C
                         _MyStartI2C
                          _MyStopI2C
                          _MygetsI2C
                             ___wmul
                             _memcpy
                              _write
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     371
                                              6 COMRAM    11     5      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _MygetsI2C                                            3     0      3     219
                                              6 COMRAM     3     0      3
                          _MyReadI2C
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MyReadI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyNotAckI2C                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _is_key_pressed                                      13    13      0    9391
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _animation7                                           7     7      0   38929
                                             21 COMRAM     7     7      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation6                                          15    14      1   29100
                                             21 COMRAM    15    14      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation5                                           8     6      2   29761
                                             21 COMRAM     8     6      2
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation4                                           6     5      1   29820
                                             21 COMRAM     6     5      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation3                                           9     9      0   39293
                                             21 COMRAM     9     9      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation2                                          17    15      2   39785
                                             21 COMRAM    17    15      2
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation1                                           8     7      1   28925
                                             21 COMRAM     8     7      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation0                                           8     7      1   29438
                                             21 COMRAM     8     7      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _write_display                                       10    10      0    9572
                                              6 COMRAM    10    10      0
                          _MyIdleI2C
                         _MyStartI2C
                          _MyStopI2C
                             ___wmul
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     4      0      91
                                              2 COMRAM     4     4      0
                         _MyWriteI2C
 ---------------------------------------------------------------------------------
 (3) _MyWriteI2C                                           1     1      0      22
                                              1 COMRAM     1     1      0
                          _MyIdleI2C
 ---------------------------------------------------------------------------------
 (4) _MyIdleI2C                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MyStopI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyStartI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_led                                             13    13      0    9391
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _clr_led                                             15    15      0    9391
                                              6 COMRAM    15    15      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    9279
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Myusartinit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MyOpenI2C                                            2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _MyCloseI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyCloseI2C
   _MyIdleI2C
   _MyOpenI2C
   _MyStartI2C
   _MyStopI2C
   _Myusartinit
   ___wmul
   _animation0
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation1
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation2
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation3
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation4
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation5
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation6
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation7
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _clr_led
     ___wmul
   _is_key_pressed
     ___wmul
   _read_switch
     _MyIdleI2C
     _MyNotAckI2C
     _MyStartI2C
     _MyStopI2C
     _MygetsI2C
       _MyReadI2C
       ___wmul (ARG)
     ___wmul
     _memcpy
       ___wmul (ARG)
     _write
       _MyWriteI2C
         _MyIdleI2C
   _send_note
   _set_led
     ___wmul
   _was_key_pressed
     ___wmul
   _write
     _MyWriteI2C
       _MyIdleI2C
   _write_display
     _MyIdleI2C
     _MyStartI2C
     _MyStopI2C
     ___wmul
     _write
       _MyWriteI2C
         _MyIdleI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      74       4       90.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     39      7D       1       98.4%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     171      14        0.0%
DATA                 0      0     171      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jan 08 18:03:08 2018

    is_key_pressed@matrix 0051               _SSPSTATbits 000FC7       ___wmul@multiplicand 0045  
             __CFG_BORV$3 000000              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000                       l200 7468  
                     l210 7556                       l202 7494                       l300 621C  
                     l220 75F8                       l204 756A                       l301 60AE  
                     l213 758C                       l205 74BC                       l222 7644  
                     l303 60C6                       l215 75B8                       l207 74D4  
                     l151 6FD4                       l143 6E74                       l312 6398  
                     l224 7672                       l225 767E                       l217 765C  
                     l161 70AE                       l153 6FEA                       l145 6F32  
                     l410 5774                       l218 75E0                       l251 5320  
                     l331 648A                       l315 624A                       l307 617C  
                     l403 6D80                       l411 5674                       l243 43CC  
                     l155 76A6                       l227 769C                       l171 7148  
                     l147 6F4A                       l260 53D8                       l252 5290  
                     l324 652A                       l500 4D46                       l180 72AC  
                     l172 7178                       l156 70C2                       l325 63BC  
                     l413 5680                       l229 76AA                       l181 72E8  
                     l165 70EC                       l157 708E                       l149 6FC4  
                     l270 5534                       l350 684C                       l422 5886  
                     l502 4D90                       l246 43D6                       l182 72D8  
                     l174 71D8                       l263 550C                       l255 53C4  
                     l343 6610                       l327 63D4                       l319 6300  
                     l351 66DC                       l407 6E12                       l423 5786  
                     l503 4DE6                       l511 5CBE                       l191 7374  
                     l175 7220                       l167 7104                       l264 547C  
                     l256 5334                       l504 4E16                       l520 5C2A  
                     l184 7442                       l176 723E                       l353 66F4  
                     l441 592C                       l425 5792                       l417 5706  
                     l505 4E52                       l193 73AC                       l185 730E  
                     l169 7130                       l602 4544                       l274 55BC  
                     l282 4962                       l362 69C6                       l434 599A  
                     l514 5B68                       l194 73CA                       l178 7256  
                     l259 5468                       l339 655A                       l363 686E  
                     l435 589A                       l187 7328                       l604 4532  
                     l620 442C                       l268 5528                       l284 496E  
                     l540 5E6C                       l532 5DA4                       l516 5B80  
                     l196 73E2                       l381 6AAC                       l365 6886  
                     l357 67AC                       l453 5A40                       l437 58A6  
                     l429 5818                       l525 5E40                       l189 735A  
                     l606 4540                       l374 6B40                       l462 5030  
                     l526 5CE2                       l198 742A                       l615 4568  
                     l551 4830                       l279 564C                       l295 5FF4  
                     l375 69EA                       l447 59AE                       l471 50F0  
                     l463 4F84                       l631 44D4                       l288 4A18  
                     l480 51B2                       l472 5042                       l544 5F16  
                     l528 5CFA                       l640 44FE                       l553 4888  
                     l297 600C                       l393 6C16                       l377 6A02  
                     l369 6932                       l449 59BA                       l481 5104  
                     l465 502C                       l633 44E0                       l490 51C6  
                     l474 50EC                       l466 4FAA                       l619 440E  
                     l555 4946                       l299 6080                       l483 51AE  
                     l475 5068                       l492 5270                       l484 512A  
                     l468 5008                       l580 4C7A                       l397 6CBE  
                     l389 6B6C                       l493 51EC                       l477 50C8  
                     l629 44C2                       l573 4AC8                       l486 518A  
                     l399 6CD6                       l495 524C                       l648 439A  
                     l576 4BA0                       l578 4BF6                       l599 451C  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000                       prod 000FF3  
                     wreg 000FE8              __CFG_IESO$ON 000000              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      l1082 4468                      l1083 4448  
                    l4010 6A9C                      l4100 6D70                      l4004 6A82  
                    l4022 6B2C                      l4112 6E00                      l4032 6B50  
                    l3320 4448                      l4050 6BEC                      l3308 4934  
                    l4220 5892                      l3420 4BE6                      l5004 74C4  
                    l3254 442C                      l4038 6B5C                      l4134 5678  
                    l5022 7562                      l4056 6C06                      l4152 56FE  
                    l4128 566C                      l4082 6CC6                      l4226 589E  
                    l4402 5122                      l3434 4C80                      l5018 755C  
                    l4068 6C96                      l4244 5924                      l4180 578A  
                    l4500 4E52                      l5052 75E8                      l3542 5474  
                    l3518 53D0                      l3470 5288                      l3702 60B6  
                    l4094 6D56                      l4174 577E                      l4326 4FA2  
                    l4318 4F7C                      l3438 4C8E                      l3454 43C2  
                    l5046 75D0                      l3624 4966                      l3800 63C4  
                    l4272 59B2                      l4440 51E4                      l4432 51BE  
                    l5064 764A                      l3298 4878                      l3618 495A  
                    l3722 616C                      l4290 5A38                      l4266 59A6  
                    l3644 4A10                      l3820 647A                      l3716 6152  
                    l3900 66E4                      l4364 5060                      l4356 503A  
                    l5068 7650                      l3574 552C                      l3494 532C  
                    l3814 6460                      l3750 623A                      l3670 5FE4  
                    l4198 5810                      l4614 5CEA                      l5078 7676  
                    l3568 5520                      l3736 6208                      l3912 6780  
                    l4480 4D3E                      l4632 5D94                      l4720 6E64  
                    l3594 55B4                      l3834 6516                      l3770 62F0  
                    l3930 6838                      l4394 50FC                      l4626 5D7A  
                    l4650 5E36                      l4802 6FE2                      l3764 62D6  
                    l3676 5FFC                      l3692 608C                      l4492 4DE6  
                    l4644 5E24                      l4580 5C00                      l3862 65E6  
                    l3918 679C                      l4662 5E5C                      l4910 72FE  
                    l4902 72E4                      l3848 654A                      l3784 638C  
                    l3688 6086                      l4680 5F06                      l4656 5E50  
                    l4568 5B70                      l4760 6F22                      l3882 669C  
                    l3946 6876                      l4674 5EEC                      l4586 5C1A  
                    l4850 7168                      l3868 6600                      l3964 6922  
                    l4692 5F96                      l4780 6F98                      l3958 6906  
                    l4598 5CAA                      l4950 73BA                      l4766 6F3A  
                    l4758 6F02                      l3992 69F2                      l3976 69B2  
                    l4872 7246                      l4864 7226                      l4776 6F92  
                    l4970 7430                      l4866 722E                      l4786 6FB4  
                    l4956 73D2                      l4948 73B2                      l4892 72C8  
                    l4884 72B2                      l4796 6FD0                      l4974 7436  
                    l4888 72B8                      l4998 74AC                      u4110 5622  
                    u4120 562A                      u4200 4AA4                      u4130 563A  
                    u5020 6D56                      u4310 6152                      u5110 56E6  
                    u4080 559A                      u4400 62D6                      u5200 57F8  
                    u6000 5CBC                      u4170 49FA                      u4250 6086  
                    u5050 6E00                      u4340 6208                      u4260 608C  
                    u5140 576C                      u6020 5CE0                      u3620 4398  
                    u4430 638C                      u4350 621A                      u5230 587E  
                    u3560 4558                      u4520 6516                      u4280 60AC  
                    u5320 5992                      u6200 6F02                      u3650 482E  
                    u4610 669C                      u4530 6528                      u5410 5AA6  
                    u6050 5D7A                      u3644 46F8                      u4460 63BA  
                    u4700 6838                      u5420 5AAE                      u6140 5EEC  
                    u3740 44F4                      u3820 4C80                      u3645 46F2  
                    u3670 4934                      u4710 684A                      u3830 4C8E  
                    u6230 6F92                      u7007 56F0                      u4800 69C4  
                    u4640 66DA                      u6080 5E24                      u3760 4502  
                    u6240 6F98                      u7017 5802                      u4490 6460  
                    u4730 686C                      u5290 590C                      u6170 5F96  
                    u6090 5E36                      u6330 706C                      u7107 62E0  
                    u7027 5916                      u4580 65E6                      u4820 69E8  
                    u5380 5A20                      u5620 51A8                      u6180 5FA2  
                    u3844 4604                      u3780 4AC6                      u6500 72E4  
                    u6420 7226                      u6260 6FD0                      u7117 646A  
                    u7037 5A2A                      u3845 4600                      u3694 47A6  
                    u4670 6780                      u5550 50E6                      u3854 46A6  
                    u6350 70A0                      u3695 47A0                      u7127 65F0  
                    u7047 678A                      u3855 46A2                      u4760 6906  
                    u5480 5026                      u7137 4A04                      u7057 6910  
                    u4850 6A82                      u5730 4DA0                      u7147 52D4  
                    u7067 6A8C                      u4940 6BEC                      u6620 7430  
                    u6460 72B2                      u7157 5378                      u7077 6BF6  
                    u4790 69B2                      u5750 4E26                      u6630 7436  
                    u6470 72B8                      u7167 541C                      u7087 6D60  
                    u4880 6B2C                      u5920 5B4C                      u7177 54C0  
                    u7097 615C                      u4970 6C96                      u4890 6B3E  
                    u5690 526A                      u5930 5B66                      u7187 55A4  
                    u4980 6CA2                      u6740 755C                      u6580 73B2  
                    u7197 5640                      u4990 6CBC                      u6910 76A0  
                    u6750 7562                      u5960 5C00                      u6850 764A  
                    u6860 7650                      u5990 5CAA                      u6937 6E56  
                    u6947 6FA2                      u6957 5C0A                      u6967 5D84  
                    u6977 5EF6                      u6987 4CFE                      u6997 4E5C  
            __CFG_WDTPS$1 000000                      _TRMT 007D61  __size_of_was_key_pressed 00A2  
                    _main 6E14                      _temp 0001                      fsr2h 000FDA  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
                    prodh 000FF4                      prodl 000FF3                      start 0002  
           __CFG_MCLRE$ON 000000              ___param_bank 000000           __end_of_Buttons 7C39  
                   ?_main 0043                     _SPBRG 000FAF                     _TXREG 000FAD  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
         __end_of_clr_led 4814            __CFG_EBTR3$OFF 000000            write_display@i 0051  
          write_display@j 004F             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000                     _arrow 76AD  
                   _count 0041                     _show5 7B39                     _press 0100  
            ?_read_switch 0043                     main@h 0079                     main@i 007A  
                   main@j 0077                     main@k 0072                     main@m 0076  
                   main@n 0073                     main@x 006D                     main@y 006E  
                   _write 4408            send_note@three 0044           __end_of_show0_1 7CB3  
         __end_of_show0_2 7C8B           __end_of_show0_3 78CD           __end_of_show3_1 7AB9  
         __end_of_show3_2 7C63           __end_of_show3_3 7CDF           __end_of_show4_1 7BF9  
         __end_of_show4_2 7A69           __end_of_show4_3 7A09           __end_of_show4_4 7BB9  
         __end_of_show7_1 7941           __end_of_show7_2 7855             ??_MyNotAckI2C 0043  
         __end_of_set_led 475E                     tablat 000FF5                     status 000FD8  
          __CFG_PBADEN$ON 000000           __initialization 447A              __end_of_main 76AC  
              _MyCloseI2C 434E            MygetsI2C@rdptr 0049                    ??_main 0069  
           __activetblptr 000002                _MyStartI2C 4352                    ?_write 0043  
              _MyWriteI2C 450E        __size_of_MyIdleI2C 0012                    _SSPADD 000FC8  
                  _SSPBUF 000FC9        __size_of_MyReadI2C 001C                    _i2xy64 7AF9  
     __end_of_MyNotAckI2C 4360            __CFG_XINST$OFF 000000        __size_of_MyOpenI2C 001E  
       ??_was_key_pressed 0049                    ___wmul 43E2            __CFG_STVREN$ON 000000  
      __size_of_MyStopI2C 0004                    _ledLUT 7CEF                    _circle 7941  
                  _memcpy 4436                    clear_0 4498                    clear_1 44A4  
                  clear_2 44B0                 ??_clr_led 0049        __size_of_MygetsI2C 004E  
            __pdataCOMRAM 007C              __mediumconst 76AC                    tblptrh 000FF7  
                  tblptrl 000FF6                 ??_set_led 0049                    tblptru 000FF8  
              __accesstop 0080   __end_of__initialization 44B6             main@sync_mode 006F  
           ___rparam_used 000001            __pcstackCOMRAM 0043               ?_MyCloseI2C 0043  
           __end_of_arrow 77AD             __end_of_show5 7B79             __end_of_write 4436  
       __end_of_MyIdleI2C 4372    __size_of_write_display 0134           MygetsI2C@length 004B  
       __end_of_MyReadI2C 43A2         __end_of_MyOpenI2C 43C0             ??_Myusartinit 0043  
       __end_of_MyStopI2C 435A               ?_MyStartI2C 0043                   ??_write 0045  
              __pbssBANK0 0080                __pbssBANK1 0100               _MyNotAckI2C 435A  
             ?_MyWriteI2C 0043      __size_of_read_switch 01E6         __end_of_MygetsI2C 450E  
                 ?___wmul 0043                _animation0 5274                _animation1 4948  
              _animation2 5FAC                _animation3 66A8                _animation4 564E  
              _animation5 4F64                _animation6 4C92                _animation7 5ABA  
         is_key_pressed@k 0055                   ?_memcpy 0049        __size_of_send_note 0022  
 __size_of_is_key_pressed 00A2                   _SSPCON1 000FC6                   _SSPCON2 000FC5  
       is_key_pressed@led 0053                   _SSPSTAT 000FC7       __size_of_MyCloseI2C 0004  
     __end_of_Myusartinit 4386             _write_display 4814                   _Buttons 7BF9  
                 __Hparam 0000                   __Lparam 0000           __size_of___wmul 0026  
     __size_of_MyStartI2C 0004                   __pcinit 447A           __size_of_memcpy 0044  
                 __ramtop 0600                   __ptext0 6E14                   __ptext1 460E  
                 __ptext2 43C0                   __ptext3 4AAC                   __ptext4 4436  
                 __ptext5 44C0                   __ptext6 4386                   __ptext7 435A  
                 __ptext8 456C                   __ptext9 5ABA                   _clr_led 475E  
     __size_of_MyWriteI2C 005E         __end_of_drum_midi 7AF9        MyWriteI2C@data_out 0044  
       __end_of_buttonLUT 7CEF                   _show0_1 7C8B                   _show0_2 7C63  
                 _show0_3 7855                   _show3_1 7A69                   _show3_2 7C39  
                 _show3_3 7CCB                   _show4_1 7BB9                   _show4_2 7A09  
                 _show4_3 79A9                   _show4_4 7B79                   _show7_1 78CD  
                 _show7_2 77AD                   _set_led 46B0           _was_key_pressed 460E  
    end_of_initialization 44B6         __end_of_send_note 43E2                   memcpy@d 004F  
                 memcpy@n 004D                   memcpy@s 0051             __Lmediumconst 76AC  
          ?_write_display 0043                 _RCSTAbits 000FAB                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
             ?_animation0 0058               ?_animation1 0058               ?_animation2 0058  
             ?_animation3 0043               ?_animation4 0058               ?_animation5 0058  
             ?_animation6 0058               ?_animation7 0043                clr_led@led 0055  
               _TRISCbits 000F94               _Myusartinit 4372              read_switch@i 005E  
            read_switch@j 0060                main@column 0075                 _TXSTAbits 000FAC  
          __end_of_i2xy64 7B39              ??_MyCloseI2C 0043            __end_of___wmul 4408  
             _BAUDCONbits 000FB8            __end_of_ledLUT 7CFF             __pidataCOMRAM 434C  
          __end_of_circle 79A9          _horizental_flash 7CB3            __end_of_memcpy 447A  
 __end_of_was_key_pressed 46B0       start_initialization 447A            _is_key_pressed 456C  
               _MyIdleI2C 4360                 _MyReadI2C 4386              ??_MyStartI2C 0043  
     __size_of_animation0 03DA       __size_of_animation1 0164       __size_of_animation2 06FC  
     __size_of_animation3 076C       __size_of_animation4 046C       __size_of_animation5 0310  
     __size_of_animation6 02D2           ??_write_display 0049       __size_of_animation7 04F2  
               _MyOpenI2C 43A2        __end_of_MyCloseI2C 4352              ?_MyNotAckI2C 0043  
            ??_MyWriteI2C 0044          __CFG_OSC$INTIO67 000000                 _MyStopI2C 4356  
               _MygetsI2C 44C0                  ??___wmul 0047          __CFG_LPT1OSC$OFF 000000  
                ??_memcpy 004F        __end_of_MyStartI2C 4356    __end_of_is_key_pressed 460E  
      __end_of_MyWriteI2C 456C               __pbssCOMRAM 0001        MyOpenI2C@sync_mode 0044  
              ?_MyIdleI2C 0043                ?_MyReadI2C 0043             ??_read_switch 0054  
              ?_MyOpenI2C 0043                ?_MyStopI2C 0043         __CFG_CCP2MX$PORTC 000000  
              ?_MygetsI2C 0049             __pmediumconst 76AC             set_led@matrix 0051  
                ?_clr_led 0043           ?_is_key_pressed 0043          ?_was_key_pressed 0043  
                ?_set_led 0043                 _drum_midi 7AB9                 _buttonLUT 7CDF  
              set_led@led 0053            __size_of_write 002E            ___wmul@product 0047  
      was_key_pressed@led 0053       __end_of_read_switch 4C92                 _play_mode 007C  
               _send_note 43C0             animation2@col 005E             animation2@row 0061  
                _PIR1bits 000F9E                  _PIR2bits 000FA1               write@status 0047  
            ??_animation0 0059              ??_animation1 0059              ??_animation2 005A  
            ??_animation3 0058              ??_animation4 0059              ??_animation5 005A  
            ??_animation6 0059              ??_animation7 0058         ___wmul@multiplier 0043  
             ??_MyIdleI2C 0043              ?_Myusartinit 0043               ??_MyReadI2C 0043  
            send_note@one 0045              send_note@two 0043               ??_MyOpenI2C 0044  
      __end_of_animation0 564E        __end_of_animation1 4AAC        __end_of_animation2 66A8  
      __end_of_animation3 6E14        __end_of_animation4 5ABA        __end_of_animation5 5274  
      __end_of_animation6 4F64        __end_of_animation7 5FAC  __end_of_horizental_flash 7CCB  
             ??_MyStopI2C 0043     was_key_pressed@matrix 0051      __size_of_MyNotAckI2C 0006  
              ?_send_note 0043                  __Hrparam 0000                 memcpy@tmp 0053  
           MyOpenI2C@slew 0043                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
             ??_MygetsI2C 004C          __size_of_clr_led 00B6                  __ptext10 4C92  
                __ptext11 4F64                  __ptext20 4360                  __ptext12 564E  
                __ptext21 4356                  __ptext13 66A8                  __ptext22 4352  
                __ptext14 5FAC                  __ptext23 46B0                  __ptext15 4948  
                __ptext24 475E                  __ptext16 5274                  __ptext25 43E2  
                __ptext17 4814                  __ptext26 4372                  __ptext18 4408  
                __ptext27 43A2                  __ptext19 450E                  __ptext28 434E  
        __size_of_set_led 00AE               _read_switch 4AAC             __size_of_main 0898  
                _matrices 0080           main@rightbutton 0074                  clr_led@i 0057  
                main@note 0071                  main@slew 0070                  memcpy@d1 0049  
                memcpy@s1 004B             write@data_out 0046     __end_of_write_display 4948  
           clr_led@matrix 0053               ??_send_note 0045                  set_led@i 0055  
              _OSCCONbits 000FD3          was_key_pressed@k 0055                 write@data 0045  
             animation0@i 005F               animation0@j 005E               animation1@i 005E  
             animation0@m 005D               animation1@j 005F               animation0@n 0058  
             animation2@h 0059               animation2@i 0065               animation1@m 005C  
             animation2@j 0067               animation1@n 0058               animation2@m 0060  
             animation3@i 005D               animation3@j 005F               animation2@n 0058  
             animation0@x 005B               animation4@h 0058               animation6@a 005E  
             animation4@i 005C               animation3@m 005C               animation6@b 0060  
             animation4@j 005D               animation6@c 0062               animation6@d 0064  
             animation1@x 005D               animation5@h 0059               animation5@i 005E  
             animation4@m 005B               animation5@j 005D               animation2@x 0063  
             animation5@m 005C               animation5@n 0058               animation7@h 005A  
             animation6@m 0066               animation7@i 005B               animation7@j 005D  
             animation6@n 0058               animation5@x 005F               animation6@x 005D  
        ??_is_key_pressed 0049               _SSPCON1bits 000FC6               _SSPCON2bits 000FC5  
    __size_of_Myusartinit 0014  
